ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"I2C_BLE_EZI2C_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_BLE_EZI2C_STRETCH_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_BLE_EZI2C_STRETCH_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	I2C_BLE_EZI2C_STRETCH_ISR, %function
  25              	I2C_BLE_EZI2C_STRETCH_ISR:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\I2C_BLE_EZI2C_INT.c"
   1:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * \file I2C_BLE_EZI2C_INT.c
   3:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * \version 4.0
   4:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** *
   5:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** *
   9:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** *
  11:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  19:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** #include "I2C_BLE_PVT.h"
  20:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** #include "I2C_BLE_EZI2C_PVT.h"
  21:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  23:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** #if(I2C_BLE_EZI2C_SCL_STRETCH_ENABLE_CONST)
  24:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     /*******************************************************************************
  25:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     * Function Name: I2C_BLE_EZI2C_STRETCH_ISR
  26:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     ****************************************************************************//**
  27:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     *
  28:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode.
  29:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     *  The clock stretching is used during operation.
  30:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 2


  31:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     *******************************************************************************/
  32:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     CY_ISR_PROTO(I2C_BLE_EZI2C_STRETCH_ISR)
  33:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     {
  28              		.loc 1 33 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  34:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         static uint16 locBufSize;
  35:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 locIndex;
  36:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 locStatus;
  37:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  38:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 endTransfer;
  39:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 fifoIndex;
  40:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 locByte;
  41:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  42:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 locIntrCause;
  43:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 locIntrSlave;
  44:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  45:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #ifdef I2C_BLE_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  46:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         I2C_BLE_EZI2C_STRETCH_ISR_EntryCallback();
  47:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #endif /* I2C_BLE_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  48:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  49:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #if(I2C_BLE_SECONDARY_ADDRESS_ENABLE_CONST)
  50:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  51:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         static volatile uint8 * I2C_BLE_dataBuffer; /* Pointer to data buffer              */
  52:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         static uint16 I2C_BLE_bufSizeBuf;           /* Size of buffer in bytes             */
  53:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         static uint16 I2C_BLE_protectBuf;           /* Start index of write protected area */
  54:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  55:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         static uint8 activeAddress;
  56:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         uint32 ackResponse;
  57:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  58:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         ackResponse = I2C_BLE_EZI2C_ACK_RECEIVED_ADDRESS;
  40              		.loc 1 58 0
  41 0006 0123     		movs	r3, #1
  42 0008 FB60     		str	r3, [r7, #12]
  59:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #endif /* (I2C_BLE_SECONDARY_ADDRESS_ENABLE_CONST) */
  60:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  61:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #if !defined (CY_REMOVE_I2C_BLE_CUSTOM_INTR_HANDLER)
  62:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         if(NULL != I2C_BLE_customIntrHandler)
  43              		.loc 1 62 0
  44 000a C74B     		ldr	r3, .L55
  45 000c 1B68     		ldr	r3, [r3]
  46 000e 002B     		cmp	r3, #0
  47 0010 02D0     		beq	.L2
  63:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         {
  64:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_customIntrHandler();
  48              		.loc 1 64 0
  49 0012 C54B     		ldr	r3, .L55
  50 0014 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 3


  51 0016 9847     		blx	r3
  52              	.L2:
  65:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         }
  66:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #else
  67:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         CY_I2C_BLE_CUSTOM_INTR_HANDLER();
  68:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_I2C_BLE_CUSTOM_INTR_HANDLER) */
  69:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  70:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         /* Make local copy of global variable */
  71:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         locIndex = I2C_BLE_EZI2C_GET_INDEX(activeAddress);
  53              		.loc 1 71 0
  54 0018 C44B     		ldr	r3, .L55+4
  55 001a 1B78     		ldrb	r3, [r3]
  56 001c 002B     		cmp	r3, #0
  57 001e 02D1     		bne	.L3
  58              		.loc 1 71 0 is_stmt 0 discriminator 1
  59 0020 C34B     		ldr	r3, .L55+8
  60 0022 1B88     		ldrh	r3, [r3]
  61 0024 01E0     		b	.L4
  62              	.L3:
  63              		.loc 1 71 0 discriminator 2
  64 0026 C34B     		ldr	r3, .L55+12
  65 0028 1B88     		ldrh	r3, [r3]
  66              	.L4:
  67              		.loc 1 71 0 discriminator 4
  68 002a FB61     		str	r3, [r7, #28]
  72:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  73:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         /* Get interrupt sources */
  74:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         locIntrSlave = I2C_BLE_GetSlaveInterruptSource();
  69              		.loc 1 74 0 is_stmt 1 discriminator 4
  70 002c C24B     		ldr	r3, .L55+16
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 BB60     		str	r3, [r7, #8]
  75:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         locIntrCause = I2C_BLE_GetInterruptCause();
  73              		.loc 1 75 0 discriminator 4
  74 0032 C24B     		ldr	r3, .L55+20
  75 0034 1B68     		ldr	r3, [r3]
  76 0036 7B60     		str	r3, [r7, #4]
  76:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  77:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  78:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  79:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  80:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         */
  81:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         if(0u != (locIntrSlave & (I2C_BLE_INTR_SLAVE_I2C_ARB_LOST |
  77              		.loc 1 81 0 discriminator 4
  78 0038 BA68     		ldr	r2, [r7, #8]
  79 003a 0223     		movs	r3, #2
  80 003c FF33     		adds	r3, r3, #255
  81 003e 1340     		ands	r3, r2
  82 0040 49D0     		beq	.L5
  82:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                   I2C_BLE_INTR_SLAVE_I2C_BUS_ERROR)))
  83:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         {
  84:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_CTRL_REG &= (uint32) ~I2C_BLE_CTRL_ENABLED; /* Disable SCB block */
  83              		.loc 1 84 0
  84 0042 BF4B     		ldr	r3, .L55+24
  85 0044 BE4A     		ldr	r2, .L55+24
  86 0046 1268     		ldr	r2, [r2]
  87 0048 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 4


  88 004a 5208     		lsrs	r2, r2, #1
  89 004c 1A60     		str	r2, [r3]
  85:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  86:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         #if(I2C_BLE_CY_SCBIP_V0)
  87:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             if(0u != ((uint8) I2C_BLE_EZI2C_STATUS_BUSY & I2C_BLE_curStatus))
  88:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         #endif /* (I2C_BLE_CY_SCBIP_V0) */
  89:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             {
  90:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 I2C_BLE_curStatus &= (uint8) ~I2C_BLE_EZI2C_STATUS_BUSY;
  90              		.loc 1 90 0
  91 004e BD4B     		ldr	r3, .L55+28
  92 0050 1B78     		ldrb	r3, [r3]
  93 0052 DBB2     		uxtb	r3, r3
  94 0054 2022     		movs	r2, #32
  95 0056 9343     		bics	r3, r2
  96 0058 DAB2     		uxtb	r2, r3
  97 005a BA4B     		ldr	r3, .L55+28
  98 005c 1A70     		strb	r2, [r3]
  91:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 I2C_BLE_curStatus |= (uint8)  I2C_BLE_EZI2C_STATUS_ERR;
  99              		.loc 1 91 0
 100 005e B94B     		ldr	r3, .L55+28
 101 0060 1B78     		ldrb	r3, [r3]
 102 0062 DBB2     		uxtb	r3, r3
 103 0064 1022     		movs	r2, #16
 104 0066 1343     		orrs	r3, r2
 105 0068 DAB2     		uxtb	r2, r3
 106 006a B64B     		ldr	r3, .L55+28
 107 006c 1A70     		strb	r2, [r3]
  92:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
  93:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  94:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 if(0u == (I2C_BLE_GetTxInterruptMode() & I2C_BLE_INTR_TX_EMPTY))
 108              		.loc 1 94 0
 109 006e B64B     		ldr	r3, .L55+32
 110 0070 1B68     		ldr	r3, [r3]
 111 0072 1022     		movs	r2, #16
 112 0074 1340     		ands	r3, r2
 113 0076 0FD1     		bne	.L6
  95:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
  96:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Write complete */
  97:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     if(I2C_BLE_indexBuf1 != I2C_BLE_offsetBuf1)
 114              		.loc 1 97 0
 115 0078 B44B     		ldr	r3, .L55+36
 116 007a 1B78     		ldrb	r3, [r3]
 117 007c 9AB2     		uxth	r2, r3
 118 007e AC4B     		ldr	r3, .L55+8
 119 0080 1B88     		ldrh	r3, [r3]
 120 0082 9A42     		cmp	r2, r3
 121 0084 10D0     		beq	.L8
  98:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
  99:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_curStatus |= (uint8) I2C_BLE_INTR_SLAVE_I2C_WRITE_STOP;
 122              		.loc 1 99 0
 123 0086 AF4B     		ldr	r3, .L55+28
 124 0088 1B78     		ldrb	r3, [r3]
 125 008a DBB2     		uxtb	r3, r3
 126 008c 0822     		movs	r2, #8
 127 008e 1343     		orrs	r3, r2
 128 0090 DAB2     		uxtb	r2, r3
 129 0092 AC4B     		ldr	r3, .L55+28
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 5


 130 0094 1A70     		strb	r2, [r3]
 131 0096 07E0     		b	.L8
 132              	.L6:
 100:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 101:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
 102:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 else
 103:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
 104:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Read complete */
 105:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     I2C_BLE_curStatus |= (uint8) I2C_BLE_INTR_SLAVE_I2C_NACK;
 133              		.loc 1 105 0
 134 0098 AA4B     		ldr	r3, .L55+28
 135 009a 1B78     		ldrb	r3, [r3]
 136 009c DBB2     		uxtb	r3, r3
 137 009e 0222     		movs	r2, #2
 138 00a0 1343     		orrs	r3, r2
 139 00a2 DAB2     		uxtb	r2, r3
 140 00a4 A74B     		ldr	r3, .L55+28
 141 00a6 1A70     		strb	r2, [r3]
 142              	.L8:
 106:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
 107:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             }
 108:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 109:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_DISABLE_SLAVE_AUTO_DATA;
 143              		.loc 1 109 0
 144 00a8 A94B     		ldr	r3, .L55+40
 145 00aa A94A     		ldr	r2, .L55+40
 146 00ac 1268     		ldr	r2, [r2]
 147 00ae A949     		ldr	r1, .L55+44
 148 00b0 0A40     		ands	r2, r1
 149 00b2 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 111:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 112:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_SetRxInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 150              		.loc 1 112 0
 151 00b4 A84B     		ldr	r3, .L55+48
 152 00b6 0022     		movs	r2, #0
 153 00b8 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_SetTxInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 154              		.loc 1 113 0
 155 00ba A34B     		ldr	r3, .L55+32
 156 00bc 0022     		movs	r2, #0
 157 00be 1A60     		str	r2, [r3]
 114:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 115:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         #if(I2C_BLE_CY_SCBIP_V0)
 116:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 117:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_ClearRxInterruptSource(I2C_BLE_INTR_RX_ALL);
 118:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_ClearSlaveInterruptSource(I2C_BLE_INTR_SLAVE_ALL);
 119:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         #endif /* (I2C_BLE_CY_SCBIP_V0) */
 120:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 121:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_fsmState = I2C_BLE_EZI2C_FSM_IDLE;
 158              		.loc 1 121 0
 159 00c0 A64B     		ldr	r3, .L55+52
 160 00c2 0022     		movs	r2, #0
 161 00c4 1A70     		strb	r2, [r3]
 122:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 123:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             I2C_BLE_CTRL_REG |= (uint32) I2C_BLE_CTRL_ENABLED;  /* Enable SCB block */
 162              		.loc 1 123 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 6


 163 00c6 9E4B     		ldr	r3, .L55+24
 164 00c8 9D4A     		ldr	r2, .L55+24
 165 00ca 1268     		ldr	r2, [r2]
 166 00cc 8021     		movs	r1, #128
 167 00ce 0906     		lsls	r1, r1, #24
 168 00d0 0A43     		orrs	r2, r1
 169 00d2 1A60     		str	r2, [r3]
 170 00d4 19E2     		b	.L9
 171              	.L5:
 124:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         }
 125:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         else
 126:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         {
 127:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 128:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 129:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             if(0u != (locIntrCause & I2C_BLE_INTR_CAUSE_I2C_EC))
 172              		.loc 1 129 0
 173 00d6 7B68     		ldr	r3, [r7, #4]
 174 00d8 1022     		movs	r2, #16
 175 00da 1340     		ands	r3, r2
 176 00dc 02D0     		beq	.L10
 130:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             {
 131:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 132:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 I2C_BLE_SetI2CExtClkInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 177              		.loc 1 132 0
 178 00de A04B     		ldr	r3, .L55+56
 179 00e0 0022     		movs	r2, #0
 180 00e2 1A60     		str	r2, [r3]
 181              	.L10:
 133:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             }
 134:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 135:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             if(0u != (locIntrCause & (I2C_BLE_INTR_CAUSE_RX | I2C_BLE_INTR_CAUSE_SLAVE)))
 182              		.loc 1 135 0
 183 00e4 7B68     		ldr	r3, [r7, #4]
 184 00e6 0A22     		movs	r2, #10
 185 00e8 1340     		ands	r3, r2
 186 00ea 00D1     		bne	.LCB147
 187 00ec CAE0     		b	.L11	@long jump
 188              	.LCB147:
 136:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             {
 137:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 138:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 139:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 if (0u != (I2C_BLE_GetRxInterruptSourceMasked() & I2C_BLE_INTR_RX_NOT_EMPTY))
 189              		.loc 1 139 0
 190 00ee 9D4B     		ldr	r3, .L55+60
 191 00f0 1B68     		ldr	r3, [r3]
 192 00f2 0422     		movs	r2, #4
 193 00f4 1340     		ands	r3, r2
 194 00f6 61D0     		beq	.L12
 140:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
 141:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 #if(I2C_BLE_SECONDARY_ADDRESS_ENABLE_CONST)
 142:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 143:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 144:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 145:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     */
 146:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     if (0u == (locIntrCause & I2C_BLE_INTR_CAUSE_SLAVE))
 195              		.loc 1 146 0
 196 00f8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 7


 197 00fa 0222     		movs	r2, #2
 198 00fc 1340     		ands	r3, r2
 199 00fe 00D0     		beq	.LCB158
 200 0100 C0E0     		b	.L11	@long jump
 201              	.LCB158:
 147:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 #endif /* (I2C_BLE_SECONDARY_ADDRESS_ENABLE_CONST) */
 148:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 149:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locByte = I2C_BLE_RX_FIFO_RD_REG;
 202              		.loc 1 149 0
 203 0102 994B     		ldr	r3, .L55+64
 204 0104 1B68     		ldr	r3, [r3]
 205 0106 3B60     		str	r3, [r7]
 150:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 151:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         switch(I2C_BLE_fsmState)
 206              		.loc 1 151 0
 207 0108 944B     		ldr	r3, .L55+52
 208 010a 1B78     		ldrb	r3, [r3]
 209 010c 002B     		cmp	r3, #0
 210 010e 1DD0     		beq	.L15
 211 0110 012B     		cmp	r3, #1
 212 0112 4BD1     		bne	.L53
 152:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 153:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         case I2C_BLE_EZI2C_FSM_BYTE_WRITE:
 154:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             if(0u != locBufSize)
 213              		.loc 1 154 0
 214 0114 954B     		ldr	r3, .L55+68
 215 0116 1B88     		ldrh	r3, [r3]
 216 0118 002B     		cmp	r3, #0
 217 011a 13D0     		beq	.L17
 155:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             {
 156:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 157:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 I2C_BLE_I2C_SLAVE_GENERATE_ACK;
 218              		.loc 1 157 0
 219 011c 944B     		ldr	r3, .L55+72
 220 011e 0122     		movs	r2, #1
 221 0120 1A60     		str	r2, [r3]
 158:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 159:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 I2C_BLE_dataBuffer[locIndex] = (uint8) locByte;
 222              		.loc 1 159 0
 223 0122 944B     		ldr	r3, .L55+76
 224 0124 1A68     		ldr	r2, [r3]
 225 0126 FB69     		ldr	r3, [r7, #28]
 226 0128 D318     		adds	r3, r2, r3
 227 012a 3A68     		ldr	r2, [r7]
 228 012c D2B2     		uxtb	r2, r2
 229 012e 1A70     		strb	r2, [r3]
 160:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 locIndex++;
 230              		.loc 1 160 0
 231 0130 FB69     		ldr	r3, [r7, #28]
 232 0132 0133     		adds	r3, r3, #1
 233 0134 FB61     		str	r3, [r7, #28]
 161:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 locBufSize--;
 234              		.loc 1 161 0
 235 0136 8D4B     		ldr	r3, .L55+68
 236 0138 1B88     		ldrh	r3, [r3]
 237 013a 013B     		subs	r3, r3, #1
 238 013c 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 8


 239 013e 8B4B     		ldr	r3, .L55+68
 240 0140 1A80     		strh	r2, [r3]
 162:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 163:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             else
 164:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             {
 165:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 166:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 I2C_BLE_I2C_SLAVE_GENERATE_NACK;
 167:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 168:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             break;
 241              		.loc 1 168 0
 242 0142 37E0     		b	.L19
 243              	.L17:
 166:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 244              		.loc 1 166 0
 245 0144 8A4B     		ldr	r3, .L55+72
 246 0146 0222     		movs	r2, #2
 247 0148 1A60     		str	r2, [r3]
 248              		.loc 1 168 0
 249 014a 33E0     		b	.L19
 250              	.L15:
 169:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 170:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #if(I2C_BLE_SUB_ADDRESS_SIZE16_CONST)
 171:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         case I2C_BLE_EZI2C_FSM_OFFSET_HI8:
 172:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 173:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_I2C_SLAVE_GENERATE_ACK;
 174:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 175:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Store offset most significant byre */
 176:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 177:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 178:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_fsmState = I2C_BLE_EZI2C_FSM_OFFSET_LO8;
 179:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 180:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             break;
 181:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #endif /* (I2C_BLE_SUB_ADDRESS_SIZE16_CONST) */
 182:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 183:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         case I2C_BLE_EZI2C_FSM_OFFSET_LO8:
 184:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 185:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             #if (I2C_BLE_SUB_ADDRESS_SIZE16)
 186:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             {
 187:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 188:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
 189:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 190:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             #endif
 191:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 192:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Check offset against buffer size */
 193:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             if(locByte < (uint32) I2C_BLE_bufSizeBuf)
 251              		.loc 1 193 0
 252 014c 8A4B     		ldr	r3, .L55+80
 253 014e 1B88     		ldrh	r3, [r3]
 254 0150 1A00     		movs	r2, r3
 255 0152 3B68     		ldr	r3, [r7]
 256 0154 9A42     		cmp	r2, r3
 257 0156 25D9     		bls	.L20
 194:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             {
 195:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 I2C_BLE_I2C_SLAVE_GENERATE_ACK;
 258              		.loc 1 195 0
 259 0158 854B     		ldr	r3, .L55+72
 260 015a 0122     		movs	r2, #1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 9


 261 015c 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 197:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 198:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 locIndex = locByte;
 262              		.loc 1 198 0
 263 015e 3B68     		ldr	r3, [r7]
 264 0160 FB61     		str	r3, [r7, #28]
 199:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 200:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 201:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < I2C_BLE_protectBuf) ?
 265              		.loc 1 201 0
 266 0162 864B     		ldr	r3, .L55+84
 267 0164 1B88     		ldrh	r3, [r3]
 268 0166 1A00     		movs	r2, r3
 269 0168 3B68     		ldr	r3, [r7]
 270 016a 9A42     		cmp	r2, r3
 271 016c 06D9     		bls	.L21
 272              		.loc 1 201 0 is_stmt 0 discriminator 1
 273 016e 834B     		ldr	r3, .L55+84
 274 0170 1A88     		ldrh	r2, [r3]
 275 0172 3B68     		ldr	r3, [r7]
 276 0174 9BB2     		uxth	r3, r3
 277 0176 D31A     		subs	r3, r2, r3
 278 0178 9AB2     		uxth	r2, r3
 279 017a 00E0     		b	.L22
 280              	.L21:
 281              		.loc 1 201 0 discriminator 2
 282 017c 0022     		movs	r2, #0
 283              	.L22:
 284              		.loc 1 201 0 discriminator 4
 285 017e 7B4B     		ldr	r3, .L55+68
 286 0180 1A80     		strh	r2, [r3]
 202:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                                        (I2C_BLE_protectBuf - locByte) : (0u));
 203:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 204:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             #if(I2C_BLE_CY_SCBIP_V0)
 205:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 206:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 if(locBufSize < I2C_BLE_EZI2C_FIFO_SIZE)
 207:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 {
 208:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 209:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     I2C_BLE_fsmState = I2C_BLE_EZI2C_FSM_BYTE_WRITE;
 210:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 }
 211:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 212:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 else if(locBufSize == I2C_BLE_EZI2C_FIFO_SIZE)
 213:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 {
 214:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     I2C_BLE_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 215:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     I2C_BLE_SetRxInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 216:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 }
 217:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 else
 218:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 {
 219:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     I2C_BLE_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is 
 220:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     I2C_BLE_SetRxInterruptMode(I2C_BLE_INTR_RX_FULL);
 221:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 }
 222:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 223:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             #else
 224:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 225:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 #if(I2C_BLE_SECONDARY_ADDRESS_ENABLE)
 226:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 10


 227:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 228:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 229:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     */
 230:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     I2C_BLE_fsmState = I2C_BLE_EZI2C_FSM_BYTE_WRITE;
 287              		.loc 1 230 0 is_stmt 1 discriminator 4
 288 0182 764B     		ldr	r3, .L55+52
 289 0184 0122     		movs	r2, #1
 290 0186 1A70     		strb	r2, [r3]
 231:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 }
 232:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 #else
 233:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 {
 234:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     if (locBufSize < I2C_BLE_EZI2C_FIFO_SIZE)
 235:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     {
 236:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 237:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                         I2C_BLE_fsmState = I2C_BLE_EZI2C_FSM_BYTE_WRITE;
 238:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     }
 239:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
 240:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     else if (locBufSize == I2C_BLE_EZI2C_FIFO_SIZE)
 241:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     {
 242:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                         I2C_BLE_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is ful
 243:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                         I2C_BLE_SetRxInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 244:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     }
 245:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     else
 246:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     {
 247:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                         I2C_BLE_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO
 248:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                         I2C_BLE_SetRxInterruptMode(I2C_BLE_INTR_RX_FULL);
 249:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                     }
 250:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 }
 251:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 #endif
 252:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 253:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             #endif /* (I2C_BLE_CY_SCBIP_V0) */
 254:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 255:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 256:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 I2C_BLE_EZI2C_SET_OFFSET(activeAddress, locIndex);
 291              		.loc 1 256 0 discriminator 4
 292 0188 684B     		ldr	r3, .L55+4
 293 018a 1B78     		ldrb	r3, [r3]
 294 018c 002B     		cmp	r3, #0
 295 018e 04D1     		bne	.L23
 296              		.loc 1 256 0 is_stmt 0 discriminator 1
 297 0190 FB69     		ldr	r3, [r7, #28]
 298 0192 DAB2     		uxtb	r2, r3
 299 0194 6D4B     		ldr	r3, .L55+36
 300 0196 1A70     		strb	r2, [r3]
 257:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 258:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             else
 259:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             {
 260:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 261:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 I2C_BLE_I2C_SLAVE_GENERATE_NACK;
 262:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 263:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             break;
 301              		.loc 1 263 0 is_stmt 1 discriminator 1
 302 0198 0CE0     		b	.L19
 303              	.L23:
 256:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 304              		.loc 1 256 0 discriminator 2
 305 019a FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 11


 306 019c DAB2     		uxtb	r2, r3
 307 019e 784B     		ldr	r3, .L55+88
 308 01a0 1A70     		strb	r2, [r3]
 309              		.loc 1 263 0 discriminator 2
 310 01a2 07E0     		b	.L19
 311              	.L20:
 261:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 312              		.loc 1 261 0
 313 01a4 724B     		ldr	r3, .L55+72
 314 01a6 0222     		movs	r2, #2
 315 01a8 1A60     		str	r2, [r3]
 316              		.loc 1 263 0
 317 01aa 03E0     		b	.L19
 318              	.L53:
 264:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 265:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         default:
 266:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 319              		.loc 1 266 0
 320 01ac 0020     		movs	r0, #0
 321 01ae FFF7FEFF 		bl	CyHalt
 267:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             break;
 322              		.loc 1 267 0
 323 01b2 C046     		nop
 324              	.L19:
 268:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 269:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 270:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ClearRxInterruptSource(I2C_BLE_INTR_RX_NOT_EMPTY);
 325              		.loc 1 270 0
 326 01b4 734B     		ldr	r3, .L55+92
 327 01b6 0422     		movs	r2, #4
 328 01b8 1A60     		str	r2, [r3]
 329 01ba 63E0     		b	.L11
 330              	.L12:
 271:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 272:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
 273:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 274:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 275:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 else if (0u != (I2C_BLE_I2C_CTRL_REG & I2C_BLE_I2C_CTRL_S_READY_DATA_ACK))
 331              		.loc 1 275 0
 332 01bc 644B     		ldr	r3, .L55+40
 333 01be 1A68     		ldr	r2, [r3]
 334 01c0 8023     		movs	r3, #128
 335 01c2 9B01     		lsls	r3, r3, #6
 336 01c4 1340     		ands	r3, r2
 337 01c6 5DD0     		beq	.L11
 276:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
 277:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 278:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 279:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 280:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     */
 281:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     if(0u != (locIntrCause & I2C_BLE_INTR_CAUSE_SLAVE))
 338              		.loc 1 281 0
 339 01c8 7B68     		ldr	r3, [r7, #4]
 340 01ca 0222     		movs	r2, #2
 341 01cc 1340     		ands	r3, r2
 342 01ce 23D0     		beq	.L26
 282:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 12


 283:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 284:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         fifoIndex = I2C_BLE_GET_RX_FIFO_ENTRIES;
 343              		.loc 1 284 0
 344 01d0 6D4B     		ldr	r3, .L55+96
 345 01d2 1B68     		ldr	r3, [r3]
 346 01d4 1F22     		movs	r2, #31
 347 01d6 1340     		ands	r3, r2
 348 01d8 3B61     		str	r3, [r7, #16]
 285:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 286:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         #if(I2C_BLE_SECONDARY_ADDRESS_ENABLE)
 287:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 288:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Update with current address match */
 289:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             if(I2C_BLE_CHECK_INTR_SLAVE_MASKED(I2C_BLE_INTR_SLAVE_I2C_ADDR_MATCH))
 349              		.loc 1 289 0
 350 01da 6C4B     		ldr	r3, .L55+100
 351 01dc 1B68     		ldr	r3, [r3]
 352 01de 4022     		movs	r2, #64
 353 01e0 1340     		ands	r3, r2
 354 01e2 10D0     		beq	.L27
 290:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             {
 291:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 292:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 fifoIndex = I2C_BLE_GET_RX_FIFO_ENTRIES;
 355              		.loc 1 292 0
 356 01e4 684B     		ldr	r3, .L55+96
 357 01e6 1B68     		ldr	r3, [r3]
 358 01e8 1F22     		movs	r2, #31
 359 01ea 1340     		ands	r3, r2
 360 01ec 3B61     		str	r3, [r7, #16]
 293:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 294:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 295:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 296:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 297:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 */
 298:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                 fifoIndex -= ((0u != I2C_BLE_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 361              		.loc 1 298 0
 362 01ee 664B     		ldr	r3, .L55+96
 363 01f0 1A68     		ldr	r2, [r3]
 364 01f2 8023     		movs	r3, #128
 365 01f4 1B02     		lsls	r3, r3, #8
 366 01f6 1340     		ands	r3, r2
 367 01f8 5A42     		rsbs	r2, r3, #0
 368 01fa 5341     		adcs	r3, r3, r2
 369 01fc DBB2     		uxtb	r3, r3
 370 01fe 1A00     		movs	r2, r3
 371 0200 3B69     		ldr	r3, [r7, #16]
 372 0202 9B1A     		subs	r3, r3, r2
 373 0204 3B61     		str	r3, [r7, #16]
 374              	.L27:
 299:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             }
 300:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 301:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         #endif
 302:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 303:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_DISABLE_SLAVE_AUTO_DATA;
 375              		.loc 1 303 0
 376 0206 524B     		ldr	r3, .L55+40
 377 0208 514A     		ldr	r2, .L55+40
 378 020a 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 13


 379 020c 5149     		ldr	r1, .L55+44
 380 020e 0A40     		ands	r2, r1
 381 0210 1A60     		str	r2, [r3]
 304:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         endTransfer = I2C_BLE_EZI2C_CONTINUE_TRANSFER;
 382              		.loc 1 304 0
 383 0212 0123     		movs	r3, #1
 384 0214 7B61     		str	r3, [r7, #20]
 385 0216 22E0     		b	.L30
 386              	.L26:
 305:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 306:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     else
 307:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 308:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 309:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 310:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 311:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locBufSize -= (uint16) I2C_BLE_EZI2C_FIFO_SIZE;
 387              		.loc 1 311 0
 388 0218 544B     		ldr	r3, .L55+68
 389 021a 1B88     		ldrh	r3, [r3]
 390 021c 083B     		subs	r3, r3, #8
 391 021e 9AB2     		uxth	r2, r3
 392 0220 524B     		ldr	r3, .L55+68
 393 0222 1A80     		strh	r2, [r3]
 312:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 313:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         if(locBufSize <= I2C_BLE_EZI2C_FIFO_SIZE)
 394              		.loc 1 313 0
 395 0224 514B     		ldr	r3, .L55+68
 396 0226 1B88     		ldrh	r3, [r3]
 397 0228 082B     		cmp	r3, #8
 398 022a 05D8     		bhi	.L29
 314:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 315:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 316:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 399              		.loc 1 316 0
 400 022c 4F4B     		ldr	r3, .L55+68
 401 022e 1B88     		ldrh	r3, [r3]
 402 0230 3B61     		str	r3, [r7, #16]
 317:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             endTransfer = I2C_BLE_EZI2C_COMPLETE_TRANSFER;
 403              		.loc 1 317 0
 404 0232 0023     		movs	r3, #0
 405 0234 7B61     		str	r3, [r7, #20]
 406 0236 12E0     		b	.L30
 407              	.L29:
 318:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 319:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         else
 320:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 321:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Continue  transaction */
 322:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             fifoIndex   = I2C_BLE_EZI2C_FIFO_SIZE;
 408              		.loc 1 322 0
 409 0238 0823     		movs	r3, #8
 410 023a 3B61     		str	r3, [r7, #16]
 323:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             endTransfer = I2C_BLE_EZI2C_CONTINUE_TRANSFER;
 411              		.loc 1 323 0
 412 023c 0123     		movs	r3, #1
 413 023e 7B61     		str	r3, [r7, #20]
 324:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 325:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 14


 326:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 327:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 414              		.loc 1 327 0
 415 0240 0DE0     		b	.L30
 416              	.L31:
 328:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 329:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Store data in buffer */
 330:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_dataBuffer[locIndex] = (uint8) I2C_BLE_RX_FIFO_RD_REG;
 417              		.loc 1 330 0 discriminator 2
 418 0242 4C4B     		ldr	r3, .L55+76
 419 0244 1A68     		ldr	r2, [r3]
 420 0246 FB69     		ldr	r3, [r7, #28]
 421 0248 D218     		adds	r2, r2, r3
 422 024a 474B     		ldr	r3, .L55+64
 423 024c 1B68     		ldr	r3, [r3]
 424 024e DBB2     		uxtb	r3, r3
 425 0250 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locIndex++;
 426              		.loc 1 331 0 discriminator 2
 427 0252 FB69     		ldr	r3, [r7, #28]
 428 0254 0133     		adds	r3, r3, #1
 429 0256 FB61     		str	r3, [r7, #28]
 327:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 430              		.loc 1 327 0 discriminator 2
 431 0258 3B69     		ldr	r3, [r7, #16]
 432 025a 013B     		subs	r3, r3, #1
 433 025c 3B61     		str	r3, [r7, #16]
 434              	.L30:
 327:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 435              		.loc 1 327 0 is_stmt 0 discriminator 1
 436 025e 3B69     		ldr	r3, [r7, #16]
 437 0260 002B     		cmp	r3, #0
 438 0262 EED1     		bne	.L31
 332:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 333:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 334:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 335:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     if(I2C_BLE_EZI2C_COMPLETE_TRANSFER == endTransfer)
 439              		.loc 1 335 0 is_stmt 1
 440 0264 7B69     		ldr	r3, [r7, #20]
 441 0266 002B     		cmp	r3, #0
 442 0268 09D1     		bne	.L32
 336:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 337:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ENABLE_SLAVE_AUTO_DATA_NACK;
 443              		.loc 1 337 0
 444 026a 394B     		ldr	r3, .L55+40
 445 026c 384A     		ldr	r2, .L55+40
 446 026e 1268     		ldr	r2, [r2]
 447 0270 8021     		movs	r1, #128
 448 0272 0902     		lsls	r1, r1, #8
 449 0274 0A43     		orrs	r2, r1
 450 0276 1A60     		str	r2, [r3]
 338:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 339:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 340:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_SetRxInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 451              		.loc 1 340 0
 452 0278 374B     		ldr	r3, .L55+48
 453 027a 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 15


 454 027c 1A60     		str	r2, [r3]
 455              	.L32:
 341:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 342:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 343:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     I2C_BLE_ClearRxInterruptSource(I2C_BLE_INTR_RX_FULL |
 456              		.loc 1 343 0
 457 027e 414B     		ldr	r3, .L55+92
 458 0280 0C22     		movs	r2, #12
 459 0282 1A60     		str	r2, [r3]
 460              	.L11:
 344:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                                                             I2C_BLE_INTR_RX_NOT_EMPTY);
 345:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
 346:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 else
 347:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
 348:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 349:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
 350:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     */
 351:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
 352:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             }
 353:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 354:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             if(0u != (locIntrCause & I2C_BLE_INTR_CAUSE_SLAVE))
 461              		.loc 1 354 0
 462 0284 7B68     		ldr	r3, [r7, #4]
 463 0286 0222     		movs	r2, #2
 464 0288 1340     		ands	r3, r2
 465 028a 00D1     		bne	.LCB399
 466 028c 16E1     		b	.L33	@long jump
 467              	.LCB399:
 355:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             {
 356:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 357:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 358:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             #if(!I2C_BLE_SECONDARY_ADDRESS_ENABLE_CONST)
 359:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2C_BLE_INTR_SLAVE_I2C_STOP))
 360:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             #else
 361:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 362:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 if((0u != (locIntrSlave & I2C_BLE_INTR_SLAVE_I2C_STOP)) &&
 468              		.loc 1 362 0
 469 028e BB68     		ldr	r3, [r7, #8]
 470 0290 1022     		movs	r2, #16
 471 0292 1340     		ands	r3, r2
 472 0294 00D1     		bne	.LCB404
 473 0296 7FE0     		b	.L34	@long jump
 474              	.LCB404:
 363:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                    (0u != ((uint8) I2C_BLE_EZI2C_STATUS_BUSY & I2C_BLE_curStatus)))
 475              		.loc 1 363 0 discriminator 1
 476 0298 2A4B     		ldr	r3, .L55+28
 477 029a 1B78     		ldrb	r3, [r3]
 478 029c DBB2     		uxtb	r3, r3
 479 029e 2022     		movs	r2, #32
 480 02a0 1340     		ands	r3, r2
 481 02a2 DBB2     		uxtb	r3, r3
 362:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                    (0u != ((uint8) I2C_BLE_EZI2C_STATUS_BUSY & I2C_BLE_curStatus)))
 482              		.loc 1 362 0 discriminator 1
 483 02a4 002B     		cmp	r3, #0
 484 02a6 00D1     		bne	.LCB412
 485 02a8 76E0     		b	.L34	@long jump
 486              	.LCB412:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 16


 364:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             #endif
 365:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
 366:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 367:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     I2C_BLE_SetRxInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 487              		.loc 1 367 0
 488 02aa 2B4B     		ldr	r3, .L55+48
 489 02ac 0022     		movs	r2, #0
 490 02ae 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     I2C_BLE_SetTxInterruptMode(I2C_BLE_NO_INTR_SOURCES);
 491              		.loc 1 368 0
 492 02b0 254B     		ldr	r3, .L55+32
 493 02b2 0022     		movs	r2, #0
 494 02b4 1A60     		str	r2, [r3]
 369:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 370:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Set read completion mask */
 371:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     locStatus = I2C_BLE_INTR_SLAVE_I2C_NACK;
 495              		.loc 1 371 0
 496 02b6 0223     		movs	r3, #2
 497 02b8 BB61     		str	r3, [r7, #24]
 372:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 373:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 374:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     if(locIndex != I2C_BLE_EZI2C_GET_OFFSET(activeAddress))
 498              		.loc 1 374 0
 499 02ba 1C4B     		ldr	r3, .L55+4
 500 02bc 1B78     		ldrb	r3, [r3]
 501 02be 002B     		cmp	r3, #0
 502 02c0 03D1     		bne	.L35
 503              		.loc 1 374 0 is_stmt 0 discriminator 1
 504 02c2 224B     		ldr	r3, .L55+36
 505 02c4 1B78     		ldrb	r3, [r3]
 506 02c6 1A00     		movs	r2, r3
 507 02c8 02E0     		b	.L36
 508              	.L35:
 509              		.loc 1 374 0 discriminator 2
 510 02ca 2D4B     		ldr	r3, .L55+88
 511 02cc 1B78     		ldrb	r3, [r3]
 512 02ce 1A00     		movs	r2, r3
 513              	.L36:
 514              		.loc 1 374 0 discriminator 4
 515 02d0 FB69     		ldr	r3, [r7, #28]
 516 02d2 9A42     		cmp	r2, r3
 517 02d4 03D0     		beq	.L37
 375:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 376:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locStatus |= I2C_BLE_INTR_SLAVE_I2C_WRITE_STOP;
 518              		.loc 1 376 0 is_stmt 1
 519 02d6 BB69     		ldr	r3, [r7, #24]
 520 02d8 0822     		movs	r2, #8
 521 02da 1343     		orrs	r3, r2
 522 02dc BB61     		str	r3, [r7, #24]
 523              	.L37:
 377:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 378:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 379:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Complete read or write transaction */
 380:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 524              		.loc 1 380 0
 525 02de BB69     		ldr	r3, [r7, #24]
 526 02e0 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 17


 527 02e2 1340     		ands	r3, r2
 528 02e4 BB61     		str	r3, [r7, #24]
 381:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     I2C_BLE_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 529              		.loc 1 381 0
 530 02e6 114B     		ldr	r3, .L55+4
 531 02e8 1B78     		ldrb	r3, [r3]
 532 02ea 1A00     		movs	r2, r3
 533 02ec BB69     		ldr	r3, [r7, #24]
 534 02ee D340     		lsrs	r3, r3, r2
 535 02f0 BB61     		str	r3, [r7, #24]
 382:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     locStatus |= (uint32)  I2C_BLE_curStatus;
 536              		.loc 1 382 0
 537 02f2 144B     		ldr	r3, .L55+28
 538 02f4 1B78     		ldrb	r3, [r3]
 539 02f6 DBB2     		uxtb	r3, r3
 540 02f8 1A00     		movs	r2, r3
 541 02fa BB69     		ldr	r3, [r7, #24]
 542 02fc 1343     		orrs	r3, r2
 543 02fe BB61     		str	r3, [r7, #24]
 383:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     locStatus &= (uint32) ~I2C_BLE_EZI2C_STATUS_BUSY;
 544              		.loc 1 383 0
 545 0300 BB69     		ldr	r3, [r7, #24]
 546 0302 2022     		movs	r2, #32
 547 0304 9343     		bics	r3, r2
 548 0306 BB61     		str	r3, [r7, #24]
 384:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     I2C_BLE_curStatus = (uint8) locStatus;
 549              		.loc 1 384 0
 550 0308 BB69     		ldr	r3, [r7, #24]
 551 030a DAB2     		uxtb	r2, r3
 552 030c 0D4B     		ldr	r3, .L55+28
 553 030e 1A70     		strb	r2, [r3]
 385:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 386:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     I2C_BLE_fsmState = I2C_BLE_EZI2C_FSM_IDLE;
 554              		.loc 1 386 0
 555 0310 124B     		ldr	r3, .L55+52
 556 0312 0022     		movs	r2, #0
 557 0314 1A70     		strb	r2, [r3]
 387:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 388:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #if(I2C_BLE_SECONDARY_ADDRESS_ENABLE)
 389:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 390:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 391:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_EZI2C_SET_INDEX(activeAddress, locIndex);
 558              		.loc 1 391 0
 559 0316 054B     		ldr	r3, .L55+4
 560 0318 1B78     		ldrb	r3, [r3]
 561 031a 002B     		cmp	r3, #0
 562 031c 38D1     		bne	.L38
 563              		.loc 1 391 0 is_stmt 0 discriminator 1
 564 031e FB69     		ldr	r3, [r7, #28]
 565 0320 9AB2     		uxth	r2, r3
 566 0322 034B     		ldr	r3, .L55+8
 567 0324 1A80     		strh	r2, [r3]
 568 0326 37E0     		b	.L34
 569              	.L56:
 570              		.align	2
 571              	.L55:
 572 0328 00000000 		.word	I2C_BLE_customIntrHandler
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 18


 573 032c 00000000 		.word	activeAddress.4986
 574 0330 00000000 		.word	I2C_BLE_indexBuf1
 575 0334 00000000 		.word	I2C_BLE_indexBuf2
 576 0338 400F2540 		.word	1076170560
 577 033c 000E2540 		.word	1076170240
 578 0340 00002540 		.word	1076166656
 579 0344 00000000 		.word	I2C_BLE_curStatus
 580 0348 880F2540 		.word	1076170632
 581 034c 00000000 		.word	I2C_BLE_offsetBuf1
 582 0350 60002540 		.word	1076166752
 583 0354 FF5FFFFF 		.word	-40961
 584 0358 C80F2540 		.word	1076170696
 585 035c 00000000 		.word	I2C_BLE_fsmState
 586 0360 880E2540 		.word	1076170376
 587 0364 CC0F2540 		.word	1076170700
 588 0368 40032540 		.word	1076167488
 589 036c 02000000 		.word	locBufSize.4975
 590 0370 6C002540 		.word	1076166764
 591 0374 04000000 		.word	I2C_BLE_dataBuffer.4983
 592 0378 08000000 		.word	I2C_BLE_bufSizeBuf.4984
 593 037c 0A000000 		.word	I2C_BLE_protectBuf.4985
 594 0380 00000000 		.word	I2C_BLE_offsetBuf2
 595 0384 C00F2540 		.word	1076170688
 596 0388 08032540 		.word	1076167432
 597 038c 4C0F2540 		.word	1076170572
 598              	.L38:
 599              		.loc 1 391 0 discriminator 2
 600 0390 FB69     		ldr	r3, [r7, #28]
 601 0392 9AB2     		uxth	r2, r3
 602 0394 654B     		ldr	r3, .L57
 603 0396 1A80     		strh	r2, [r3]
 604              	.L34:
 392:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 393:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #endif
 394:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
 395:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 396:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 397:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 398:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 399:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 400:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 */
 401:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2C_BLE_INTR_SLAVE_I2C_ADDR_MATCH))
 605              		.loc 1 401 0 is_stmt 1
 606 0398 BB68     		ldr	r3, [r7, #8]
 607 039a 4022     		movs	r2, #64
 608 039c 1340     		ands	r3, r2
 609 039e 00D1     		bne	.LCB527
 610 03a0 89E0     		b	.L39	@long jump
 611              	.LCB527:
 402:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
 403:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #if(I2C_BLE_SECONDARY_ADDRESS_ENABLE)
 404:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 405:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 406:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locByte = I2C_BLE_GET_I2C_7BIT_ADDRESS(I2C_BLE_RX_FIFO_RD_REG);
 612              		.loc 1 406 0
 613 03a2 634B     		ldr	r3, .L57+4
 614 03a4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 19


 615 03a6 5B08     		lsrs	r3, r3, #1
 616 03a8 3B60     		str	r3, [r7]
 407:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 408:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ClearRxInterruptSource(I2C_BLE_INTR_RX_NOT_EMPTY);
 617              		.loc 1 408 0
 618 03aa 624B     		ldr	r3, .L57+8
 619 03ac 0422     		movs	r2, #4
 620 03ae 1A60     		str	r2, [r3]
 409:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 410:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Check received address against device addresses */
 411:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         if(I2C_BLE_addrBuf1 == locByte)
 621              		.loc 1 411 0
 622 03b0 614B     		ldr	r3, .L57+12
 623 03b2 1B78     		ldrb	r3, [r3]
 624 03b4 1A00     		movs	r2, r3
 625 03b6 3B68     		ldr	r3, [r7]
 626 03b8 9A42     		cmp	r2, r3
 627 03ba 0FD1     		bne	.L40
 412:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 413:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 414:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_dataBuffer = I2C_BLE_dataBuffer1;
 628              		.loc 1 414 0
 629 03bc 5F4B     		ldr	r3, .L57+16
 630 03be 1A68     		ldr	r2, [r3]
 631 03c0 5F4B     		ldr	r3, .L57+20
 632 03c2 1A60     		str	r2, [r3]
 415:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_bufSizeBuf = I2C_BLE_bufSizeBuf1;
 633              		.loc 1 415 0
 634 03c4 5F4B     		ldr	r3, .L57+24
 635 03c6 1A88     		ldrh	r2, [r3]
 636 03c8 5F4B     		ldr	r3, .L57+28
 637 03ca 1A80     		strh	r2, [r3]
 416:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_protectBuf = I2C_BLE_protectBuf1;
 638              		.loc 1 416 0
 639 03cc 5F4B     		ldr	r3, .L57+32
 640 03ce 1A88     		ldrh	r2, [r3]
 641 03d0 5F4B     		ldr	r3, .L57+36
 642 03d2 1A80     		strh	r2, [r3]
 417:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 418:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             activeAddress = I2C_BLE_EZI2C_ACTIVE_ADDRESS1;
 643              		.loc 1 418 0
 644 03d4 5F4B     		ldr	r3, .L57+40
 645 03d6 0022     		movs	r2, #0
 646 03d8 1A70     		strb	r2, [r3]
 647 03da 17E0     		b	.L41
 648              	.L40:
 419:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 420:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         else if(I2C_BLE_addrBuf2 == locByte)
 649              		.loc 1 420 0
 650 03dc 5E4B     		ldr	r3, .L57+44
 651 03de 1B78     		ldrb	r3, [r3]
 652 03e0 1A00     		movs	r2, r3
 653 03e2 3B68     		ldr	r3, [r7]
 654 03e4 9A42     		cmp	r2, r3
 655 03e6 0FD1     		bne	.L42
 421:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 422:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 20


 423:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_dataBuffer = I2C_BLE_dataBuffer2;
 656              		.loc 1 423 0
 657 03e8 5C4B     		ldr	r3, .L57+48
 658 03ea 1A68     		ldr	r2, [r3]
 659 03ec 544B     		ldr	r3, .L57+20
 660 03ee 1A60     		str	r2, [r3]
 424:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_bufSizeBuf = I2C_BLE_bufSizeBuf2;
 661              		.loc 1 424 0
 662 03f0 5B4B     		ldr	r3, .L57+52
 663 03f2 1A88     		ldrh	r2, [r3]
 664 03f4 544B     		ldr	r3, .L57+28
 665 03f6 1A80     		strh	r2, [r3]
 425:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_protectBuf = I2C_BLE_protectBuf2;
 666              		.loc 1 425 0
 667 03f8 5A4B     		ldr	r3, .L57+56
 668 03fa 1A88     		ldrh	r2, [r3]
 669 03fc 544B     		ldr	r3, .L57+36
 670 03fe 1A80     		strh	r2, [r3]
 426:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 427:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             activeAddress = I2C_BLE_EZI2C_ACTIVE_ADDRESS2;
 671              		.loc 1 427 0
 672 0400 544B     		ldr	r3, .L57+40
 673 0402 0122     		movs	r2, #1
 674 0404 1A70     		strb	r2, [r3]
 675 0406 01E0     		b	.L41
 676              	.L42:
 428:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 429:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         else
 430:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 431:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Address does not match */
 432:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             ackResponse = I2C_BLE_EZI2C_NACK_RECEIVED_ADDRESS;
 677              		.loc 1 432 0
 678 0408 0023     		movs	r3, #0
 679 040a FB60     		str	r3, [r7, #12]
 680              	.L41:
 433:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 434:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 435:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #endif
 436:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 437:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 #if(I2C_BLE_SECONDARY_ADDRESS_ENABLE_CONST)
 438:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     if(I2C_BLE_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 681              		.loc 1 438 0
 682 040c FB68     		ldr	r3, [r7, #12]
 683 040e 002B     		cmp	r3, #0
 684 0410 0FD1     		bne	.L43
 439:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 440:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 441:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ClearI2CExtClkInterruptSource(I2C_BLE_INTR_I2C_EC_WAKE_UP);
 685              		.loc 1 441 0
 686 0412 554B     		ldr	r3, .L57+60
 687 0414 0122     		movs	r2, #1
 688 0416 1A60     		str	r2, [r3]
 442:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ClearSlaveInterruptSource(I2C_BLE_INTR_SLAVE_ALL);
 689              		.loc 1 442 0
 690 0418 544B     		ldr	r3, .L57+64
 691 041a 554A     		ldr	r2, .L57+68
 692 041c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 21


 443:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 444:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #if(!I2C_BLE_CY_SCBIP_V0)
 445:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 446:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_DISABLE_INTR_SLAVE(I2C_BLE_INTR_SLAVE_I2C_STOP);
 693              		.loc 1 446 0
 694 041e 554B     		ldr	r3, .L57+72
 695 0420 544A     		ldr	r2, .L57+72
 696 0422 1268     		ldr	r2, [r2]
 697 0424 1021     		movs	r1, #16
 698 0426 8A43     		bics	r2, r1
 699 0428 1A60     		str	r2, [r3]
 447:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #endif /* (!I2C_BLE_CY_SCBIP_V0) */
 448:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 449:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 450:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_I2C_SLAVE_GENERATE_NACK;
 700              		.loc 1 450 0
 701 042a 534B     		ldr	r3, .L57+76
 702 042c 0222     		movs	r2, #2
 703 042e 1A60     		str	r2, [r3]
 704 0430 41E0     		b	.L39
 705              	.L43:
 451:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 452:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     else
 453:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 #endif /* (I2C_BLE_SECONDARY_ADDRESS_ENABLE_CONST) */
 454:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 455:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 456:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #if(I2C_BLE_SCB_MODE_UNCONFIG_CONST_CFG)
 457:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         if(!I2C_BLE_SECONDARY_ADDRESS_ENABLE)
 458:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 459:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 460:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_dataBuffer = I2C_BLE_dataBuffer1;
 461:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_bufSizeBuf = I2C_BLE_bufSizeBuf1;
 462:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_protectBuf = I2C_BLE_protectBuf1;
 463:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 464:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             activeAddress = I2C_BLE_EZI2C_ACTIVE_ADDRESS1;
 465:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 466:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #endif /* (I2C_BLE_SCB_MODE_UNCONFIG_CONST_CFG) */
 467:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 468:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 469:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_curStatus |= (uint8) I2C_BLE_EZI2C_STATUS_BUSY;
 706              		.loc 1 469 0
 707 0432 524B     		ldr	r3, .L57+80
 708 0434 1B78     		ldrb	r3, [r3]
 709 0436 DBB2     		uxtb	r3, r3
 710 0438 2022     		movs	r2, #32
 711 043a 1343     		orrs	r3, r2
 712 043c DAB2     		uxtb	r2, r3
 713 043e 4F4B     		ldr	r3, .L57+80
 714 0440 1A70     		strb	r2, [r3]
 470:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 471:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 472:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locIndex = I2C_BLE_EZI2C_GET_OFFSET(activeAddress);
 715              		.loc 1 472 0
 716 0442 444B     		ldr	r3, .L57+40
 717 0444 1B78     		ldrb	r3, [r3]
 718 0446 002B     		cmp	r3, #0
 719 0448 02D1     		bne	.L44
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 22


 720              		.loc 1 472 0 is_stmt 0 discriminator 1
 721 044a 4D4B     		ldr	r3, .L57+84
 722 044c 1B78     		ldrb	r3, [r3]
 723 044e 01E0     		b	.L45
 724              	.L44:
 725              		.loc 1 472 0 discriminator 2
 726 0450 4C4B     		ldr	r3, .L57+88
 727 0452 1B78     		ldrb	r3, [r3]
 728              	.L45:
 729              		.loc 1 472 0 discriminator 4
 730 0454 FB61     		str	r3, [r7, #28]
 473:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 474:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Check transaction direction */
 475:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         if(I2C_BLE_CHECK_I2C_STATUS(I2C_BLE_I2C_STATUS_S_READ))
 731              		.loc 1 475 0 is_stmt 1 discriminator 4
 732 0456 4C4B     		ldr	r3, .L57+92
 733 0458 1B68     		ldr	r3, [r3]
 734 045a 1022     		movs	r2, #16
 735 045c 1340     		ands	r3, r2
 736 045e 18D0     		beq	.L46
 476:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 477:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 478:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             locBufSize = I2C_BLE_bufSizeBuf - (uint16) locIndex;
 737              		.loc 1 478 0
 738 0460 394B     		ldr	r3, .L57+28
 739 0462 1A88     		ldrh	r2, [r3]
 740 0464 FB69     		ldr	r3, [r7, #28]
 741 0466 9BB2     		uxth	r3, r3
 742 0468 D31A     		subs	r3, r2, r3
 743 046a 9AB2     		uxth	r2, r3
 744 046c 474B     		ldr	r3, .L57+96
 745 046e 1A80     		strh	r2, [r3]
 479:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 480:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 481:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_CLEAR_TX_FIFO;
 746              		.loc 1 481 0
 747 0470 474B     		ldr	r3, .L57+100
 748 0472 474A     		ldr	r2, .L57+100
 749 0474 1268     		ldr	r2, [r2]
 750 0476 8021     		movs	r1, #128
 751 0478 4902     		lsls	r1, r1, #9
 752 047a 0A43     		orrs	r2, r1
 753 047c 1A60     		str	r2, [r3]
 754 047e 444B     		ldr	r3, .L57+100
 755 0480 434A     		ldr	r2, .L57+100
 756 0482 1268     		ldr	r2, [r2]
 757 0484 4349     		ldr	r1, .L57+104
 758 0486 0A40     		ands	r2, r1
 759 0488 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_SetTxInterruptMode(I2C_BLE_INTR_TX_EMPTY);
 760              		.loc 1 482 0
 761 048a 434B     		ldr	r3, .L57+108
 762 048c 1022     		movs	r2, #16
 763 048e 1A60     		str	r2, [r3]
 764 0490 02E0     		b	.L47
 765              	.L46:
 483:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 23


 484:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         else
 485:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         {
 486:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
 487:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                             I2C_BLE_SetRxInterruptMode(I2C_BLE_INTR_RX_NOT_EMPTY);
 766              		.loc 1 487 0
 767 0492 424B     		ldr	r3, .L57+112
 768 0494 0422     		movs	r2, #4
 769 0496 1A60     		str	r2, [r3]
 770              	.L47:
 488:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         }
 489:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 490:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 491:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ClearI2CExtClkInterruptSource(I2C_BLE_INTR_I2C_EC_WAKE_UP);
 771              		.loc 1 491 0
 772 0498 334B     		ldr	r3, .L57+60
 773 049a 0122     		movs	r2, #1
 774 049c 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ClearSlaveInterruptSource(I2C_BLE_INTR_SLAVE_ALL);
 775              		.loc 1 492 0
 776 049e 334B     		ldr	r3, .L57+64
 777 04a0 334A     		ldr	r2, .L57+68
 778 04a2 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 494:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #if (!I2C_BLE_CY_SCBIP_V0)
 495:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 496:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_ENABLE_INTR_SLAVE(I2C_BLE_INTR_SLAVE_I2C_STOP);
 779              		.loc 1 496 0
 780 04a4 334B     		ldr	r3, .L57+72
 781 04a6 334A     		ldr	r2, .L57+72
 782 04a8 1268     		ldr	r2, [r2]
 783 04aa 1021     		movs	r1, #16
 784 04ac 0A43     		orrs	r2, r1
 785 04ae 1A60     		str	r2, [r3]
 497:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     #endif /* (!I2C_BLE_CY_SCBIP_V0) */
 498:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 499:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         /* ACK the address byte */
 500:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_I2C_SLAVE_GENERATE_ACK;
 786              		.loc 1 500 0
 787 04b0 314B     		ldr	r3, .L57+76
 788 04b2 0122     		movs	r2, #1
 789 04b4 1A60     		str	r2, [r3]
 790              	.L39:
 501:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 502:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
 503:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 504:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 505:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 I2C_BLE_ClearSlaveInterruptSource(locIntrSlave);
 791              		.loc 1 505 0
 792 04b6 2D4B     		ldr	r3, .L57+64
 793 04b8 BA68     		ldr	r2, [r7, #8]
 794 04ba 1A60     		str	r2, [r3]
 795              	.L33:
 506:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             }
 507:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 508:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 509:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 510:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 24


 511:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             */
 512:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             if(0u != (I2C_BLE_GetInterruptCause() & I2C_BLE_INTR_CAUSE_TX))
 796              		.loc 1 512 0
 797 04bc 384B     		ldr	r3, .L57+116
 798 04be 1B68     		ldr	r3, [r3]
 799 04c0 0422     		movs	r2, #4
 800 04c2 1340     		ands	r3, r2
 801 04c4 21D0     		beq	.L9
 802              	.L50:
 513:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             {
 514:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 515:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 do
 516:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 {
 517:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 518:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     if(0u != locBufSize)
 803              		.loc 1 518 0
 804 04c6 314B     		ldr	r3, .L57+96
 805 04c8 1B88     		ldrh	r3, [r3]
 806 04ca 002B     		cmp	r3, #0
 807 04cc 11D0     		beq	.L48
 519:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 520:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_TX_FIFO_WR_REG = (uint32) I2C_BLE_dataBuffer[locIndex];
 808              		.loc 1 520 0
 809 04ce 354A     		ldr	r2, .L57+120
 810 04d0 1B4B     		ldr	r3, .L57+20
 811 04d2 1968     		ldr	r1, [r3]
 812 04d4 FB69     		ldr	r3, [r7, #28]
 813 04d6 CB18     		adds	r3, r1, r3
 814 04d8 1B78     		ldrb	r3, [r3]
 815 04da DBB2     		uxtb	r3, r3
 816 04dc 1360     		str	r3, [r2]
 521:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locIndex++;
 817              		.loc 1 521 0
 818 04de FB69     		ldr	r3, [r7, #28]
 819 04e0 0133     		adds	r3, r3, #1
 820 04e2 FB61     		str	r3, [r7, #28]
 522:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         locBufSize--;
 821              		.loc 1 522 0
 822 04e4 294B     		ldr	r3, .L57+96
 823 04e6 1B88     		ldrh	r3, [r3]
 824 04e8 013B     		subs	r3, r3, #1
 825 04ea 9AB2     		uxth	r2, r3
 826 04ec 274B     		ldr	r3, .L57+96
 827 04ee 1A80     		strh	r2, [r3]
 828 04f0 02E0     		b	.L49
 829              	.L48:
 523:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 524:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     else
 525:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     {
 526:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                         I2C_BLE_TX_FIFO_WR_REG = I2C_BLE_EZI2C_OVFL_RETURN;
 830              		.loc 1 526 0
 831 04f2 2C4B     		ldr	r3, .L57+120
 832 04f4 FF22     		movs	r2, #255
 833 04f6 1A60     		str	r2, [r3]
 834              	.L49:
 527:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                     }
 528:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 25


 529:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 while(I2C_BLE_EZI2C_FIFO_SIZE != I2C_BLE_GET_TX_FIFO_ENTRIES);
 835              		.loc 1 529 0
 836 04f8 2B4B     		ldr	r3, .L57+124
 837 04fa 1B68     		ldr	r3, [r3]
 838 04fc 1F22     		movs	r2, #31
 839 04fe 1340     		ands	r3, r2
 840 0500 082B     		cmp	r3, #8
 841 0502 E0D1     		bne	.L50
 530:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 531:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****                 I2C_BLE_ClearTxInterruptSource(I2C_BLE_INTR_TX_EMPTY);
 842              		.loc 1 531 0
 843 0504 294B     		ldr	r3, .L57+128
 844 0506 1022     		movs	r2, #16
 845 0508 1A60     		str	r2, [r3]
 846              	.L9:
 532:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****             }
 533:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         }
 534:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 535:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         /* Store local index copy into global variable */
 536:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         I2C_BLE_EZI2C_SET_INDEX(activeAddress, locIndex);
 847              		.loc 1 536 0
 848 050a 124B     		ldr	r3, .L57+40
 849 050c 1B78     		ldrb	r3, [r3]
 850 050e 002B     		cmp	r3, #0
 851 0510 04D1     		bne	.L51
 852              		.loc 1 536 0 is_stmt 0 discriminator 1
 853 0512 FB69     		ldr	r3, [r7, #28]
 854 0514 9AB2     		uxth	r2, r3
 855 0516 264B     		ldr	r3, .L57+132
 856 0518 1A80     		strh	r2, [r3]
 537:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 538:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #ifdef I2C_BLE_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 539:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****         I2C_BLE_EZI2C_STRETCH_ISR_ExitCallback();
 540:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     #endif /* I2C_BLE_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 541:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 542:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c ****     }
 857              		.loc 1 542 0 is_stmt 1 discriminator 1
 858 051a 03E0     		b	.L54
 859              	.L51:
 536:Generated_Source\PSoC4/I2C_BLE_EZI2C_INT.c **** 
 860              		.loc 1 536 0 discriminator 2
 861 051c FB69     		ldr	r3, [r7, #28]
 862 051e 9AB2     		uxth	r2, r3
 863 0520 024B     		ldr	r3, .L57
 864 0522 1A80     		strh	r2, [r3]
 865              	.L54:
 866              		.loc 1 542 0
 867 0524 C046     		nop
 868 0526 BD46     		mov	sp, r7
 869 0528 08B0     		add	sp, sp, #32
 870              		@ sp needed
 871 052a 80BD     		pop	{r7, pc}
 872              	.L58:
 873              		.align	2
 874              	.L57:
 875 052c 00000000 		.word	I2C_BLE_indexBuf2
 876 0530 40032540 		.word	1076167488
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 26


 877 0534 C00F2540 		.word	1076170688
 878 0538 00000000 		.word	I2C_BLE_addrBuf1
 879 053c 00000000 		.word	I2C_BLE_dataBuffer1
 880 0540 04000000 		.word	I2C_BLE_dataBuffer.4983
 881 0544 00000000 		.word	I2C_BLE_bufSizeBuf1
 882 0548 08000000 		.word	I2C_BLE_bufSizeBuf.4984
 883 054c 00000000 		.word	I2C_BLE_protectBuf1
 884 0550 0A000000 		.word	I2C_BLE_protectBuf.4985
 885 0554 00000000 		.word	activeAddress.4986
 886 0558 00000000 		.word	I2C_BLE_addrBuf2
 887 055c 00000000 		.word	I2C_BLE_dataBuffer2
 888 0560 00000000 		.word	I2C_BLE_bufSizeBuf2
 889 0564 00000000 		.word	I2C_BLE_protectBuf2
 890 0568 800E2540 		.word	1076170368
 891 056c 400F2540 		.word	1076170560
 892 0570 FF0F0000 		.word	4095
 893 0574 480F2540 		.word	1076170568
 894 0578 6C002540 		.word	1076166764
 895 057c 00000000 		.word	I2C_BLE_curStatus
 896 0580 00000000 		.word	I2C_BLE_offsetBuf1
 897 0584 00000000 		.word	I2C_BLE_offsetBuf2
 898 0588 64002540 		.word	1076166756
 899 058c 02000000 		.word	locBufSize.4975
 900 0590 04022540 		.word	1076167172
 901 0594 FFFFFEFF 		.word	-65537
 902 0598 880F2540 		.word	1076170632
 903 059c C80F2540 		.word	1076170696
 904 05a0 000E2540 		.word	1076170240
 905 05a4 40022540 		.word	1076167232
 906 05a8 08022540 		.word	1076167176
 907 05ac 800F2540 		.word	1076170624
 908 05b0 00000000 		.word	I2C_BLE_indexBuf1
 909              		.cfi_endproc
 910              	.LFE2:
 911              		.size	I2C_BLE_EZI2C_STRETCH_ISR, .-I2C_BLE_EZI2C_STRETCH_ISR
 912              		.bss
 913              	activeAddress.4986:
 914 0000 00       		.space	1
 915 0001 00       		.align	1
 916              	locBufSize.4975:
 917 0002 0000     		.space	2
 918              		.align	2
 919              	I2C_BLE_dataBuffer.4983:
 920 0004 00000000 		.space	4
 921              		.align	1
 922              	I2C_BLE_bufSizeBuf.4984:
 923 0008 0000     		.space	2
 924              		.align	1
 925              	I2C_BLE_protectBuf.4985:
 926 000a 0000     		.space	2
 927              		.text
 928              	.Letext0:
 929              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 930              		.file 3 "Generated_Source\\PSoC4\\I2C_BLE_PVT.h"
 931              		.file 4 "Generated_Source\\PSoC4\\I2C_BLE_EZI2C_PVT.h"
 932              		.section	.debug_info,"",%progbits
 933              	.Ldebug_info0:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 27


 934 0000 5E020000 		.4byte	0x25e
 935 0004 0400     		.2byte	0x4
 936 0006 00000000 		.4byte	.Ldebug_abbrev0
 937 000a 04       		.byte	0x4
 938 000b 01       		.uleb128 0x1
 939 000c 04010000 		.4byte	.LASF47
 940 0010 0C       		.byte	0xc
 941 0011 5D020000 		.4byte	.LASF48
 942 0015 13030000 		.4byte	.LASF49
 943 0019 00000000 		.4byte	.Ldebug_ranges0+0
 944 001d 00000000 		.4byte	0
 945 0021 00000000 		.4byte	.Ldebug_line0
 946 0025 02       		.uleb128 0x2
 947 0026 01       		.byte	0x1
 948 0027 06       		.byte	0x6
 949 0028 73030000 		.4byte	.LASF0
 950 002c 02       		.uleb128 0x2
 951 002d 01       		.byte	0x1
 952 002e 08       		.byte	0x8
 953 002f D4000000 		.4byte	.LASF1
 954 0033 02       		.uleb128 0x2
 955 0034 02       		.byte	0x2
 956 0035 05       		.byte	0x5
 957 0036 E6010000 		.4byte	.LASF2
 958 003a 02       		.uleb128 0x2
 959 003b 02       		.byte	0x2
 960 003c 07       		.byte	0x7
 961 003d 7F000000 		.4byte	.LASF3
 962 0041 02       		.uleb128 0x2
 963 0042 04       		.byte	0x4
 964 0043 05       		.byte	0x5
 965 0044 4A030000 		.4byte	.LASF4
 966 0048 02       		.uleb128 0x2
 967 0049 04       		.byte	0x4
 968 004a 07       		.byte	0x7
 969 004b EC000000 		.4byte	.LASF5
 970 004f 02       		.uleb128 0x2
 971 0050 08       		.byte	0x8
 972 0051 05       		.byte	0x5
 973 0052 D0020000 		.4byte	.LASF6
 974 0056 02       		.uleb128 0x2
 975 0057 08       		.byte	0x8
 976 0058 07       		.byte	0x7
 977 0059 34020000 		.4byte	.LASF7
 978 005d 03       		.uleb128 0x3
 979 005e 04       		.byte	0x4
 980 005f 05       		.byte	0x5
 981 0060 696E7400 		.ascii	"int\000"
 982 0064 02       		.uleb128 0x2
 983 0065 04       		.byte	0x4
 984 0066 07       		.byte	0x7
 985 0067 12020000 		.4byte	.LASF8
 986 006b 04       		.uleb128 0x4
 987 006c FE000000 		.4byte	.LASF9
 988 0070 02       		.byte	0x2
 989 0071 E401     		.2byte	0x1e4
 990 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 28


 991 0077 04       		.uleb128 0x4
 992 0078 04020000 		.4byte	.LASF10
 993 007c 02       		.byte	0x2
 994 007d E501     		.2byte	0x1e5
 995 007f 3A000000 		.4byte	0x3a
 996 0083 04       		.uleb128 0x4
 997 0084 0B020000 		.4byte	.LASF11
 998 0088 02       		.byte	0x2
 999 0089 E601     		.2byte	0x1e6
 1000 008b 48000000 		.4byte	0x48
 1001 008f 02       		.uleb128 0x2
 1002 0090 04       		.byte	0x4
 1003 0091 04       		.byte	0x4
 1004 0092 40000000 		.4byte	.LASF12
 1005 0096 02       		.uleb128 0x2
 1006 0097 08       		.byte	0x8
 1007 0098 04       		.byte	0x4
 1008 0099 C5010000 		.4byte	.LASF13
 1009 009d 02       		.uleb128 0x2
 1010 009e 01       		.byte	0x1
 1011 009f 08       		.byte	0x8
 1012 00a0 E7020000 		.4byte	.LASF14
 1013 00a4 05       		.uleb128 0x5
 1014 00a5 6B000000 		.4byte	0x6b
 1015 00a9 04       		.uleb128 0x4
 1016 00aa 12000000 		.4byte	.LASF15
 1017 00ae 02       		.byte	0x2
 1018 00af 9002     		.2byte	0x290
 1019 00b1 B5000000 		.4byte	0xb5
 1020 00b5 05       		.uleb128 0x5
 1021 00b6 83000000 		.4byte	0x83
 1022 00ba 04       		.uleb128 0x4
 1023 00bb 88020000 		.4byte	.LASF16
 1024 00bf 02       		.byte	0x2
 1025 00c0 A002     		.2byte	0x2a0
 1026 00c2 C6000000 		.4byte	0xc6
 1027 00c6 06       		.uleb128 0x6
 1028 00c7 04       		.byte	0x4
 1029 00c8 CC000000 		.4byte	0xcc
 1030 00cc 07       		.uleb128 0x7
 1031 00cd 02       		.uleb128 0x2
 1032 00ce 08       		.byte	0x8
 1033 00cf 04       		.byte	0x4
 1034 00d0 53030000 		.4byte	.LASF17
 1035 00d4 02       		.uleb128 0x2
 1036 00d5 04       		.byte	0x4
 1037 00d6 07       		.byte	0x7
 1038 00d7 DE020000 		.4byte	.LASF18
 1039 00db 08       		.uleb128 0x8
 1040 00dc F9020000 		.4byte	.LASF50
 1041 00e0 01       		.byte	0x1
 1042 00e1 20       		.byte	0x20
 1043 00e2 00000000 		.4byte	.LFB2
 1044 00e6 B4050000 		.4byte	.LFE2-.LFB2
 1045 00ea 01       		.uleb128 0x1
 1046 00eb 9C       		.byte	0x9c
 1047 00ec B6010000 		.4byte	0x1b6
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 29


 1048 00f0 09       		.uleb128 0x9
 1049 00f1 1F020000 		.4byte	.LASF19
 1050 00f5 01       		.byte	0x1
 1051 00f6 22       		.byte	0x22
 1052 00f7 77000000 		.4byte	0x77
 1053 00fb 05       		.uleb128 0x5
 1054 00fc 03       		.byte	0x3
 1055 00fd 02000000 		.4byte	locBufSize.4975
 1056 0101 09       		.uleb128 0x9
 1057 0102 CB000000 		.4byte	.LASF20
 1058 0106 01       		.byte	0x1
 1059 0107 23       		.byte	0x23
 1060 0108 83000000 		.4byte	0x83
 1061 010c 02       		.uleb128 0x2
 1062 010d 91       		.byte	0x91
 1063 010e 74       		.sleb128 -12
 1064 010f 09       		.uleb128 0x9
 1065 0110 E2000000 		.4byte	.LASF21
 1066 0114 01       		.byte	0x1
 1067 0115 24       		.byte	0x24
 1068 0116 83000000 		.4byte	0x83
 1069 011a 02       		.uleb128 0x2
 1070 011b 91       		.byte	0x91
 1071 011c 70       		.sleb128 -16
 1072 011d 09       		.uleb128 0x9
 1073 011e A5000000 		.4byte	.LASF22
 1074 0122 01       		.byte	0x1
 1075 0123 26       		.byte	0x26
 1076 0124 83000000 		.4byte	0x83
 1077 0128 02       		.uleb128 0x2
 1078 0129 91       		.byte	0x91
 1079 012a 6C       		.sleb128 -20
 1080 012b 09       		.uleb128 0x9
 1081 012c 2A020000 		.4byte	.LASF23
 1082 0130 01       		.byte	0x1
 1083 0131 27       		.byte	0x27
 1084 0132 83000000 		.4byte	0x83
 1085 0136 02       		.uleb128 0x2
 1086 0137 91       		.byte	0x91
 1087 0138 68       		.sleb128 -24
 1088 0139 09       		.uleb128 0x9
 1089 013a 7F030000 		.4byte	.LASF24
 1090 013e 01       		.byte	0x1
 1091 013f 28       		.byte	0x28
 1092 0140 83000000 		.4byte	0x83
 1093 0144 02       		.uleb128 0x2
 1094 0145 91       		.byte	0x91
 1095 0146 58       		.sleb128 -40
 1096 0147 09       		.uleb128 0x9
 1097 0148 3D030000 		.4byte	.LASF25
 1098 014c 01       		.byte	0x1
 1099 014d 2A       		.byte	0x2a
 1100 014e 83000000 		.4byte	0x83
 1101 0152 02       		.uleb128 0x2
 1102 0153 91       		.byte	0x91
 1103 0154 5C       		.sleb128 -36
 1104 0155 09       		.uleb128 0x9
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 30


 1105 0156 EC020000 		.4byte	.LASF26
 1106 015a 01       		.byte	0x1
 1107 015b 2B       		.byte	0x2b
 1108 015c 83000000 		.4byte	0x83
 1109 0160 02       		.uleb128 0x2
 1110 0161 91       		.byte	0x91
 1111 0162 60       		.sleb128 -32
 1112 0163 09       		.uleb128 0x9
 1113 0164 6C000000 		.4byte	.LASF27
 1114 0168 01       		.byte	0x1
 1115 0169 33       		.byte	0x33
 1116 016a B6010000 		.4byte	0x1b6
 1117 016e 05       		.uleb128 0x5
 1118 016f 03       		.byte	0x3
 1119 0170 04000000 		.4byte	I2C_BLE_dataBuffer.4983
 1120 0174 09       		.uleb128 0x9
 1121 0175 95020000 		.4byte	.LASF28
 1122 0179 01       		.byte	0x1
 1123 017a 34       		.byte	0x34
 1124 017b 77000000 		.4byte	0x77
 1125 017f 05       		.uleb128 0x5
 1126 0180 03       		.byte	0x3
 1127 0181 08000000 		.4byte	I2C_BLE_bufSizeBuf.4984
 1128 0185 09       		.uleb128 0x9
 1129 0186 92000000 		.4byte	.LASF29
 1130 018a 01       		.byte	0x1
 1131 018b 35       		.byte	0x35
 1132 018c 77000000 		.4byte	0x77
 1133 0190 05       		.uleb128 0x5
 1134 0191 03       		.byte	0x3
 1135 0192 0A000000 		.4byte	I2C_BLE_protectBuf.4985
 1136 0196 09       		.uleb128 0x9
 1137 0197 B1000000 		.4byte	.LASF30
 1138 019b 01       		.byte	0x1
 1139 019c 37       		.byte	0x37
 1140 019d 6B000000 		.4byte	0x6b
 1141 01a1 05       		.uleb128 0x5
 1142 01a2 03       		.byte	0x3
 1143 01a3 00000000 		.4byte	activeAddress.4986
 1144 01a7 09       		.uleb128 0x9
 1145 01a8 BF000000 		.4byte	.LASF31
 1146 01ac 01       		.byte	0x1
 1147 01ad 38       		.byte	0x38
 1148 01ae 83000000 		.4byte	0x83
 1149 01b2 02       		.uleb128 0x2
 1150 01b3 91       		.byte	0x91
 1151 01b4 64       		.sleb128 -28
 1152 01b5 00       		.byte	0
 1153 01b6 06       		.uleb128 0x6
 1154 01b7 04       		.byte	0x4
 1155 01b8 A4000000 		.4byte	0xa4
 1156 01bc 0A       		.uleb128 0xa
 1157 01bd CC010000 		.4byte	.LASF32
 1158 01c1 03       		.byte	0x3
 1159 01c2 3B       		.byte	0x3b
 1160 01c3 BA000000 		.4byte	0xba
 1161 01c7 0A       		.uleb128 0xa
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 31


 1162 01c8 4B020000 		.4byte	.LASF33
 1163 01cc 04       		.byte	0x4
 1164 01cd 1E       		.byte	0x1e
 1165 01ce A4000000 		.4byte	0xa4
 1166 01d2 0A       		.uleb128 0xa
 1167 01d3 B4010000 		.4byte	.LASF34
 1168 01d7 04       		.byte	0x4
 1169 01d8 1F       		.byte	0x1f
 1170 01d9 6B000000 		.4byte	0x6b
 1171 01dd 0A       		.uleb128 0xa
 1172 01de A8020000 		.4byte	.LASF35
 1173 01e2 04       		.byte	0x4
 1174 01e3 22       		.byte	0x22
 1175 01e4 B6010000 		.4byte	0x1b6
 1176 01e8 0A       		.uleb128 0xa
 1177 01e9 18000000 		.4byte	.LASF36
 1178 01ed 04       		.byte	0x4
 1179 01ee 23       		.byte	0x23
 1180 01ef 77000000 		.4byte	0x77
 1181 01f3 0A       		.uleb128 0xa
 1182 01f4 F0010000 		.4byte	.LASF37
 1183 01f8 04       		.byte	0x4
 1184 01f9 24       		.byte	0x24
 1185 01fa 77000000 		.4byte	0x77
 1186 01fe 0A       		.uleb128 0xa
 1187 01ff 46000000 		.4byte	.LASF38
 1188 0203 04       		.byte	0x4
 1189 0204 25       		.byte	0x25
 1190 0205 6B000000 		.4byte	0x6b
 1191 0209 0A       		.uleb128 0xa
 1192 020a 87030000 		.4byte	.LASF39
 1193 020e 04       		.byte	0x4
 1194 020f 26       		.byte	0x26
 1195 0210 77000000 		.4byte	0x77
 1196 0214 0A       		.uleb128 0xa
 1197 0215 92010000 		.4byte	.LASF40
 1198 0219 04       		.byte	0x4
 1199 021a 29       		.byte	0x29
 1200 021b 6B000000 		.4byte	0x6b
 1201 021f 0A       		.uleb128 0xa
 1202 0220 A3010000 		.4byte	.LASF41
 1203 0224 04       		.byte	0x4
 1204 0225 2A       		.byte	0x2a
 1205 0226 6B000000 		.4byte	0x6b
 1206 022a 0A       		.uleb128 0xa
 1207 022b BC020000 		.4byte	.LASF42
 1208 022f 04       		.byte	0x4
 1209 0230 2D       		.byte	0x2d
 1210 0231 B6010000 		.4byte	0x1b6
 1211 0235 0A       		.uleb128 0xa
 1212 0236 2C000000 		.4byte	.LASF43
 1213 023a 04       		.byte	0x4
 1214 023b 2E       		.byte	0x2e
 1215 023c 77000000 		.4byte	0x77
 1216 0240 0A       		.uleb128 0xa
 1217 0241 5F030000 		.4byte	.LASF44
 1218 0245 04       		.byte	0x4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 32


 1219 0246 2F       		.byte	0x2f
 1220 0247 77000000 		.4byte	0x77
 1221 024b 0A       		.uleb128 0xa
 1222 024c 59000000 		.4byte	.LASF45
 1223 0250 04       		.byte	0x4
 1224 0251 30       		.byte	0x30
 1225 0252 6B000000 		.4byte	0x6b
 1226 0256 0A       		.uleb128 0xa
 1227 0257 00000000 		.4byte	.LASF46
 1228 025b 04       		.byte	0x4
 1229 025c 31       		.byte	0x31
 1230 025d 77000000 		.4byte	0x77
 1231 0261 00       		.byte	0
 1232              		.section	.debug_abbrev,"",%progbits
 1233              	.Ldebug_abbrev0:
 1234 0000 01       		.uleb128 0x1
 1235 0001 11       		.uleb128 0x11
 1236 0002 01       		.byte	0x1
 1237 0003 25       		.uleb128 0x25
 1238 0004 0E       		.uleb128 0xe
 1239 0005 13       		.uleb128 0x13
 1240 0006 0B       		.uleb128 0xb
 1241 0007 03       		.uleb128 0x3
 1242 0008 0E       		.uleb128 0xe
 1243 0009 1B       		.uleb128 0x1b
 1244 000a 0E       		.uleb128 0xe
 1245 000b 55       		.uleb128 0x55
 1246 000c 17       		.uleb128 0x17
 1247 000d 11       		.uleb128 0x11
 1248 000e 01       		.uleb128 0x1
 1249 000f 10       		.uleb128 0x10
 1250 0010 17       		.uleb128 0x17
 1251 0011 00       		.byte	0
 1252 0012 00       		.byte	0
 1253 0013 02       		.uleb128 0x2
 1254 0014 24       		.uleb128 0x24
 1255 0015 00       		.byte	0
 1256 0016 0B       		.uleb128 0xb
 1257 0017 0B       		.uleb128 0xb
 1258 0018 3E       		.uleb128 0x3e
 1259 0019 0B       		.uleb128 0xb
 1260 001a 03       		.uleb128 0x3
 1261 001b 0E       		.uleb128 0xe
 1262 001c 00       		.byte	0
 1263 001d 00       		.byte	0
 1264 001e 03       		.uleb128 0x3
 1265 001f 24       		.uleb128 0x24
 1266 0020 00       		.byte	0
 1267 0021 0B       		.uleb128 0xb
 1268 0022 0B       		.uleb128 0xb
 1269 0023 3E       		.uleb128 0x3e
 1270 0024 0B       		.uleb128 0xb
 1271 0025 03       		.uleb128 0x3
 1272 0026 08       		.uleb128 0x8
 1273 0027 00       		.byte	0
 1274 0028 00       		.byte	0
 1275 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 33


 1276 002a 16       		.uleb128 0x16
 1277 002b 00       		.byte	0
 1278 002c 03       		.uleb128 0x3
 1279 002d 0E       		.uleb128 0xe
 1280 002e 3A       		.uleb128 0x3a
 1281 002f 0B       		.uleb128 0xb
 1282 0030 3B       		.uleb128 0x3b
 1283 0031 05       		.uleb128 0x5
 1284 0032 49       		.uleb128 0x49
 1285 0033 13       		.uleb128 0x13
 1286 0034 00       		.byte	0
 1287 0035 00       		.byte	0
 1288 0036 05       		.uleb128 0x5
 1289 0037 35       		.uleb128 0x35
 1290 0038 00       		.byte	0
 1291 0039 49       		.uleb128 0x49
 1292 003a 13       		.uleb128 0x13
 1293 003b 00       		.byte	0
 1294 003c 00       		.byte	0
 1295 003d 06       		.uleb128 0x6
 1296 003e 0F       		.uleb128 0xf
 1297 003f 00       		.byte	0
 1298 0040 0B       		.uleb128 0xb
 1299 0041 0B       		.uleb128 0xb
 1300 0042 49       		.uleb128 0x49
 1301 0043 13       		.uleb128 0x13
 1302 0044 00       		.byte	0
 1303 0045 00       		.byte	0
 1304 0046 07       		.uleb128 0x7
 1305 0047 15       		.uleb128 0x15
 1306 0048 00       		.byte	0
 1307 0049 27       		.uleb128 0x27
 1308 004a 19       		.uleb128 0x19
 1309 004b 00       		.byte	0
 1310 004c 00       		.byte	0
 1311 004d 08       		.uleb128 0x8
 1312 004e 2E       		.uleb128 0x2e
 1313 004f 01       		.byte	0x1
 1314 0050 3F       		.uleb128 0x3f
 1315 0051 19       		.uleb128 0x19
 1316 0052 03       		.uleb128 0x3
 1317 0053 0E       		.uleb128 0xe
 1318 0054 3A       		.uleb128 0x3a
 1319 0055 0B       		.uleb128 0xb
 1320 0056 3B       		.uleb128 0x3b
 1321 0057 0B       		.uleb128 0xb
 1322 0058 27       		.uleb128 0x27
 1323 0059 19       		.uleb128 0x19
 1324 005a 11       		.uleb128 0x11
 1325 005b 01       		.uleb128 0x1
 1326 005c 12       		.uleb128 0x12
 1327 005d 06       		.uleb128 0x6
 1328 005e 40       		.uleb128 0x40
 1329 005f 18       		.uleb128 0x18
 1330 0060 9642     		.uleb128 0x2116
 1331 0062 19       		.uleb128 0x19
 1332 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 34


 1333 0064 13       		.uleb128 0x13
 1334 0065 00       		.byte	0
 1335 0066 00       		.byte	0
 1336 0067 09       		.uleb128 0x9
 1337 0068 34       		.uleb128 0x34
 1338 0069 00       		.byte	0
 1339 006a 03       		.uleb128 0x3
 1340 006b 0E       		.uleb128 0xe
 1341 006c 3A       		.uleb128 0x3a
 1342 006d 0B       		.uleb128 0xb
 1343 006e 3B       		.uleb128 0x3b
 1344 006f 0B       		.uleb128 0xb
 1345 0070 49       		.uleb128 0x49
 1346 0071 13       		.uleb128 0x13
 1347 0072 02       		.uleb128 0x2
 1348 0073 18       		.uleb128 0x18
 1349 0074 00       		.byte	0
 1350 0075 00       		.byte	0
 1351 0076 0A       		.uleb128 0xa
 1352 0077 34       		.uleb128 0x34
 1353 0078 00       		.byte	0
 1354 0079 03       		.uleb128 0x3
 1355 007a 0E       		.uleb128 0xe
 1356 007b 3A       		.uleb128 0x3a
 1357 007c 0B       		.uleb128 0xb
 1358 007d 3B       		.uleb128 0x3b
 1359 007e 0B       		.uleb128 0xb
 1360 007f 49       		.uleb128 0x49
 1361 0080 13       		.uleb128 0x13
 1362 0081 3F       		.uleb128 0x3f
 1363 0082 19       		.uleb128 0x19
 1364 0083 3C       		.uleb128 0x3c
 1365 0084 19       		.uleb128 0x19
 1366 0085 00       		.byte	0
 1367 0086 00       		.byte	0
 1368 0087 00       		.byte	0
 1369              		.section	.debug_aranges,"",%progbits
 1370 0000 1C000000 		.4byte	0x1c
 1371 0004 0200     		.2byte	0x2
 1372 0006 00000000 		.4byte	.Ldebug_info0
 1373 000a 04       		.byte	0x4
 1374 000b 00       		.byte	0
 1375 000c 0000     		.2byte	0
 1376 000e 0000     		.2byte	0
 1377 0010 00000000 		.4byte	.LFB2
 1378 0014 B4050000 		.4byte	.LFE2-.LFB2
 1379 0018 00000000 		.4byte	0
 1380 001c 00000000 		.4byte	0
 1381              		.section	.debug_ranges,"",%progbits
 1382              	.Ldebug_ranges0:
 1383 0000 00000000 		.4byte	.LFB2
 1384 0004 B4050000 		.4byte	.LFE2
 1385 0008 00000000 		.4byte	0
 1386 000c 00000000 		.4byte	0
 1387              		.section	.debug_line,"",%progbits
 1388              	.Ldebug_line0:
 1389 0000 C5010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 35


 1389      02007600 
 1389      00000201 
 1389      FB0E0D00 
 1389      01010101 
 1390              	.LASF46:
 1391 0000 4932435F 		.ascii	"I2C_BLE_indexBuf2\000"
 1391      424C455F 
 1391      696E6465 
 1391      78427566 
 1391      3200
 1392              	.LASF15:
 1393 0012 72656733 		.ascii	"reg32\000"
 1393      3200
 1394              	.LASF36:
 1395 0018 4932435F 		.ascii	"I2C_BLE_bufSizeBuf1\000"
 1395      424C455F 
 1395      62756653 
 1395      697A6542 
 1395      75663100 
 1396              	.LASF43:
 1397 002c 4932435F 		.ascii	"I2C_BLE_bufSizeBuf2\000"
 1397      424C455F 
 1397      62756653 
 1397      697A6542 
 1397      75663200 
 1398              	.LASF12:
 1399 0040 666C6F61 		.ascii	"float\000"
 1399      7400
 1400              	.LASF38:
 1401 0046 4932435F 		.ascii	"I2C_BLE_offsetBuf1\000"
 1401      424C455F 
 1401      6F666673 
 1401      65744275 
 1401      663100
 1402              	.LASF45:
 1403 0059 4932435F 		.ascii	"I2C_BLE_offsetBuf2\000"
 1403      424C455F 
 1403      6F666673 
 1403      65744275 
 1403      663200
 1404              	.LASF27:
 1405 006c 4932435F 		.ascii	"I2C_BLE_dataBuffer\000"
 1405      424C455F 
 1405      64617461 
 1405      42756666 
 1405      657200
 1406              	.LASF3:
 1407 007f 73686F72 		.ascii	"short unsigned int\000"
 1407      7420756E 
 1407      7369676E 
 1407      65642069 
 1407      6E7400
 1408              	.LASF29:
 1409 0092 4932435F 		.ascii	"I2C_BLE_protectBuf\000"
 1409      424C455F 
 1409      70726F74 
 1409      65637442 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 36


 1409      756600
 1410              	.LASF22:
 1411 00a5 656E6454 		.ascii	"endTransfer\000"
 1411      72616E73 
 1411      66657200 
 1412              	.LASF30:
 1413 00b1 61637469 		.ascii	"activeAddress\000"
 1413      76654164 
 1413      64726573 
 1413      7300
 1414              	.LASF31:
 1415 00bf 61636B52 		.ascii	"ackResponse\000"
 1415      6573706F 
 1415      6E736500 
 1416              	.LASF20:
 1417 00cb 6C6F6349 		.ascii	"locIndex\000"
 1417      6E646578 
 1417      00
 1418              	.LASF1:
 1419 00d4 756E7369 		.ascii	"unsigned char\000"
 1419      676E6564 
 1419      20636861 
 1419      7200
 1420              	.LASF21:
 1421 00e2 6C6F6353 		.ascii	"locStatus\000"
 1421      74617475 
 1421      7300
 1422              	.LASF5:
 1423 00ec 6C6F6E67 		.ascii	"long unsigned int\000"
 1423      20756E73 
 1423      69676E65 
 1423      6420696E 
 1423      7400
 1424              	.LASF9:
 1425 00fe 75696E74 		.ascii	"uint8\000"
 1425      3800
 1426              	.LASF47:
 1427 0104 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1427      43313120 
 1427      352E342E 
 1427      31203230 
 1427      31363036 
 1428 0137 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1428      20726576 
 1428      6973696F 
 1428      6E203233 
 1428      37373135 
 1429 016a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1429      66756E63 
 1429      74696F6E 
 1429      2D736563 
 1429      74696F6E 
 1430              	.LASF40:
 1431 0192 4932435F 		.ascii	"I2C_BLE_addrBuf1\000"
 1431      424C455F 
 1431      61646472 
 1431      42756631 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 37


 1431      00
 1432              	.LASF41:
 1433 01a3 4932435F 		.ascii	"I2C_BLE_addrBuf2\000"
 1433      424C455F 
 1433      61646472 
 1433      42756632 
 1433      00
 1434              	.LASF34:
 1435 01b4 4932435F 		.ascii	"I2C_BLE_fsmState\000"
 1435      424C455F 
 1435      66736D53 
 1435      74617465 
 1435      00
 1436              	.LASF13:
 1437 01c5 646F7562 		.ascii	"double\000"
 1437      6C6500
 1438              	.LASF32:
 1439 01cc 4932435F 		.ascii	"I2C_BLE_customIntrHandler\000"
 1439      424C455F 
 1439      63757374 
 1439      6F6D496E 
 1439      74724861 
 1440              	.LASF2:
 1441 01e6 73686F72 		.ascii	"short int\000"
 1441      7420696E 
 1441      7400
 1442              	.LASF37:
 1443 01f0 4932435F 		.ascii	"I2C_BLE_protectBuf1\000"
 1443      424C455F 
 1443      70726F74 
 1443      65637442 
 1443      75663100 
 1444              	.LASF10:
 1445 0204 75696E74 		.ascii	"uint16\000"
 1445      313600
 1446              	.LASF11:
 1447 020b 75696E74 		.ascii	"uint32\000"
 1447      333200
 1448              	.LASF8:
 1449 0212 756E7369 		.ascii	"unsigned int\000"
 1449      676E6564 
 1449      20696E74 
 1449      00
 1450              	.LASF19:
 1451 021f 6C6F6342 		.ascii	"locBufSize\000"
 1451      75665369 
 1451      7A6500
 1452              	.LASF23:
 1453 022a 6669666F 		.ascii	"fifoIndex\000"
 1453      496E6465 
 1453      7800
 1454              	.LASF7:
 1455 0234 6C6F6E67 		.ascii	"long long unsigned int\000"
 1455      206C6F6E 
 1455      6720756E 
 1455      7369676E 
 1455      65642069 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 38


 1456              	.LASF33:
 1457 024b 4932435F 		.ascii	"I2C_BLE_curStatus\000"
 1457      424C455F 
 1457      63757253 
 1457      74617475 
 1457      7300
 1458              	.LASF48:
 1459 025d 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2C_BLE_EZI2C_INT.c\000"
 1459      72617465 
 1459      645F536F 
 1459      75726365 
 1459      5C50536F 
 1460              	.LASF16:
 1461 0288 63796973 		.ascii	"cyisraddress\000"
 1461      72616464 
 1461      72657373 
 1461      00
 1462              	.LASF28:
 1463 0295 4932435F 		.ascii	"I2C_BLE_bufSizeBuf\000"
 1463      424C455F 
 1463      62756653 
 1463      697A6542 
 1463      756600
 1464              	.LASF35:
 1465 02a8 4932435F 		.ascii	"I2C_BLE_dataBuffer1\000"
 1465      424C455F 
 1465      64617461 
 1465      42756666 
 1465      65723100 
 1466              	.LASF42:
 1467 02bc 4932435F 		.ascii	"I2C_BLE_dataBuffer2\000"
 1467      424C455F 
 1467      64617461 
 1467      42756666 
 1467      65723200 
 1468              	.LASF6:
 1469 02d0 6C6F6E67 		.ascii	"long long int\000"
 1469      206C6F6E 
 1469      6720696E 
 1469      7400
 1470              	.LASF18:
 1471 02de 73697A65 		.ascii	"sizetype\000"
 1471      74797065 
 1471      00
 1472              	.LASF14:
 1473 02e7 63686172 		.ascii	"char\000"
 1473      00
 1474              	.LASF26:
 1475 02ec 6C6F6349 		.ascii	"locIntrSlave\000"
 1475      6E747253 
 1475      6C617665 
 1475      00
 1476              	.LASF50:
 1477 02f9 4932435F 		.ascii	"I2C_BLE_EZI2C_STRETCH_ISR\000"
 1477      424C455F 
 1477      455A4932 
 1477      435F5354 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc8zwZWs.s 			page 39


 1477      52455443 
 1478              	.LASF49:
 1479 0313 443A5C50 		.ascii	"D:\\Programming\\PSoC\\Projects\\EZ-BLE.cydsn\000"
 1479      726F6772 
 1479      616D6D69 
 1479      6E675C50 
 1479      536F435C 
 1480              	.LASF25:
 1481 033d 6C6F6349 		.ascii	"locIntrCause\000"
 1481      6E747243 
 1481      61757365 
 1481      00
 1482              	.LASF4:
 1483 034a 6C6F6E67 		.ascii	"long int\000"
 1483      20696E74 
 1483      00
 1484              	.LASF17:
 1485 0353 6C6F6E67 		.ascii	"long double\000"
 1485      20646F75 
 1485      626C6500 
 1486              	.LASF44:
 1487 035f 4932435F 		.ascii	"I2C_BLE_protectBuf2\000"
 1487      424C455F 
 1487      70726F74 
 1487      65637442 
 1487      75663200 
 1488              	.LASF0:
 1489 0373 7369676E 		.ascii	"signed char\000"
 1489      65642063 
 1489      68617200 
 1490              	.LASF24:
 1491 037f 6C6F6342 		.ascii	"locByte\000"
 1491      79746500 
 1492              	.LASF39:
 1493 0387 4932435F 		.ascii	"I2C_BLE_indexBuf1\000"
 1493      424C455F 
 1493      696E6465 
 1493      78427566 
 1493      3100
 1494              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
