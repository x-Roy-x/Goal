ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 006CDC02 		.word	48000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 80BB0000 		.word	48000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 30       		.byte	48
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000C05D 		.word	1572864000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB2:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 99 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 5


 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 100 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 115 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE2:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
 157              	CySysClkImoStop:
 158              	.LFB3:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 6


 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 131 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 169              		.loc 1 140 0
 170 0004 044B     		ldr	r3, .L5
 171 0006 044A     		ldr	r2, .L5
 172 0008 1268     		ldr	r2, [r2]
 173 000a 5200     		lsls	r2, r2, #1
 174 000c 5208     		lsrs	r2, r2, #1
 175 000e 1A60     		str	r2, [r3]
 141:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 141 0
 177 0010 C046     		nop
 178 0012 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0014 80BD     		pop	{r7, pc}
 181              	.L6:
 182 0016 C046     		.align	2
 183              	.L5:
 184 0018 08010B40 		.word	1074462984
 185              		.cfi_endproc
 186              	.LFE3:
 187              		.size	CySysClkImoStop, .-CySysClkImoStop
 188              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 189              		.align	2
 190              		.global	CySysClkWriteHfclkDirect
 191              		.code	16
 192              		.thumb_func
 193              		.type	CySysClkWriteHfclkDirect, %function
 194              	CySysClkWriteHfclkDirect:
 195              	.LFB4:
 142:Generated_Source\PSoC4/CyLib.c **** 
 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 7


 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
 200:Generated_Source\PSoC4/CyLib.c ****             #else
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 8


 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 9


 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 314:Generated_Source\PSoC4/CyLib.c ****         #endif
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 10


 315:Generated_Source\PSoC4/CyLib.c ****     }
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 371:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 11


 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
 428:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 12


 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 13


 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
 196              		.loc 1 540 0
 197              		.cfi_startproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 14


 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 85B0     		sub	sp, sp, #20
 206              		.cfi_def_cfa_offset 32
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 210              		.loc 1 548 0
 211 0008 0F23     		movs	r3, #15
 212 000a FC18     		adds	r4, r7, r3
 213 000c FFF7FEFF 		bl	CyEnterCriticalSection
 214 0010 0300     		movs	r3, r0
 215 0012 2370     		strb	r3, [r4]
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 575 0
 217 0014 0B4B     		ldr	r3, .L8
 218 0016 1B68     		ldr	r3, [r3]
 219 0018 0722     		movs	r2, #7
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 15


 220 001a 9343     		bics	r3, r2
 221 001c BB60     		str	r3, [r7, #8]
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 586 0
 223 001e 7B68     		ldr	r3, [r7, #4]
 224 0020 0722     		movs	r2, #7
 225 0022 1340     		ands	r3, r2
 226 0024 BA68     		ldr	r2, [r7, #8]
 227 0026 1343     		orrs	r3, r2
 228 0028 BB60     		str	r3, [r7, #8]
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 229              		.loc 1 589 0
 230 002a 064B     		ldr	r3, .L8
 231 002c BA68     		ldr	r2, [r7, #8]
 232 002e 1A60     		str	r2, [r3]
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 233              		.loc 1 591 0
 234 0030 0F23     		movs	r3, #15
 235 0032 FB18     		adds	r3, r7, r3
 236 0034 1B78     		ldrb	r3, [r3]
 237 0036 1800     		movs	r0, r3
 238 0038 FFF7FEFF 		bl	CyExitCriticalSection
 592:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 592 0
 240 003c C046     		nop
 241 003e BD46     		mov	sp, r7
 242 0040 05B0     		add	sp, sp, #20
 243              		@ sp needed
 244 0042 90BD     		pop	{r4, r7, pc}
 245              	.L9:
 246              		.align	2
 247              	.L8:
 248 0044 00010B40 		.word	1074462976
 249              		.cfi_endproc
 250              	.LFE4:
 251              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 252              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 253              		.align	2
 254              		.global	CySysEnablePumpClock
 255              		.code	16
 256              		.thumb_func
 257              		.type	CySysEnablePumpClock, %function
 258              	CySysEnablePumpClock:
 259              	.LFB5:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 16


 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 260              		.loc 1 612 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 273              		.loc 1 614 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 0122     		movs	r2, #1
 276 000c 1340     		ands	r3, r2
 277 000e 08D0     		beq	.L11
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 278              		.loc 1 616 0
 279 0010 0C4A     		ldr	r2, .L14
 280 0012 0C4B     		ldr	r3, .L14
 281 0014 1968     		ldr	r1, [r3]
 282 0016 0C4B     		ldr	r3, .L14+4
 283 0018 1B68     		ldr	r3, [r3]
 284 001a 5B06     		lsls	r3, r3, #25
 285 001c 0B43     		orrs	r3, r1
 286 001e 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 17


 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 636 0
 288 0020 0CE0     		b	.L13
 289              	.L11:
 620:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 290              		.loc 1 620 0
 291 0022 084B     		ldr	r3, .L14
 292 0024 1B68     		ldr	r3, [r3]
 293 0026 5B0E     		lsrs	r3, r3, #25
 294 0028 0722     		movs	r2, #7
 295 002a 1A40     		ands	r2, r3
 296 002c 064B     		ldr	r3, .L14+4
 297 002e 1A60     		str	r2, [r3]
 622:Generated_Source\PSoC4/CyLib.c ****         }
 298              		.loc 1 622 0
 299 0030 044B     		ldr	r3, .L14
 300 0032 044A     		ldr	r2, .L14
 301 0034 1268     		ldr	r2, [r2]
 302 0036 0549     		ldr	r1, .L14+8
 303 0038 0A40     		ands	r2, r1
 304 003a 1A60     		str	r2, [r3]
 305              	.L13:
 306              		.loc 1 636 0
 307 003c C046     		nop
 308 003e BD46     		mov	sp, r7
 309 0040 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0042 80BD     		pop	{r7, pc}
 312              	.L15:
 313              		.align	2
 314              	.L14:
 315 0044 08010B40 		.word	1074462984
 316 0048 00000000 		.word	CySysClkPumpConfig
 317 004c FFFFFFF1 		.word	-234881025
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 321              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 322              		.align	2
 323              		.global	CySysClkGetSysclkSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysClkGetSysclkSource, %function
 327              	CySysClkGetSysclkSource:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 18


 328              	.LFB6:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 329              		.loc 1 649 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              		.cfi_def_cfa_offset 24
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 342              		.loc 1 653 0
 343 0006 FC1D     		adds	r4, r7, #7
 344 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 345 000c 0300     		movs	r3, r0
 346 000e 2370     		strb	r3, [r4]
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 347              		.loc 1 663 0
 348 0010 074B     		ldr	r3, .L18
 349 0012 1B68     		ldr	r3, [r3]
 350 0014 0722     		movs	r2, #7
 351 0016 1340     		ands	r3, r2
 352 0018 3B60     		str	r3, [r7]
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 19


 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 353              		.loc 1 672 0
 354 001a FB1D     		adds	r3, r7, #7
 355 001c 1B78     		ldrb	r3, [r3]
 356 001e 1800     		movs	r0, r3
 357 0020 FFF7FEFF 		bl	CyExitCriticalSection
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 358              		.loc 1 674 0
 359 0024 3B68     		ldr	r3, [r7]
 675:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 675 0
 361 0026 1800     		movs	r0, r3
 362 0028 BD46     		mov	sp, r7
 363 002a 03B0     		add	sp, sp, #12
 364              		@ sp needed
 365 002c 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367 002e C046     		.align	2
 368              	.L18:
 369 0030 00010B40 		.word	1074462976
 370              		.cfi_endproc
 371              	.LFE6:
 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB7:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 20


 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 710 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 395              		.loc 1 713 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 401              		.loc 1 715 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 7A68     		ldr	r2, [r7, #4]
 404 0018 D104     		lsls	r1, r2, #19
 405 001a E022     		movs	r2, #224
 406 001c 9203     		lsls	r2, r2, #14
 407 001e 1140     		ands	r1, r2
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 408              		.loc 1 717 0
 409 0020 074A     		ldr	r2, .L21
 410 0022 1268     		ldr	r2, [r2]
 411 0024 0748     		ldr	r0, .L21+4
 412 0026 0240     		ands	r2, r0
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 413              		.loc 1 716 0
 414 0028 0A43     		orrs	r2, r1
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 415              		.loc 1 715 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 21


 416 002a 1A60     		str	r2, [r3]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 417              		.loc 1 720 0
 418 002c 0F23     		movs	r3, #15
 419 002e FB18     		adds	r3, r7, r3
 420 0030 1B78     		ldrb	r3, [r3]
 421 0032 1800     		movs	r0, r3
 422 0034 FFF7FEFF 		bl	CyExitCriticalSection
 721:Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 721 0
 424 0038 C046     		nop
 425 003a BD46     		mov	sp, r7
 426 003c 05B0     		add	sp, sp, #20
 427              		@ sp needed
 428 003e 90BD     		pop	{r4, r7, pc}
 429              	.L22:
 430              		.align	2
 431              	.L21:
 432 0040 00010B40 		.word	1074462976
 433 0044 FFFFC7FF 		.word	-3670017
 434              		.cfi_endproc
 435              	.LFE7:
 436              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 437              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 438              		.align	2
 439              		.global	CySysClkWriteImoFreq
 440              		.code	16
 441              		.thumb_func
 442              		.type	CySysClkWriteImoFreq, %function
 443              	CySysClkWriteImoFreq:
 444              	.LFB8:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 22


 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 445              		.loc 1 768 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 40
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 8BB0     		sub	sp, sp, #44
 455              		.cfi_def_cfa_offset 56
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 23


 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 459              		.loc 1 790 0
 460 0008 2723     		movs	r3, #39
 461 000a FC18     		adds	r4, r7, r3
 462 000c FFF7FEFF 		bl	CyEnterCriticalSection
 463 0010 0300     		movs	r3, r0
 464 0012 2370     		strb	r3, [r4]
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 465              		.loc 1 824 0
 466 0014 194B     		ldr	r3, .L24
 467 0016 1A68     		ldr	r2, [r3]
 468 0018 0C23     		movs	r3, #12
 469 001a FB18     		adds	r3, r7, r3
 470 001c 1A60     		str	r2, [r3]
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 471              		.loc 1 825 0
 472 001e 184B     		ldr	r3, .L24+4
 473 0020 1A68     		ldr	r2, [r3]
 474 0022 0C23     		movs	r3, #12
 475 0024 FB18     		adds	r3, r7, r3
 476 0026 5A60     		str	r2, [r3, #4]
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 477              		.loc 1 826 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 24


 478 0028 7B68     		ldr	r3, [r7, #4]
 479 002a 033B     		subs	r3, r3, #3
 480 002c 154A     		ldr	r2, .L24+8
 481 002e D35C     		ldrb	r3, [r2, r3]
 482 0030 1A00     		movs	r2, r3
 483 0032 0C23     		movs	r3, #12
 484 0034 FB18     		adds	r3, r7, r3
 485 0036 9A60     		str	r2, [r3, #8]
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 486              		.loc 1 827 0
 487 0038 134B     		ldr	r3, .L24+12
 488 003a 1A68     		ldr	r2, [r3]
 489 003c 0C23     		movs	r3, #12
 490 003e FB18     		adds	r3, r7, r3
 491 0040 DA60     		str	r2, [r3, #12]
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 492              		.loc 1 829 0
 493 0042 1C23     		movs	r3, #28
 494 0044 FB18     		adds	r3, r7, r3
 495 0046 114A     		ldr	r2, .L24+16
 496 0048 1A60     		str	r2, [r3]
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 497              		.loc 1 832 0
 498 004a 0C23     		movs	r3, #12
 499 004c FA18     		adds	r2, r7, r3
 500 004e 1C23     		movs	r3, #28
 501 0050 FB18     		adds	r3, r7, r3
 502 0052 5A60     		str	r2, [r3, #4]
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 503              		.loc 1 834 0
 504 0054 0E4B     		ldr	r3, .L24+20
 505 0056 1C22     		movs	r2, #28
 506 0058 BA18     		adds	r2, r7, r2
 507 005a 1A60     		str	r2, [r3]
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 508              		.loc 1 835 0
 509 005c 0D4B     		ldr	r3, .L24+24
 510 005e 0E4A     		ldr	r2, .L24+28
 511 0060 1A60     		str	r2, [r3]
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 512              		.loc 1 836 0
 513 0062 0B4B     		ldr	r3, .L24+20
 514 0064 1B68     		ldr	r3, [r3]
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 25


 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 26


 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 515              		.loc 1 947 0
 516 0066 2723     		movs	r3, #39
 517 0068 FB18     		adds	r3, r7, r3
 518 006a 1B78     		ldrb	r3, [r3]
 519 006c 1800     		movs	r0, r3
 520 006e FFF7FEFF 		bl	CyExitCriticalSection
 948:Generated_Source\PSoC4/CyLib.c ****     }
 521              		.loc 1 948 0
 522 0072 C046     		nop
 523 0074 BD46     		mov	sp, r7
 524 0076 0BB0     		add	sp, sp, #44
 525              		@ sp needed
 526 0078 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 27


 527              	.L25:
 528 007a C046     		.align	2
 529              	.L24:
 530 007c 08010B40 		.word	1074462984
 531 0080 00010B40 		.word	1074462976
 532 0084 00000000 		.word	cyImoFreqMhz2Reg
 533 0088 30001040 		.word	1074790448
 534 008c B6EA0000 		.word	60086
 535 0090 08001040 		.word	1074790408
 536 0094 04001040 		.word	1074790404
 537 0098 17000080 		.word	-2147483625
 538              		.cfi_endproc
 539              	.LFE8:
 540              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 541              		.section	.text.CySysClkEcoStart,"ax",%progbits
 542              		.align	2
 543              		.global	CySysClkEcoStart
 544              		.code	16
 545              		.thumb_func
 546              		.type	CySysClkEcoStart, %function
 547              	CySysClkEcoStart:
 548              	.LFB9:
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 28


 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 29


1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 30


1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
 549              		.loc 1 1152 0
 550              		.cfi_startproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 31


 551              		@ args = 0, pretend = 0, frame = 16
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553 0000 80B5     		push	{r7, lr}
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 84B0     		sub	sp, sp, #16
 558              		.cfi_def_cfa_offset 24
 559 0004 00AF     		add	r7, sp, #0
 560              		.cfi_def_cfa_register 7
 561 0006 7860     		str	r0, [r7, #4]
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 562              		.loc 1 1153 0
 563 0008 0023     		movs	r3, #0
 564 000a FB60     		str	r3, [r7, #12]
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 565              		.loc 1 1157 0
 566 000c 154B     		ldr	r3, .L32
 567 000e 154A     		ldr	r2, .L32
 568 0010 1268     		ldr	r2, [r2]
 569 0012 0121     		movs	r1, #1
 570 0014 0A43     		orrs	r2, r1
 571 0016 1A60     		str	r2, [r3]
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 572              		.loc 1 1160 0
 573 0018 134B     		ldr	r3, .L32+4
 574 001a 144A     		ldr	r2, .L32+8
 575 001c 1A60     		str	r2, [r3]
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 576              		.loc 1 1163 0
 577 001e 144B     		ldr	r3, .L32+12
 578 0020 134A     		ldr	r2, .L32+12
 579 0022 1268     		ldr	r2, [r2]
 580 0024 8021     		movs	r1, #128
 581 0026 0902     		lsls	r1, r1, #8
 582 0028 0A43     		orrs	r2, r1
 583 002a 1A60     		str	r2, [r3]
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 32


1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 33


1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 584              		.loc 1 1261 0
 585 002c 7B68     		ldr	r3, [r7, #4]
 586 002e 002B     		cmp	r3, #0
 587 0030 12D0     		beq	.L27
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 588              		.loc 1 1263 0
 589 0032 1023     		movs	r3, #16
 590 0034 FB60     		str	r3, [r7, #12]
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 591              		.loc 1 1265 0
 592 0036 0CE0     		b	.L28
 593              	.L30:
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 594              		.loc 1 1267 0
 595 0038 0120     		movs	r0, #1
 596 003a FFF7FEFF 		bl	CyDelayUs
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 597              		.loc 1 1269 0
 598 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 599 0042 031E     		subs	r3, r0, #0
 600 0044 02D0     		beq	.L29
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 601              		.loc 1 1271 0
 602 0046 0023     		movs	r3, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 34


 603 0048 FB60     		str	r3, [r7, #12]
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
 604              		.loc 1 1272 0
 605 004a 05E0     		b	.L27
 606              	.L29:
1265:Generated_Source\PSoC4/CyLib.c ****             {
 607              		.loc 1 1265 0
 608 004c 7B68     		ldr	r3, [r7, #4]
 609 004e 013B     		subs	r3, r3, #1
 610 0050 7B60     		str	r3, [r7, #4]
 611              	.L28:
1265:Generated_Source\PSoC4/CyLib.c ****             {
 612              		.loc 1 1265 0 is_stmt 0 discriminator 1
 613 0052 7B68     		ldr	r3, [r7, #4]
 614 0054 002B     		cmp	r3, #0
 615 0056 EFD1     		bne	.L30
 616              	.L27:
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 617              		.loc 1 1278 0 is_stmt 1
 618 0058 FB68     		ldr	r3, [r7, #12]
1279:Generated_Source\PSoC4/CyLib.c ****     }
 619              		.loc 1 1279 0
 620 005a 1800     		movs	r0, r3
 621 005c BD46     		mov	sp, r7
 622 005e 04B0     		add	sp, sp, #16
 623              		@ sp needed
 624 0060 80BD     		pop	{r7, pc}
 625              	.L33:
 626 0062 C046     		.align	2
 627              	.L32:
 628 0064 60F02E40 		.word	1076818016
 629 0068 78002E40 		.word	1076756600
 630 006c 02200000 		.word	8194
 631 0070 10002E40 		.word	1076756496
 632              		.cfi_endproc
 633              	.LFE9:
 634              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 635              		.section	.text.CySysClkEcoStop,"ax",%progbits
 636              		.align	2
 637              		.global	CySysClkEcoStop
 638              		.code	16
 639              		.thumb_func
 640              		.type	CySysClkEcoStop, %function
 641              	CySysClkEcoStop:
 642              	.LFB10:
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 35


1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1294:Generated_Source\PSoC4/CyLib.c ****     {
 643              		.loc 1 1294 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 00AF     		add	r7, sp, #0
 652              		.cfi_def_cfa_register 7
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 653              		.loc 1 1297 0
 654 0004 074B     		ldr	r3, .L35
 655 0006 074A     		ldr	r2, .L35
 656 0008 1268     		ldr	r2, [r2]
 657 000a 0121     		movs	r1, #1
 658 000c 8A43     		bics	r2, r1
 659 000e 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 660              		.loc 1 1300 0
 661 0010 054B     		ldr	r3, .L35+4
 662 0012 054A     		ldr	r2, .L35+4
 663 0014 1268     		ldr	r2, [r2]
 664 0016 0549     		ldr	r1, .L35+8
 665 0018 0A40     		ands	r2, r1
 666 001a 1A60     		str	r2, [r3]
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
 667              		.loc 1 1306 0
 668 001c C046     		nop
 669 001e BD46     		mov	sp, r7
 670              		@ sp needed
 671 0020 80BD     		pop	{r7, pc}
 672              	.L36:
 673 0022 C046     		.align	2
 674              	.L35:
 675 0024 60F02E40 		.word	1076818016
 676 0028 10002E40 		.word	1076756496
 677 002c FF7FFFFF 		.word	-32769
 678              		.cfi_endproc
 679              	.LFE10:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 36


 680              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 681              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 682              		.align	2
 683              		.global	CySysClkEcoReadStatus
 684              		.code	16
 685              		.thumb_func
 686              		.type	CySysClkEcoReadStatus, %function
 687              	CySysClkEcoReadStatus:
 688              	.LFB11:
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
 689              		.loc 1 1328 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 8
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693 0000 80B5     		push	{r7, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 82B0     		sub	sp, sp, #8
 698              		.cfi_def_cfa_offset 16
 699 0004 00AF     		add	r7, sp, #0
 700              		.cfi_def_cfa_register 7
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 701              		.loc 1 1332 0
 702 0006 054B     		ldr	r3, .L39
 703 0008 1B68     		ldr	r3, [r3]
 704 000a 0122     		movs	r2, #1
 705 000c 1340     		ands	r3, r2
 706 000e 7B60     		str	r3, [r7, #4]
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 37


1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 707              		.loc 1 1344 0
 708 0010 7B68     		ldr	r3, [r7, #4]
1345:Generated_Source\PSoC4/CyLib.c ****     }
 709              		.loc 1 1345 0
 710 0012 1800     		movs	r0, r3
 711 0014 BD46     		mov	sp, r7
 712 0016 02B0     		add	sp, sp, #8
 713              		@ sp needed
 714 0018 80BD     		pop	{r7, pc}
 715              	.L40:
 716 001a C046     		.align	2
 717              	.L39:
 718 001c 0C002E40 		.word	1076756492
 719              		.cfi_endproc
 720              	.LFE11:
 721              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 722              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 723              		.align	2
 724              		.global	CySysClkWriteEcoDiv
 725              		.code	16
 726              		.thumb_func
 727              		.type	CySysClkWriteEcoDiv, %function
 728              	CySysClkWriteEcoDiv:
 729              	.LFB12:
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 38


1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
 730              		.loc 1 1375 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 16
 733              		@ frame_needed = 1, uses_anonymous_args = 0
 734 0000 90B5     		push	{r4, r7, lr}
 735              		.cfi_def_cfa_offset 12
 736              		.cfi_offset 4, -12
 737              		.cfi_offset 7, -8
 738              		.cfi_offset 14, -4
 739 0002 85B0     		sub	sp, sp, #20
 740              		.cfi_def_cfa_offset 32
 741 0004 00AF     		add	r7, sp, #0
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 744              		.loc 1 1378 0
 745 0008 114B     		ldr	r3, .L45
 746 000a 1B68     		ldr	r3, [r3]
 747 000c 0722     		movs	r2, #7
 748 000e 1340     		ands	r3, r2
 749 0010 022B     		cmp	r3, #2
 750 0012 16D0     		beq	.L42
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 751              		.loc 1 1380 0
 752 0014 0F23     		movs	r3, #15
 753 0016 FC18     		adds	r4, r7, r3
 754 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 755 001c 0300     		movs	r3, r0
 756 001e 2370     		strb	r3, [r4]
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 757              		.loc 1 1382 0
 758 0020 0C4B     		ldr	r3, .L45+4
 759 0022 7A68     		ldr	r2, [r7, #4]
 760 0024 0321     		movs	r1, #3
 761 0026 1140     		ands	r1, r2
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 762              		.loc 1 1383 0
 763 0028 0A4A     		ldr	r2, .L45+4
 764 002a 1268     		ldr	r2, [r2]
 765 002c 0320     		movs	r0, #3
 766 002e 8243     		bics	r2, r0
1382:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 767              		.loc 1 1382 0
 768 0030 0A43     		orrs	r2, r1
 769 0032 1A60     		str	r2, [r3]
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 770              		.loc 1 1385 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 39


 771 0034 0F23     		movs	r3, #15
 772 0036 FB18     		adds	r3, r7, r3
 773 0038 1B78     		ldrb	r3, [r3]
 774 003a 1800     		movs	r0, r3
 775 003c FFF7FEFF 		bl	CyExitCriticalSection
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
 776              		.loc 1 1392 0
 777 0040 02E0     		b	.L44
 778              	.L42:
1390:Generated_Source\PSoC4/CyLib.c ****             }
 779              		.loc 1 1390 0 discriminator 1
 780 0042 0020     		movs	r0, #0
 781 0044 FFF7FEFF 		bl	CyHalt
 782              	.L44:
 783              		.loc 1 1392 0
 784 0048 C046     		nop
 785 004a BD46     		mov	sp, r7
 786 004c 05B0     		add	sp, sp, #20
 787              		@ sp needed
 788 004e 90BD     		pop	{r4, r7, pc}
 789              	.L46:
 790              		.align	2
 791              	.L45:
 792 0050 00010B40 		.word	1074462976
 793 0054 64F02E40 		.word	1076818020
 794              		.cfi_endproc
 795              	.LFE12:
 796              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 797              		.section	.text.CySysLvdEnable,"ax",%progbits
 798              		.align	2
 799              		.global	CySysLvdEnable
 800              		.code	16
 801              		.thumb_func
 802              		.type	CySysLvdEnable, %function
 803              	CySysLvdEnable:
 804              	.LFB13:
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 40


1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 41


1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 42


1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 43


1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 44


1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1692:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 45


1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1749:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 46


1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1751:Generated_Source\PSoC4/CyLib.c ****     }
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 47


1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 48


1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 49


1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 50


1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 51


2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 52


2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 53


2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 54


2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 55


2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
 805              		.loc 1 2267 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 8
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809 0000 80B5     		push	{r7, lr}
 810              		.cfi_def_cfa_offset 8
 811              		.cfi_offset 7, -8
 812              		.cfi_offset 14, -4
 813 0002 82B0     		sub	sp, sp, #8
 814              		.cfi_def_cfa_offset 16
 815 0004 00AF     		add	r7, sp, #0
 816              		.cfi_def_cfa_register 7
 817 0006 7860     		str	r0, [r7, #4]
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 818              		.loc 1 2269 0
 819 0008 144B     		ldr	r3, .L48
 820 000a 144A     		ldr	r2, .L48
 821 000c 1268     		ldr	r2, [r2]
 822 000e 0221     		movs	r1, #2
 823 0010 8A43     		bics	r2, r1
 824 0012 1A60     		str	r2, [r3]
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 825              		.loc 1 2272 0
 826 0014 124B     		ldr	r3, .L48+4
 827 0016 124A     		ldr	r2, .L48+4
 828 0018 1268     		ldr	r2, [r2]
 829 001a 1E21     		movs	r1, #30
 830 001c 8A43     		bics	r2, r1
 831 001e 1100     		movs	r1, r2
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 832              		.loc 1 2273 0
 833 0020 7A68     		ldr	r2, [r7, #4]
 834 0022 5200     		lsls	r2, r2, #1
 835 0024 1E20     		movs	r0, #30
 836 0026 0240     		ands	r2, r0
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 837              		.loc 1 2272 0
 838 0028 0A43     		orrs	r2, r1
 839 002a 1A60     		str	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 840              		.loc 1 2276 0
 841 002c 0C4B     		ldr	r3, .L48+4
 842 002e 0C4A     		ldr	r2, .L48+4
 843 0030 1268     		ldr	r2, [r2]
 844 0032 0121     		movs	r1, #1
 845 0034 0A43     		orrs	r2, r1
 846 0036 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 56


2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 847              		.loc 1 2279 0
 848 0038 FA23     		movs	r3, #250
 849 003a 9B00     		lsls	r3, r3, #2
 850 003c 1800     		movs	r0, r3
 851 003e FFF7FEFF 		bl	CyDelayUs
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 852              		.loc 1 2282 0
 853 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 854              		.loc 1 2285 0
 855 0046 054B     		ldr	r3, .L48
 856 0048 044A     		ldr	r2, .L48
 857 004a 1268     		ldr	r2, [r2]
 858 004c 0221     		movs	r1, #2
 859 004e 0A43     		orrs	r2, r1
 860 0050 1A60     		str	r2, [r3]
2286:Generated_Source\PSoC4/CyLib.c ****     }
 861              		.loc 1 2286 0
 862 0052 C046     		nop
 863 0054 BD46     		mov	sp, r7
 864 0056 02B0     		add	sp, sp, #8
 865              		@ sp needed
 866 0058 80BD     		pop	{r7, pc}
 867              	.L49:
 868 005a C046     		.align	2
 869              	.L48:
 870 005c 08000B40 		.word	1074462728
 871 0060 18000B40 		.word	1074462744
 872              		.cfi_endproc
 873              	.LFE13:
 874              		.size	CySysLvdEnable, .-CySysLvdEnable
 875              		.section	.text.CySysLvdDisable,"ax",%progbits
 876              		.align	2
 877              		.global	CySysLvdDisable
 878              		.code	16
 879              		.thumb_func
 880              		.type	CySysLvdDisable, %function
 881              	CySysLvdDisable:
 882              	.LFB14:
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 57


 883              		.loc 1 2297 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 00AF     		add	r7, sp, #0
 892              		.cfi_def_cfa_register 7
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 893              		.loc 1 2298 0
 894 0004 074B     		ldr	r3, .L51
 895 0006 074A     		ldr	r2, .L51
 896 0008 1268     		ldr	r2, [r2]
 897 000a 0221     		movs	r1, #2
 898 000c 8A43     		bics	r2, r1
 899 000e 1A60     		str	r2, [r3]
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 900              		.loc 1 2299 0
 901 0010 054B     		ldr	r3, .L51+4
 902 0012 054A     		ldr	r2, .L51+4
 903 0014 1268     		ldr	r2, [r2]
 904 0016 0121     		movs	r1, #1
 905 0018 8A43     		bics	r2, r1
 906 001a 1A60     		str	r2, [r3]
2300:Generated_Source\PSoC4/CyLib.c ****     }
 907              		.loc 1 2300 0
 908 001c C046     		nop
 909 001e BD46     		mov	sp, r7
 910              		@ sp needed
 911 0020 80BD     		pop	{r7, pc}
 912              	.L52:
 913 0022 C046     		.align	2
 914              	.L51:
 915 0024 08000B40 		.word	1074462728
 916 0028 18000B40 		.word	1074462744
 917              		.cfi_endproc
 918              	.LFE14:
 919              		.size	CySysLvdDisable, .-CySysLvdDisable
 920              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 921              		.align	2
 922              		.global	CySysLvdGetInterruptSource
 923              		.code	16
 924              		.thumb_func
 925              		.type	CySysLvdGetInterruptSource, %function
 926              	CySysLvdGetInterruptSource:
 927              	.LFB15:
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 58


2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
 928              		.loc 1 2315 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932 0000 80B5     		push	{r7, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 938              		.loc 1 2316 0
 939 0004 034B     		ldr	r3, .L55
 940 0006 1B68     		ldr	r3, [r3]
 941 0008 0222     		movs	r2, #2
 942 000a 1340     		ands	r3, r2
2317:Generated_Source\PSoC4/CyLib.c ****     }
 943              		.loc 1 2317 0
 944 000c 1800     		movs	r0, r3
 945 000e BD46     		mov	sp, r7
 946              		@ sp needed
 947 0010 80BD     		pop	{r7, pc}
 948              	.L56:
 949 0012 C046     		.align	2
 950              	.L55:
 951 0014 04000B40 		.word	1074462724
 952              		.cfi_endproc
 953              	.LFE15:
 954              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 955              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 956              		.align	2
 957              		.global	CySysLvdClearInterrupt
 958              		.code	16
 959              		.thumb_func
 960              		.type	CySysLvdClearInterrupt, %function
 961              	CySysLvdClearInterrupt:
 962              	.LFB16:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 59


 963              		.loc 1 2331 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 00AF     		add	r7, sp, #0
 972              		.cfi_def_cfa_register 7
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 973              		.loc 1 2332 0
 974 0004 024B     		ldr	r3, .L58
 975 0006 0222     		movs	r2, #2
 976 0008 1A60     		str	r2, [r3]
2333:Generated_Source\PSoC4/CyLib.c ****     }
 977              		.loc 1 2333 0
 978 000a C046     		nop
 979 000c BD46     		mov	sp, r7
 980              		@ sp needed
 981 000e 80BD     		pop	{r7, pc}
 982              	.L59:
 983              		.align	2
 984              	.L58:
 985 0010 04000B40 		.word	1074462724
 986              		.cfi_endproc
 987              	.LFE16:
 988              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 989              		.section	.text.CySysGetResetReason,"ax",%progbits
 990              		.align	2
 991              		.global	CySysGetResetReason
 992              		.code	16
 993              		.thumb_func
 994              		.type	CySysGetResetReason, %function
 995              	CySysGetResetReason:
 996              	.LFB17:
2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 60


2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 997              		.loc 1 2357 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 16
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001 0000 80B5     		push	{r7, lr}
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 7, -8
 1004              		.cfi_offset 14, -4
 1005 0002 84B0     		sub	sp, sp, #16
 1006              		.cfi_def_cfa_offset 24
 1007 0004 00AF     		add	r7, sp, #0
 1008              		.cfi_def_cfa_register 7
 1009 0006 7860     		str	r0, [r7, #4]
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1010              		.loc 1 2360 0
 1011 0008 7B68     		ldr	r3, [r7, #4]
 1012 000a 1922     		movs	r2, #25
 1013 000c 1340     		ands	r3, r2
 1014 000e 7B60     		str	r3, [r7, #4]
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1015              		.loc 1 2361 0
 1016 0010 064B     		ldr	r3, .L62
 1017 0012 1B68     		ldr	r3, [r3]
 1018 0014 1922     		movs	r2, #25
 1019 0016 1340     		ands	r3, r2
 1020 0018 FB60     		str	r3, [r7, #12]
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1021              		.loc 1 2363 0
 1022 001a 044B     		ldr	r3, .L62
 1023 001c 7A68     		ldr	r2, [r7, #4]
 1024 001e 1A60     		str	r2, [r3]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1025              		.loc 1 2365 0
 1026 0020 FB68     		ldr	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** }
 1027              		.loc 1 2366 0
 1028 0022 1800     		movs	r0, r3
 1029 0024 BD46     		mov	sp, r7
 1030 0026 04B0     		add	sp, sp, #16
 1031              		@ sp needed
 1032 0028 80BD     		pop	{r7, pc}
 1033              	.L63:
 1034 002a C046     		.align	2
 1035              	.L62:
 1036 002c 00030B40 		.word	1074463488
 1037              		.cfi_endproc
 1038              	.LFE17:
 1039              		.size	CySysGetResetReason, .-CySysGetResetReason
 1040              		.section	.text.CyDisableInts,"ax",%progbits
 1041              		.align	2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 61


 1042              		.global	CyDisableInts
 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	CyDisableInts, %function
 1046              	CyDisableInts:
 1047              	.LFB18:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 1048              		.loc 1 2380 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 8
 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052 0000 80B5     		push	{r7, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 7, -8
 1055              		.cfi_offset 14, -4
 1056 0002 82B0     		sub	sp, sp, #8
 1057              		.cfi_def_cfa_offset 16
 1058 0004 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1060              		.loc 1 2384 0
 1061 0006 064B     		ldr	r3, .L66
 1062 0008 1B68     		ldr	r3, [r3]
 1063 000a 7B60     		str	r3, [r7, #4]
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1064              		.loc 1 2387 0
 1065 000c 044B     		ldr	r3, .L66
 1066 000e 0122     		movs	r2, #1
 1067 0010 5242     		rsbs	r2, r2, #0
 1068 0012 1A60     		str	r2, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1069              		.loc 1 2389 0
 1070 0014 7B68     		ldr	r3, [r7, #4]
2390:Generated_Source\PSoC4/CyLib.c **** }
 1071              		.loc 1 2390 0
 1072 0016 1800     		movs	r0, r3
 1073 0018 BD46     		mov	sp, r7
 1074 001a 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 62


 1075              		@ sp needed
 1076 001c 80BD     		pop	{r7, pc}
 1077              	.L67:
 1078 001e C046     		.align	2
 1079              	.L66:
 1080 0020 80E100E0 		.word	-536813184
 1081              		.cfi_endproc
 1082              	.LFE18:
 1083              		.size	CyDisableInts, .-CyDisableInts
 1084              		.section	.text.CyEnableInts,"ax",%progbits
 1085              		.align	2
 1086              		.global	CyEnableInts
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	CyEnableInts, %function
 1090              	CyEnableInts:
 1091              	.LFB19:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 1092              		.loc 1 2403 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 8
 1095              		@ frame_needed = 1, uses_anonymous_args = 0
 1096 0000 80B5     		push	{r7, lr}
 1097              		.cfi_def_cfa_offset 8
 1098              		.cfi_offset 7, -8
 1099              		.cfi_offset 14, -4
 1100 0002 82B0     		sub	sp, sp, #8
 1101              		.cfi_def_cfa_offset 16
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 1104 0006 7860     		str	r0, [r7, #4]
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1105              		.loc 1 2404 0
 1106 0008 034B     		ldr	r3, .L69
 1107 000a 7A68     		ldr	r2, [r7, #4]
 1108 000c 1A60     		str	r2, [r3]
2405:Generated_Source\PSoC4/CyLib.c **** }
 1109              		.loc 1 2405 0
 1110 000e C046     		nop
 1111 0010 BD46     		mov	sp, r7
 1112 0012 02B0     		add	sp, sp, #8
 1113              		@ sp needed
 1114 0014 80BD     		pop	{r7, pc}
 1115              	.L70:
 1116 0016 C046     		.align	2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 63


 1117              	.L69:
 1118 0018 00E100E0 		.word	-536813312
 1119              		.cfi_endproc
 1120              	.LFE19:
 1121              		.size	CyEnableInts, .-CyEnableInts
 1122              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1123              		.align	2
 1124              		.global	CyIntSetSysVector
 1125              		.code	16
 1126              		.thumb_func
 1127              		.type	CyIntSetSysVector, %function
 1128              	CyIntSetSysVector:
 1129              	.LFB20:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
 1130              		.loc 1 2428 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 16
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 84B0     		sub	sp, sp, #16
 1139              		.cfi_def_cfa_offset 24
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 0200     		movs	r2, r0
 1143 0008 3960     		str	r1, [r7]
 1144 000a FB1D     		adds	r3, r7, #7
 1145 000c 1A70     		strb	r2, [r3]
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1146              		.loc 1 2430 0
 1147 000e 8023     		movs	r3, #128
 1148 0010 9B05     		lsls	r3, r3, #22
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 64


 1149 0012 FB60     		str	r3, [r7, #12]
2431:Generated_Source\PSoC4/CyLib.c **** 
2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1150              		.loc 1 2432 0
 1151 0014 FB1D     		adds	r3, r7, #7
 1152 0016 1B78     		ldrb	r3, [r3]
 1153 0018 0F2B     		cmp	r3, #15
 1154 001a 02D9     		bls	.L72
 1155              		.loc 1 2432 0 is_stmt 0 discriminator 1
 1156 001c 0020     		movs	r0, #0
 1157 001e FFF7FEFF 		bl	CyHalt
 1158              	.L72:
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1159              		.loc 1 2435 0 is_stmt 1
 1160 0022 FB1D     		adds	r3, r7, #7
 1161 0024 1B78     		ldrb	r3, [r3]
 1162 0026 9B00     		lsls	r3, r3, #2
 1163 0028 FA68     		ldr	r2, [r7, #12]
 1164 002a D318     		adds	r3, r2, r3
 1165 002c 1B68     		ldr	r3, [r3]
 1166 002e BB60     		str	r3, [r7, #8]
2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1167              		.loc 1 2438 0
 1168 0030 FB1D     		adds	r3, r7, #7
 1169 0032 1B78     		ldrb	r3, [r3]
 1170 0034 9B00     		lsls	r3, r3, #2
 1171 0036 FA68     		ldr	r2, [r7, #12]
 1172 0038 D318     		adds	r3, r2, r3
 1173 003a 3A68     		ldr	r2, [r7]
 1174 003c 1A60     		str	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1175              		.loc 1 2440 0
 1176 003e BB68     		ldr	r3, [r7, #8]
2441:Generated_Source\PSoC4/CyLib.c **** }
 1177              		.loc 1 2441 0
 1178 0040 1800     		movs	r0, r3
 1179 0042 BD46     		mov	sp, r7
 1180 0044 04B0     		add	sp, sp, #16
 1181              		@ sp needed
 1182 0046 80BD     		pop	{r7, pc}
 1183              		.cfi_endproc
 1184              	.LFE20:
 1185              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1186              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1187              		.align	2
 1188              		.global	CyIntGetSysVector
 1189              		.code	16
 1190              		.thumb_func
 1191              		.type	CyIntGetSysVector, %function
 1192              	CyIntGetSysVector:
 1193              	.LFB21:
2442:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 65


2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
 1194              		.loc 1 2462 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 16
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 84B0     		sub	sp, sp, #16
 1203              		.cfi_def_cfa_offset 24
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 0200     		movs	r2, r0
 1207 0008 FB1D     		adds	r3, r7, #7
 1208 000a 1A70     		strb	r2, [r3]
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1209              		.loc 1 2463 0
 1210 000c 8023     		movs	r3, #128
 1211 000e 9B05     		lsls	r3, r3, #22
 1212 0010 FB60     		str	r3, [r7, #12]
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1213              		.loc 1 2465 0
 1214 0012 FB1D     		adds	r3, r7, #7
 1215 0014 1B78     		ldrb	r3, [r3]
 1216 0016 0F2B     		cmp	r3, #15
 1217 0018 02D9     		bls	.L75
 1218              		.loc 1 2465 0 is_stmt 0 discriminator 1
 1219 001a 0020     		movs	r0, #0
 1220 001c FFF7FEFF 		bl	CyHalt
 1221              	.L75:
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1222              		.loc 1 2467 0 is_stmt 1
 1223 0020 FB1D     		adds	r3, r7, #7
 1224 0022 1B78     		ldrb	r3, [r3]
 1225 0024 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 66


 1226 0026 FA68     		ldr	r2, [r7, #12]
 1227 0028 D318     		adds	r3, r2, r3
 1228 002a 1B68     		ldr	r3, [r3]
2468:Generated_Source\PSoC4/CyLib.c **** }
 1229              		.loc 1 2468 0
 1230 002c 1800     		movs	r0, r3
 1231 002e BD46     		mov	sp, r7
 1232 0030 04B0     		add	sp, sp, #16
 1233              		@ sp needed
 1234 0032 80BD     		pop	{r7, pc}
 1235              		.cfi_endproc
 1236              	.LFE21:
 1237              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1238              		.section	.text.CyIntSetVector,"ax",%progbits
 1239              		.align	2
 1240              		.global	CyIntSetVector
 1241              		.code	16
 1242              		.thumb_func
 1243              		.type	CyIntSetVector, %function
 1244              	CyIntSetVector:
 1245              	.LFB22:
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
 1246              		.loc 1 2484 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 16
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250 0000 80B5     		push	{r7, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 84B0     		sub	sp, sp, #16
 1255              		.cfi_def_cfa_offset 24
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 0200     		movs	r2, r0
 1259 0008 3960     		str	r1, [r7]
 1260 000a FB1D     		adds	r3, r7, #7
 1261 000c 1A70     		strb	r2, [r3]
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1262              		.loc 1 2486 0
 1263 000e 8023     		movs	r3, #128
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 67


 1264 0010 9B05     		lsls	r3, r3, #22
 1265 0012 FB60     		str	r3, [r7, #12]
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1266              		.loc 1 2488 0
 1267 0014 FB1D     		adds	r3, r7, #7
 1268 0016 1B78     		ldrb	r3, [r3]
 1269 0018 1F2B     		cmp	r3, #31
 1270 001a 02D9     		bls	.L78
 1271              		.loc 1 2488 0 is_stmt 0 discriminator 1
 1272 001c 0020     		movs	r0, #0
 1273 001e FFF7FEFF 		bl	CyHalt
 1274              	.L78:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1275              		.loc 1 2491 0 is_stmt 1
 1276 0022 FB1D     		adds	r3, r7, #7
 1277 0024 1B78     		ldrb	r3, [r3]
 1278 0026 1033     		adds	r3, r3, #16
 1279 0028 9B00     		lsls	r3, r3, #2
 1280 002a FA68     		ldr	r2, [r7, #12]
 1281 002c D318     		adds	r3, r2, r3
 1282 002e 1B68     		ldr	r3, [r3]
 1283 0030 BB60     		str	r3, [r7, #8]
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1284              		.loc 1 2494 0
 1285 0032 FB1D     		adds	r3, r7, #7
 1286 0034 1B78     		ldrb	r3, [r3]
 1287 0036 1033     		adds	r3, r3, #16
 1288 0038 9B00     		lsls	r3, r3, #2
 1289 003a FA68     		ldr	r2, [r7, #12]
 1290 003c D318     		adds	r3, r2, r3
 1291 003e 3A68     		ldr	r2, [r7]
 1292 0040 1A60     		str	r2, [r3]
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1293              		.loc 1 2496 0
 1294 0042 BB68     		ldr	r3, [r7, #8]
2497:Generated_Source\PSoC4/CyLib.c **** }
 1295              		.loc 1 2497 0
 1296 0044 1800     		movs	r0, r3
 1297 0046 BD46     		mov	sp, r7
 1298 0048 04B0     		add	sp, sp, #16
 1299              		@ sp needed
 1300 004a 80BD     		pop	{r7, pc}
 1301              		.cfi_endproc
 1302              	.LFE22:
 1303              		.size	CyIntSetVector, .-CyIntSetVector
 1304              		.section	.text.CyIntGetVector,"ax",%progbits
 1305              		.align	2
 1306              		.global	CyIntGetVector
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	CyIntGetVector, %function
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 68


 1310              	CyIntGetVector:
 1311              	.LFB23:
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
 1312              		.loc 1 2512 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 16
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              		.cfi_def_cfa_offset 8
 1318              		.cfi_offset 7, -8
 1319              		.cfi_offset 14, -4
 1320 0002 84B0     		sub	sp, sp, #16
 1321              		.cfi_def_cfa_offset 24
 1322 0004 00AF     		add	r7, sp, #0
 1323              		.cfi_def_cfa_register 7
 1324 0006 0200     		movs	r2, r0
 1325 0008 FB1D     		adds	r3, r7, #7
 1326 000a 1A70     		strb	r2, [r3]
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1327              		.loc 1 2513 0
 1328 000c 8023     		movs	r3, #128
 1329 000e 9B05     		lsls	r3, r3, #22
 1330 0010 FB60     		str	r3, [r7, #12]
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1331              		.loc 1 2515 0
 1332 0012 FB1D     		adds	r3, r7, #7
 1333 0014 1B78     		ldrb	r3, [r3]
 1334 0016 1F2B     		cmp	r3, #31
 1335 0018 02D9     		bls	.L81
 1336              		.loc 1 2515 0 is_stmt 0 discriminator 1
 1337 001a 0020     		movs	r0, #0
 1338 001c FFF7FEFF 		bl	CyHalt
 1339              	.L81:
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1340              		.loc 1 2517 0 is_stmt 1
 1341 0020 FB1D     		adds	r3, r7, #7
 1342 0022 1B78     		ldrb	r3, [r3]
 1343 0024 1033     		adds	r3, r3, #16
 1344 0026 9B00     		lsls	r3, r3, #2
 1345 0028 FA68     		ldr	r2, [r7, #12]
 1346 002a D318     		adds	r3, r2, r3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 69


 1347 002c 1B68     		ldr	r3, [r3]
2518:Generated_Source\PSoC4/CyLib.c **** }
 1348              		.loc 1 2518 0
 1349 002e 1800     		movs	r0, r3
 1350 0030 BD46     		mov	sp, r7
 1351 0032 04B0     		add	sp, sp, #16
 1352              		@ sp needed
 1353 0034 80BD     		pop	{r7, pc}
 1354              		.cfi_endproc
 1355              	.LFE23:
 1356              		.size	CyIntGetVector, .-CyIntGetVector
 1357 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1358              		.align	2
 1359              		.global	CyIntSetPriority
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	CyIntSetPriority, %function
 1363              	CyIntSetPriority:
 1364              	.LFB24:
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
 1365              		.loc 1 2531 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 24
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369 0000 90B5     		push	{r4, r7, lr}
 1370              		.cfi_def_cfa_offset 12
 1371              		.cfi_offset 4, -12
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 87B0     		sub	sp, sp, #28
 1375              		.cfi_def_cfa_offset 40
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 0200     		movs	r2, r0
 1379 0008 FB1D     		adds	r3, r7, #7
 1380 000a 1A70     		strb	r2, [r3]
 1381 000c BB1D     		adds	r3, r7, #6
 1382 000e 0A1C     		adds	r2, r1, #0
 1383 0010 1A70     		strb	r2, [r3]
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1384              		.loc 1 2536 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 70


 1385 0012 BB1D     		adds	r3, r7, #6
 1386 0014 1B78     		ldrb	r3, [r3]
 1387 0016 032B     		cmp	r3, #3
 1388 0018 02D9     		bls	.L84
 1389              		.loc 1 2536 0 is_stmt 0 discriminator 1
 1390 001a 0020     		movs	r0, #0
 1391 001c FFF7FEFF 		bl	CyHalt
 1392              	.L84:
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1393              		.loc 1 2537 0 is_stmt 1
 1394 0020 FB1D     		adds	r3, r7, #7
 1395 0022 1B78     		ldrb	r3, [r3]
 1396 0024 1F2B     		cmp	r3, #31
 1397 0026 02D9     		bls	.L85
 1398              		.loc 1 2537 0 is_stmt 0 discriminator 1
 1399 0028 0020     		movs	r0, #0
 1400 002a FFF7FEFF 		bl	CyHalt
 1401              	.L85:
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1402              		.loc 1 2539 0 is_stmt 1
 1403 002e FB1D     		adds	r3, r7, #7
 1404 0030 1B78     		ldrb	r3, [r3]
 1405 0032 0322     		movs	r2, #3
 1406 0034 1340     		ands	r3, r2
 1407 0036 DB00     		lsls	r3, r3, #3
 1408 0038 0633     		adds	r3, r3, #6
 1409 003a 7B61     		str	r3, [r7, #20]
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1410              		.loc 1 2541 0
 1411 003c 1323     		movs	r3, #19
 1412 003e FC18     		adds	r4, r7, r3
 1413 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1414 0044 0300     		movs	r3, r0
 1415 0046 2370     		strb	r3, [r4]
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1416              		.loc 1 2543 0
 1417 0048 FB1D     		adds	r3, r7, #7
 1418 004a 1B78     		ldrb	r3, [r3]
 1419 004c 9B08     		lsrs	r3, r3, #2
 1420 004e DBB2     		uxtb	r3, r3
 1421 0050 9B00     		lsls	r3, r3, #2
 1422 0052 144A     		ldr	r2, .L86
 1423 0054 9446     		mov	ip, r2
 1424 0056 6344     		add	r3, r3, ip
 1425 0058 1B68     		ldr	r3, [r3]
 1426 005a FB60     		str	r3, [r7, #12]
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1427              		.loc 1 2544 0
 1428 005c 0322     		movs	r2, #3
 1429 005e 7B69     		ldr	r3, [r7, #20]
 1430 0060 9A40     		lsls	r2, r2, r3
 1431 0062 1300     		movs	r3, r2
 1432 0064 DA43     		mvns	r2, r3
 1433 0066 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 71


 1434 0068 1340     		ands	r3, r2
 1435 006a FB60     		str	r3, [r7, #12]
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1436              		.loc 1 2545 0
 1437 006c BB1D     		adds	r3, r7, #6
 1438 006e 1A78     		ldrb	r2, [r3]
 1439 0070 7B69     		ldr	r3, [r7, #20]
 1440 0072 9A40     		lsls	r2, r2, r3
 1441 0074 1300     		movs	r3, r2
 1442 0076 FA68     		ldr	r2, [r7, #12]
 1443 0078 1343     		orrs	r3, r2
 1444 007a FB60     		str	r3, [r7, #12]
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1445              		.loc 1 2546 0
 1446 007c FB1D     		adds	r3, r7, #7
 1447 007e 1B78     		ldrb	r3, [r3]
 1448 0080 9B08     		lsrs	r3, r3, #2
 1449 0082 DBB2     		uxtb	r3, r3
 1450 0084 9B00     		lsls	r3, r3, #2
 1451 0086 074A     		ldr	r2, .L86
 1452 0088 9446     		mov	ip, r2
 1453 008a 6344     		add	r3, r3, ip
 1454 008c FA68     		ldr	r2, [r7, #12]
 1455 008e 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1456              		.loc 1 2548 0
 1457 0090 1323     		movs	r3, #19
 1458 0092 FB18     		adds	r3, r7, r3
 1459 0094 1B78     		ldrb	r3, [r3]
 1460 0096 1800     		movs	r0, r3
 1461 0098 FFF7FEFF 		bl	CyExitCriticalSection
2549:Generated_Source\PSoC4/CyLib.c **** }
 1462              		.loc 1 2549 0
 1463 009c C046     		nop
 1464 009e BD46     		mov	sp, r7
 1465 00a0 07B0     		add	sp, sp, #28
 1466              		@ sp needed
 1467 00a2 90BD     		pop	{r4, r7, pc}
 1468              	.L87:
 1469              		.align	2
 1470              	.L86:
 1471 00a4 00E400E0 		.word	-536812544
 1472              		.cfi_endproc
 1473              	.LFE24:
 1474              		.size	CyIntSetPriority, .-CyIntSetPriority
 1475              		.section	.text.CyIntGetPriority,"ax",%progbits
 1476              		.align	2
 1477              		.global	CyIntGetPriority
 1478              		.code	16
 1479              		.thumb_func
 1480              		.type	CyIntGetPriority, %function
 1481              	CyIntGetPriority:
 1482              	.LFB25:
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 72


2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
 1483              		.loc 1 2565 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 16
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 84B0     		sub	sp, sp, #16
 1492              		.cfi_def_cfa_offset 24
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 0200     		movs	r2, r0
 1496 0008 FB1D     		adds	r3, r7, #7
 1497 000a 1A70     		strb	r2, [r3]
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1498              		.loc 1 2568 0
 1499 000c FB1D     		adds	r3, r7, #7
 1500 000e 1B78     		ldrb	r3, [r3]
 1501 0010 1F2B     		cmp	r3, #31
 1502 0012 02D9     		bls	.L89
 1503              		.loc 1 2568 0 is_stmt 0 discriminator 1
 1504 0014 0020     		movs	r0, #0
 1505 0016 FFF7FEFF 		bl	CyHalt
 1506              	.L89:
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1507              		.loc 1 2570 0 is_stmt 1
 1508 001a FB1D     		adds	r3, r7, #7
 1509 001c 1B78     		ldrb	r3, [r3]
 1510 001e 9B08     		lsrs	r3, r3, #2
 1511 0020 DBB2     		uxtb	r3, r3
 1512 0022 9B00     		lsls	r3, r3, #2
 1513 0024 0B4A     		ldr	r2, .L91
 1514 0026 9446     		mov	ip, r2
 1515 0028 6344     		add	r3, r3, ip
 1516 002a 1A68     		ldr	r2, [r3]
 1517 002c FB1D     		adds	r3, r7, #7
 1518 002e 1B78     		ldrb	r3, [r3]
 1519 0030 0321     		movs	r1, #3
 1520 0032 0B40     		ands	r3, r1
 1521 0034 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 73


 1522 0036 0633     		adds	r3, r3, #6
 1523 0038 DA40     		lsrs	r2, r2, r3
 1524 003a 0F23     		movs	r3, #15
 1525 003c FB18     		adds	r3, r7, r3
 1526 003e 1A70     		strb	r2, [r3]
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1527              		.loc 1 2572 0
 1528 0040 0F23     		movs	r3, #15
 1529 0042 FB18     		adds	r3, r7, r3
 1530 0044 1B78     		ldrb	r3, [r3]
 1531 0046 0322     		movs	r2, #3
 1532 0048 1340     		ands	r3, r2
 1533 004a DBB2     		uxtb	r3, r3
2573:Generated_Source\PSoC4/CyLib.c **** }
 1534              		.loc 1 2573 0
 1535 004c 1800     		movs	r0, r3
 1536 004e BD46     		mov	sp, r7
 1537 0050 04B0     		add	sp, sp, #16
 1538              		@ sp needed
 1539 0052 80BD     		pop	{r7, pc}
 1540              	.L92:
 1541              		.align	2
 1542              	.L91:
 1543 0054 00E400E0 		.word	-536812544
 1544              		.cfi_endproc
 1545              	.LFE25:
 1546              		.size	CyIntGetPriority, .-CyIntGetPriority
 1547              		.section	.text.CyIntEnable,"ax",%progbits
 1548              		.align	2
 1549              		.global	CyIntEnable
 1550              		.code	16
 1551              		.thumb_func
 1552              		.type	CyIntEnable, %function
 1553              	CyIntEnable:
 1554              	.LFB26:
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 1555              		.loc 1 2586 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 74


 1563 0002 82B0     		sub	sp, sp, #8
 1564              		.cfi_def_cfa_offset 16
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
 1567 0006 0200     		movs	r2, r0
 1568 0008 FB1D     		adds	r3, r7, #7
 1569 000a 1A70     		strb	r2, [r3]
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1570              		.loc 1 2587 0
 1571 000c 064B     		ldr	r3, .L94
 1572 000e FA1D     		adds	r2, r7, #7
 1573 0010 1278     		ldrb	r2, [r2]
 1574 0012 1F21     		movs	r1, #31
 1575 0014 0A40     		ands	r2, r1
 1576 0016 0121     		movs	r1, #1
 1577 0018 9140     		lsls	r1, r1, r2
 1578 001a 0A00     		movs	r2, r1
 1579 001c 1A60     		str	r2, [r3]
2588:Generated_Source\PSoC4/CyLib.c **** }
 1580              		.loc 1 2588 0
 1581 001e C046     		nop
 1582 0020 BD46     		mov	sp, r7
 1583 0022 02B0     		add	sp, sp, #8
 1584              		@ sp needed
 1585 0024 80BD     		pop	{r7, pc}
 1586              	.L95:
 1587 0026 C046     		.align	2
 1588              	.L94:
 1589 0028 00E100E0 		.word	-536813312
 1590              		.cfi_endproc
 1591              	.LFE26:
 1592              		.size	CyIntEnable, .-CyIntEnable
 1593              		.section	.text.CyIntGetState,"ax",%progbits
 1594              		.align	2
 1595              		.global	CyIntGetState
 1596              		.code	16
 1597              		.thumb_func
 1598              		.type	CyIntGetState, %function
 1599              	CyIntGetState:
 1600              	.LFB27:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 1601              		.loc 1 2604 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 75


 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 8
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605 0000 80B5     		push	{r7, lr}
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 82B0     		sub	sp, sp, #8
 1610              		.cfi_def_cfa_offset 16
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 0200     		movs	r2, r0
 1614 0008 FB1D     		adds	r3, r7, #7
 1615 000a 1A70     		strb	r2, [r3]
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1616              		.loc 1 2606 0
 1617 000c 074B     		ldr	r3, .L98
 1618 000e 1A68     		ldr	r2, [r3]
 1619 0010 FB1D     		adds	r3, r7, #7
 1620 0012 1B78     		ldrb	r3, [r3]
 1621 0014 1F21     		movs	r1, #31
 1622 0016 0B40     		ands	r3, r1
 1623 0018 DA40     		lsrs	r2, r2, r3
 1624 001a 1300     		movs	r3, r2
 1625 001c DBB2     		uxtb	r3, r3
 1626 001e 0122     		movs	r2, #1
 1627 0020 1340     		ands	r3, r2
 1628 0022 DBB2     		uxtb	r3, r3
2607:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2607 0
 1630 0024 1800     		movs	r0, r3
 1631 0026 BD46     		mov	sp, r7
 1632 0028 02B0     		add	sp, sp, #8
 1633              		@ sp needed
 1634 002a 80BD     		pop	{r7, pc}
 1635              	.L99:
 1636              		.align	2
 1637              	.L98:
 1638 002c 00E100E0 		.word	-536813312
 1639              		.cfi_endproc
 1640              	.LFE27:
 1641              		.size	CyIntGetState, .-CyIntGetState
 1642              		.section	.text.CyIntDisable,"ax",%progbits
 1643              		.align	2
 1644              		.global	CyIntDisable
 1645              		.code	16
 1646              		.thumb_func
 1647              		.type	CyIntDisable, %function
 1648              	CyIntDisable:
 1649              	.LFB28:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 76


2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 1650              		.loc 1 2620 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 8
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 82B0     		sub	sp, sp, #8
 1659              		.cfi_def_cfa_offset 16
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 0200     		movs	r2, r0
 1663 0008 FB1D     		adds	r3, r7, #7
 1664 000a 1A70     		strb	r2, [r3]
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1665              		.loc 1 2621 0
 1666 000c 064B     		ldr	r3, .L101
 1667 000e FA1D     		adds	r2, r7, #7
 1668 0010 1278     		ldrb	r2, [r2]
 1669 0012 1F21     		movs	r1, #31
 1670 0014 0A40     		ands	r2, r1
 1671 0016 0121     		movs	r1, #1
 1672 0018 9140     		lsls	r1, r1, r2
 1673 001a 0A00     		movs	r2, r1
 1674 001c 1A60     		str	r2, [r3]
2622:Generated_Source\PSoC4/CyLib.c **** }
 1675              		.loc 1 2622 0
 1676 001e C046     		nop
 1677 0020 BD46     		mov	sp, r7
 1678 0022 02B0     		add	sp, sp, #8
 1679              		@ sp needed
 1680 0024 80BD     		pop	{r7, pc}
 1681              	.L102:
 1682 0026 C046     		.align	2
 1683              	.L101:
 1684 0028 80E100E0 		.word	-536813184
 1685              		.cfi_endproc
 1686              	.LFE28:
 1687              		.size	CyIntDisable, .-CyIntDisable
 1688              		.section	.text.CyIntSetPending,"ax",%progbits
 1689              		.align	2
 1690              		.global	CyIntSetPending
 1691              		.code	16
 1692              		.thumb_func
 1693              		.type	CyIntSetPending, %function
 1694              	CyIntSetPending:
 1695              	.LFB29:
2623:Generated_Source\PSoC4/CyLib.c **** 
2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 77


2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 1696              		.loc 1 2634 0
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 8
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
 1700 0000 80B5     		push	{r7, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 7, -8
 1703              		.cfi_offset 14, -4
 1704 0002 82B0     		sub	sp, sp, #8
 1705              		.cfi_def_cfa_offset 16
 1706 0004 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
 1708 0006 0200     		movs	r2, r0
 1709 0008 FB1D     		adds	r3, r7, #7
 1710 000a 1A70     		strb	r2, [r3]
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1711              		.loc 1 2635 0
 1712 000c 064B     		ldr	r3, .L104
 1713 000e FA1D     		adds	r2, r7, #7
 1714 0010 1278     		ldrb	r2, [r2]
 1715 0012 1F21     		movs	r1, #31
 1716 0014 0A40     		ands	r2, r1
 1717 0016 0121     		movs	r1, #1
 1718 0018 9140     		lsls	r1, r1, r2
 1719 001a 0A00     		movs	r2, r1
 1720 001c 1A60     		str	r2, [r3]
2636:Generated_Source\PSoC4/CyLib.c **** }
 1721              		.loc 1 2636 0
 1722 001e C046     		nop
 1723 0020 BD46     		mov	sp, r7
 1724 0022 02B0     		add	sp, sp, #8
 1725              		@ sp needed
 1726 0024 80BD     		pop	{r7, pc}
 1727              	.L105:
 1728 0026 C046     		.align	2
 1729              	.L104:
 1730 0028 00E200E0 		.word	-536813056
 1731              		.cfi_endproc
 1732              	.LFE29:
 1733              		.size	CyIntSetPending, .-CyIntSetPending
 1734              		.section	.text.CyIntClearPending,"ax",%progbits
 1735              		.align	2
 1736              		.global	CyIntClearPending
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	CyIntClearPending, %function
 1740              	CyIntClearPending:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 78


 1741              	.LFB30:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 1742              		.loc 1 2649 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 8
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0000 80B5     		push	{r7, lr}
 1747              		.cfi_def_cfa_offset 8
 1748              		.cfi_offset 7, -8
 1749              		.cfi_offset 14, -4
 1750 0002 82B0     		sub	sp, sp, #8
 1751              		.cfi_def_cfa_offset 16
 1752 0004 00AF     		add	r7, sp, #0
 1753              		.cfi_def_cfa_register 7
 1754 0006 0200     		movs	r2, r0
 1755 0008 FB1D     		adds	r3, r7, #7
 1756 000a 1A70     		strb	r2, [r3]
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1757              		.loc 1 2650 0
 1758 000c 064B     		ldr	r3, .L107
 1759 000e FA1D     		adds	r2, r7, #7
 1760 0010 1278     		ldrb	r2, [r2]
 1761 0012 1F21     		movs	r1, #31
 1762 0014 0A40     		ands	r2, r1
 1763 0016 0121     		movs	r1, #1
 1764 0018 9140     		lsls	r1, r1, r2
 1765 001a 0A00     		movs	r2, r1
 1766 001c 1A60     		str	r2, [r3]
2651:Generated_Source\PSoC4/CyLib.c **** }
 1767              		.loc 1 2651 0
 1768 001e C046     		nop
 1769 0020 BD46     		mov	sp, r7
 1770 0022 02B0     		add	sp, sp, #8
 1771              		@ sp needed
 1772 0024 80BD     		pop	{r7, pc}
 1773              	.L108:
 1774 0026 C046     		.align	2
 1775              	.L107:
 1776 0028 80E200E0 		.word	-536812928
 1777              		.cfi_endproc
 1778              	.LFE30:
 1779              		.size	CyIntClearPending, .-CyIntClearPending
 1780              		.section	.text.CyHalt,"ax",%progbits
 1781              		.align	2
 1782              		.global	CyHalt
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 79


 1783              		.code	16
 1784              		.thumb_func
 1785              		.type	CyHalt, %function
 1786              	CyHalt:
 1787              	.LFB31:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 1788              		.loc 1 2664 0
 1789              		.cfi_startproc
 1790              		@ args = 0, pretend = 0, frame = 8
 1791              		@ frame_needed = 1, uses_anonymous_args = 0
 1792 0000 80B5     		push	{r7, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 0002 82B0     		sub	sp, sp, #8
 1797              		.cfi_def_cfa_offset 16
 1798 0004 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
 1800 0006 0200     		movs	r2, r0
 1801 0008 FB1D     		adds	r3, r7, #7
 1802 000a 1A70     		strb	r2, [r3]
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1803              		.loc 1 2673 0
 1804              		.syntax divided
 1805              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 1806 000c 01BE     		    bkpt    1
 1807              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 1808              		.loc 1 2677 0
 1809              		.thumb
 1810              		.syntax unified
 1811 000e C046     		nop
 1812 0010 BD46     		mov	sp, r7
 1813 0012 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 80


 1814              		@ sp needed
 1815 0014 80BD     		pop	{r7, pc}
 1816              		.cfi_endproc
 1817              	.LFE31:
 1818              		.size	CyHalt, .-CyHalt
 1819 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1820              		.align	2
 1821              		.global	CySoftwareReset
 1822              		.code	16
 1823              		.thumb_func
 1824              		.type	CySoftwareReset, %function
 1825              	CySoftwareReset:
 1826              	.LFB32:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 1827              		.loc 1 2688 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831 0000 80B5     		push	{r7, lr}
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 7, -8
 1834              		.cfi_offset 14, -4
 1835 0002 00AF     		add	r7, sp, #0
 1836              		.cfi_def_cfa_register 7
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1837              		.loc 1 2693 0
 1838 0004 054B     		ldr	r3, .L111
 1839 0006 054A     		ldr	r2, .L111
 1840 0008 1268     		ldr	r2, [r2]
 1841 000a 1204     		lsls	r2, r2, #16
 1842 000c 120C     		lsrs	r2, r2, #16
2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1843              		.loc 1 2694 0
 1844 000e 0449     		ldr	r1, .L111+4
 1845 0010 0A43     		orrs	r2, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1846              		.loc 1 2693 0
 1847 0012 1A60     		str	r2, [r3]
2695:Generated_Source\PSoC4/CyLib.c **** }
 1848              		.loc 1 2695 0
 1849 0014 C046     		nop
 1850 0016 BD46     		mov	sp, r7
 1851              		@ sp needed
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 81


 1852 0018 80BD     		pop	{r7, pc}
 1853              	.L112:
 1854 001a C046     		.align	2
 1855              	.L111:
 1856 001c 0CED00E0 		.word	-536810228
 1857 0020 0400FA05 		.word	100270084
 1858              		.cfi_endproc
 1859              	.LFE32:
 1860              		.size	CySoftwareReset, .-CySoftwareReset
 1861              		.section	.text.CyDelay,"ax",%progbits
 1862              		.align	2
 1863              		.global	CyDelay
 1864              		.code	16
 1865              		.thumb_func
 1866              		.type	CyDelay, %function
 1867              	CyDelay:
 1868              	.LFB33:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 1869              		.loc 1 2708 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 8
 1872              		@ frame_needed = 1, uses_anonymous_args = 0
 1873 0000 80B5     		push	{r7, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 7, -8
 1876              		.cfi_offset 14, -4
 1877 0002 82B0     		sub	sp, sp, #8
 1878              		.cfi_def_cfa_offset 16
 1879 0004 00AF     		add	r7, sp, #0
 1880              		.cfi_def_cfa_register 7
 1881 0006 7860     		str	r0, [r7, #4]
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1882              		.loc 1 2709 0
 1883 0008 09E0     		b	.L114
 1884              	.L115:
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1885              		.loc 1 2714 0
 1886 000a 0D4B     		ldr	r3, .L116
 1887 000c 1B68     		ldr	r3, [r3]
 1888 000e 1800     		movs	r0, r3
 1889 0010 FFF7FEFF 		bl	CyDelayCycles
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 82


2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1890              		.loc 1 2715 0
 1891 0014 7B68     		ldr	r3, [r7, #4]
 1892 0016 0B4A     		ldr	r2, .L116+4
 1893 0018 9446     		mov	ip, r2
 1894 001a 6344     		add	r3, r3, ip
 1895 001c 7B60     		str	r3, [r7, #4]
 1896              	.L114:
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1897              		.loc 1 2709 0
 1898 001e 7A68     		ldr	r2, [r7, #4]
 1899 0020 8023     		movs	r3, #128
 1900 0022 1B02     		lsls	r3, r3, #8
 1901 0024 9A42     		cmp	r2, r3
 1902 0026 F0D8     		bhi	.L115
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1903              		.loc 1 2718 0
 1904 0028 074B     		ldr	r3, .L116+8
 1905 002a 1B68     		ldr	r3, [r3]
 1906 002c 7A68     		ldr	r2, [r7, #4]
 1907 002e 5343     		muls	r3, r2
 1908 0030 1800     		movs	r0, r3
 1909 0032 FFF7FEFF 		bl	CyDelayCycles
2719:Generated_Source\PSoC4/CyLib.c **** }
 1910              		.loc 1 2719 0
 1911 0036 C046     		nop
 1912 0038 BD46     		mov	sp, r7
 1913 003a 02B0     		add	sp, sp, #8
 1914              		@ sp needed
 1915 003c 80BD     		pop	{r7, pc}
 1916              	.L117:
 1917 003e C046     		.align	2
 1918              	.L116:
 1919 0040 00000000 		.word	cydelay32kMs
 1920 0044 0080FFFF 		.word	-32768
 1921 0048 00000000 		.word	cydelayFreqKhz
 1922              		.cfi_endproc
 1923              	.LFE33:
 1924              		.size	CyDelay, .-CyDelay
 1925              		.section	.text.CyDelayUs,"ax",%progbits
 1926              		.align	2
 1927              		.global	CyDelayUs
 1928              		.code	16
 1929              		.thumb_func
 1930              		.type	CyDelayUs, %function
 1931              	CyDelayUs:
 1932              	.LFB34:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 83


2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 1933              		.loc 1 2731 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 8
 1936              		@ frame_needed = 1, uses_anonymous_args = 0
 1937 0000 80B5     		push	{r7, lr}
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 7, -8
 1940              		.cfi_offset 14, -4
 1941 0002 82B0     		sub	sp, sp, #8
 1942              		.cfi_def_cfa_offset 16
 1943 0004 00AF     		add	r7, sp, #0
 1944              		.cfi_def_cfa_register 7
 1945 0006 0200     		movs	r2, r0
 1946 0008 BB1D     		adds	r3, r7, #6
 1947 000a 1A80     		strh	r2, [r3]
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1948              		.loc 1 2732 0
 1949 000c BB1D     		adds	r3, r7, #6
 1950 000e 1B88     		ldrh	r3, [r3]
 1951 0010 044A     		ldr	r2, .L119
 1952 0012 1278     		ldrb	r2, [r2]
 1953 0014 5343     		muls	r3, r2
 1954 0016 1800     		movs	r0, r3
 1955 0018 FFF7FEFF 		bl	CyDelayCycles
2733:Generated_Source\PSoC4/CyLib.c **** }
 1956              		.loc 1 2733 0
 1957 001c C046     		nop
 1958 001e BD46     		mov	sp, r7
 1959 0020 02B0     		add	sp, sp, #8
 1960              		@ sp needed
 1961 0022 80BD     		pop	{r7, pc}
 1962              	.L120:
 1963              		.align	2
 1964              	.L119:
 1965 0024 00000000 		.word	cydelayFreqMhz
 1966              		.cfi_endproc
 1967              	.LFE34:
 1968              		.size	CyDelayUs, .-CyDelayUs
 1969              		.global	__aeabi_uidiv
 1970              		.section	.text.CyDelayFreq,"ax",%progbits
 1971              		.align	2
 1972              		.global	CyDelayFreq
 1973              		.code	16
 1974              		.thumb_func
 1975              		.type	CyDelayFreq, %function
 1976              	CyDelayFreq:
 1977              	.LFB35:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 84


2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1978              		.loc 1 2745 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 8
 1981              		@ frame_needed = 1, uses_anonymous_args = 0
 1982 0000 80B5     		push	{r7, lr}
 1983              		.cfi_def_cfa_offset 8
 1984              		.cfi_offset 7, -8
 1985              		.cfi_offset 14, -4
 1986 0002 82B0     		sub	sp, sp, #8
 1987              		.cfi_def_cfa_offset 16
 1988 0004 00AF     		add	r7, sp, #0
 1989              		.cfi_def_cfa_register 7
 1990 0006 7860     		str	r0, [r7, #4]
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1991              		.loc 1 2746 0
 1992 0008 7B68     		ldr	r3, [r7, #4]
 1993 000a 002B     		cmp	r3, #0
 1994 000c 03D0     		beq	.L122
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1995              		.loc 1 2748 0
 1996 000e 154B     		ldr	r3, .L124
 1997 0010 7A68     		ldr	r2, [r7, #4]
 1998 0012 1A60     		str	r2, [r3]
 1999 0014 02E0     		b	.L123
 2000              	.L122:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2001              		.loc 1 2752 0
 2002 0016 134B     		ldr	r3, .L124
 2003 0018 134A     		ldr	r2, .L124+4
 2004 001a 1A60     		str	r2, [r3]
 2005              	.L123:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2006              		.loc 1 2755 0
 2007 001c 114B     		ldr	r3, .L124
 2008 001e 1B68     		ldr	r3, [r3]
 2009 0020 124A     		ldr	r2, .L124+8
 2010 0022 9446     		mov	ip, r2
 2011 0024 6344     		add	r3, r3, ip
 2012 0026 1249     		ldr	r1, .L124+12
 2013 0028 1800     		movs	r0, r3
 2014 002a FFF7FEFF 		bl	__aeabi_uidiv
 2015 002e 0300     		movs	r3, r0
 2016 0030 DAB2     		uxtb	r2, r3
 2017 0032 104B     		ldr	r3, .L124+16
 2018 0034 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 85


2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2019              		.loc 1 2756 0
 2020 0036 0B4B     		ldr	r3, .L124
 2021 0038 1B68     		ldr	r3, [r3]
 2022 003a 0F4A     		ldr	r2, .L124+20
 2023 003c 9A18     		adds	r2, r3, r2
 2024 003e FA23     		movs	r3, #250
 2025 0040 9900     		lsls	r1, r3, #2
 2026 0042 1000     		movs	r0, r2
 2027 0044 FFF7FEFF 		bl	__aeabi_uidiv
 2028 0048 0300     		movs	r3, r0
 2029 004a 1A00     		movs	r2, r3
 2030 004c 0B4B     		ldr	r3, .L124+24
 2031 004e 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2032              		.loc 1 2757 0
 2033 0050 0A4B     		ldr	r3, .L124+24
 2034 0052 1B68     		ldr	r3, [r3]
 2035 0054 DA03     		lsls	r2, r3, #15
 2036 0056 0A4B     		ldr	r3, .L124+28
 2037 0058 1A60     		str	r2, [r3]
2758:Generated_Source\PSoC4/CyLib.c **** }
 2038              		.loc 1 2758 0
 2039 005a C046     		nop
 2040 005c BD46     		mov	sp, r7
 2041 005e 02B0     		add	sp, sp, #8
 2042              		@ sp needed
 2043 0060 80BD     		pop	{r7, pc}
 2044              	.L125:
 2045 0062 C046     		.align	2
 2046              	.L124:
 2047 0064 00000000 		.word	cydelayFreqHz
 2048 0068 006CDC02 		.word	48000000
 2049 006c 3F420F00 		.word	999999
 2050 0070 40420F00 		.word	1000000
 2051 0074 00000000 		.word	cydelayFreqMhz
 2052 0078 E7030000 		.word	999
 2053 007c 00000000 		.word	cydelayFreqKhz
 2054 0080 00000000 		.word	cydelay32kMs
 2055              		.cfi_endproc
 2056              	.LFE35:
 2057              		.size	CyDelayFreq, .-CyDelayFreq
 2058              		.section	.text.CySysTickStart,"ax",%progbits
 2059              		.align	2
 2060              		.global	CySysTickStart
 2061              		.code	16
 2062              		.thumb_func
 2063              		.type	CySysTickStart, %function
 2064              	CySysTickStart:
 2065              	.LFB36:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 86


2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
 2066              		.loc 1 2777 0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070 0000 80B5     		push	{r7, lr}
 2071              		.cfi_def_cfa_offset 8
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 2074 0002 00AF     		add	r7, sp, #0
 2075              		.cfi_def_cfa_register 7
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2076              		.loc 1 2778 0
 2077 0004 064B     		ldr	r3, .L128
 2078 0006 1B68     		ldr	r3, [r3]
 2079 0008 002B     		cmp	r3, #0
 2080 000a 04D1     		bne	.L127
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2081              		.loc 1 2780 0
 2082 000c FFF7FEFF 		bl	CySysTickInit
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2083              		.loc 1 2781 0
 2084 0010 034B     		ldr	r3, .L128
 2085 0012 0122     		movs	r2, #1
 2086 0014 1A60     		str	r2, [r3]
 2087              	.L127:
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2088              		.loc 1 2784 0
 2089 0016 FFF7FEFF 		bl	CySysTickEnable
2785:Generated_Source\PSoC4/CyLib.c **** }
 2090              		.loc 1 2785 0
 2091 001a C046     		nop
 2092 001c BD46     		mov	sp, r7
 2093              		@ sp needed
 2094 001e 80BD     		pop	{r7, pc}
 2095              	.L129:
 2096              		.align	2
 2097              	.L128:
 2098 0020 00000000 		.word	CySysTickInitVar
 2099              		.cfi_endproc
 2100              	.LFE36:
 2101              		.size	CySysTickStart, .-CySysTickStart
 2102              		.section	.text.CySysTickInit,"ax",%progbits
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 87


 2103              		.align	2
 2104              		.global	CySysTickInit
 2105              		.code	16
 2106              		.thumb_func
 2107              		.type	CySysTickInit, %function
 2108              	CySysTickInit:
 2109              	.LFB37:
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
 2110              		.loc 1 2806 0
 2111              		.cfi_startproc
 2112              		@ args = 0, pretend = 0, frame = 8
 2113              		@ frame_needed = 1, uses_anonymous_args = 0
 2114 0000 80B5     		push	{r7, lr}
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 7, -8
 2117              		.cfi_offset 14, -4
 2118 0002 82B0     		sub	sp, sp, #8
 2119              		.cfi_def_cfa_offset 16
 2120 0004 00AF     		add	r7, sp, #0
 2121              		.cfi_def_cfa_register 7
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2122              		.loc 1 2809 0
 2123 0006 0023     		movs	r3, #0
 2124 0008 7B60     		str	r3, [r7, #4]
 2125 000a 07E0     		b	.L131
 2126              	.L132:
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2127              		.loc 1 2811 0 discriminator 3
 2128 000c 114B     		ldr	r3, .L133
 2129 000e 7A68     		ldr	r2, [r7, #4]
 2130 0010 9200     		lsls	r2, r2, #2
 2131 0012 0021     		movs	r1, #0
 2132 0014 D150     		str	r1, [r2, r3]
2809:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 88


 2133              		.loc 1 2809 0 discriminator 3
 2134 0016 7B68     		ldr	r3, [r7, #4]
 2135 0018 0133     		adds	r3, r3, #1
 2136 001a 7B60     		str	r3, [r7, #4]
 2137              	.L131:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 2138              		.loc 1 2809 0 is_stmt 0 discriminator 1
 2139 001c 7B68     		ldr	r3, [r7, #4]
 2140 001e 042B     		cmp	r3, #4
 2141 0020 F4D9     		bls	.L132
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2142              		.loc 1 2814 0 is_stmt 1
 2143 0022 0D4B     		ldr	r3, .L133+4
 2144 0024 1900     		movs	r1, r3
 2145 0026 0F20     		movs	r0, #15
 2146 0028 FFF7FEFF 		bl	CyIntSetSysVector
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2147              		.loc 1 2817 0
 2148 002c 0120     		movs	r0, #1
 2149 002e FFF7FEFF 		bl	CySysTickSetClockSource
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2150              		.loc 1 2820 0
 2151 0032 0A4B     		ldr	r3, .L133+8
 2152 0034 1A68     		ldr	r2, [r3]
 2153 0036 FA23     		movs	r3, #250
 2154 0038 9900     		lsls	r1, r3, #2
 2155 003a 1000     		movs	r0, r2
 2156 003c FFF7FEFF 		bl	__aeabi_uidiv
 2157 0040 0300     		movs	r3, r0
 2158 0042 1800     		movs	r0, r3
 2159 0044 FFF7FEFF 		bl	CySysTickSetReload
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2160              		.loc 1 2821 0
 2161 0048 FFF7FEFF 		bl	CySysTickClear
2822:Generated_Source\PSoC4/CyLib.c **** }
 2162              		.loc 1 2822 0
 2163 004c C046     		nop
 2164 004e BD46     		mov	sp, r7
 2165 0050 02B0     		add	sp, sp, #8
 2166              		@ sp needed
 2167 0052 80BD     		pop	{r7, pc}
 2168              	.L134:
 2169              		.align	2
 2170              	.L133:
 2171 0054 00000000 		.word	CySysTickCallbacks
 2172 0058 00000000 		.word	CySysTickServiceCallbacks
 2173 005c 00000000 		.word	cydelayFreqHz
 2174              		.cfi_endproc
 2175              	.LFE37:
 2176              		.size	CySysTickInit, .-CySysTickInit
 2177              		.section	.text.CySysTickEnable,"ax",%progbits
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 89


 2178              		.align	2
 2179              		.global	CySysTickEnable
 2180              		.code	16
 2181              		.thumb_func
 2182              		.type	CySysTickEnable, %function
 2183              	CySysTickEnable:
 2184              	.LFB38:
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
 2185              		.loc 1 2836 0
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 0
 2188              		@ frame_needed = 1, uses_anonymous_args = 0
 2189 0000 80B5     		push	{r7, lr}
 2190              		.cfi_def_cfa_offset 8
 2191              		.cfi_offset 7, -8
 2192              		.cfi_offset 14, -4
 2193 0002 00AF     		add	r7, sp, #0
 2194              		.cfi_def_cfa_register 7
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2195              		.loc 1 2837 0
 2196 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2197              		.loc 1 2838 0
 2198 0008 044B     		ldr	r3, .L136
 2199 000a 044A     		ldr	r2, .L136
 2200 000c 1268     		ldr	r2, [r2]
 2201 000e 0121     		movs	r1, #1
 2202 0010 0A43     		orrs	r2, r1
 2203 0012 1A60     		str	r2, [r3]
2839:Generated_Source\PSoC4/CyLib.c **** }
 2204              		.loc 1 2839 0
 2205 0014 C046     		nop
 2206 0016 BD46     		mov	sp, r7
 2207              		@ sp needed
 2208 0018 80BD     		pop	{r7, pc}
 2209              	.L137:
 2210 001a C046     		.align	2
 2211              	.L136:
 2212 001c 10E000E0 		.word	-536813552
 2213              		.cfi_endproc
 2214              	.LFE38:
 2215              		.size	CySysTickEnable, .-CySysTickEnable
 2216              		.section	.text.CySysTickStop,"ax",%progbits
 2217              		.align	2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 90


 2218              		.global	CySysTickStop
 2219              		.code	16
 2220              		.thumb_func
 2221              		.type	CySysTickStop, %function
 2222              	CySysTickStop:
 2223              	.LFB39:
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 2224              		.loc 1 2853 0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 0
 2227              		@ frame_needed = 1, uses_anonymous_args = 0
 2228 0000 80B5     		push	{r7, lr}
 2229              		.cfi_def_cfa_offset 8
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 00AF     		add	r7, sp, #0
 2233              		.cfi_def_cfa_register 7
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2234              		.loc 1 2854 0
 2235 0004 044B     		ldr	r3, .L139
 2236 0006 044A     		ldr	r2, .L139
 2237 0008 1268     		ldr	r2, [r2]
 2238 000a 0121     		movs	r1, #1
 2239 000c 8A43     		bics	r2, r1
 2240 000e 1A60     		str	r2, [r3]
2855:Generated_Source\PSoC4/CyLib.c **** }
 2241              		.loc 1 2855 0
 2242 0010 C046     		nop
 2243 0012 BD46     		mov	sp, r7
 2244              		@ sp needed
 2245 0014 80BD     		pop	{r7, pc}
 2246              	.L140:
 2247 0016 C046     		.align	2
 2248              	.L139:
 2249 0018 10E000E0 		.word	-536813552
 2250              		.cfi_endproc
 2251              	.LFE39:
 2252              		.size	CySysTickStop, .-CySysTickStop
 2253              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2254              		.align	2
 2255              		.global	CySysTickEnableInterrupt
 2256              		.code	16
 2257              		.thumb_func
 2258              		.type	CySysTickEnableInterrupt, %function
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 91


 2259              	CySysTickEnableInterrupt:
 2260              	.LFB40:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 2261              		.loc 1 2869 0
 2262              		.cfi_startproc
 2263              		@ args = 0, pretend = 0, frame = 0
 2264              		@ frame_needed = 1, uses_anonymous_args = 0
 2265 0000 80B5     		push	{r7, lr}
 2266              		.cfi_def_cfa_offset 8
 2267              		.cfi_offset 7, -8
 2268              		.cfi_offset 14, -4
 2269 0002 00AF     		add	r7, sp, #0
 2270              		.cfi_def_cfa_register 7
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2271              		.loc 1 2870 0
 2272 0004 044B     		ldr	r3, .L142
 2273 0006 044A     		ldr	r2, .L142
 2274 0008 1268     		ldr	r2, [r2]
 2275 000a 0221     		movs	r1, #2
 2276 000c 0A43     		orrs	r2, r1
 2277 000e 1A60     		str	r2, [r3]
2871:Generated_Source\PSoC4/CyLib.c **** }
 2278              		.loc 1 2871 0
 2279 0010 C046     		nop
 2280 0012 BD46     		mov	sp, r7
 2281              		@ sp needed
 2282 0014 80BD     		pop	{r7, pc}
 2283              	.L143:
 2284 0016 C046     		.align	2
 2285              	.L142:
 2286 0018 10E000E0 		.word	-536813552
 2287              		.cfi_endproc
 2288              	.LFE40:
 2289              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2290              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2291              		.align	2
 2292              		.global	CySysTickDisableInterrupt
 2293              		.code	16
 2294              		.thumb_func
 2295              		.type	CySysTickDisableInterrupt, %function
 2296              	CySysTickDisableInterrupt:
 2297              	.LFB41:
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 92


2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
 2298              		.loc 1 2885 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302 0000 80B5     		push	{r7, lr}
 2303              		.cfi_def_cfa_offset 8
 2304              		.cfi_offset 7, -8
 2305              		.cfi_offset 14, -4
 2306 0002 00AF     		add	r7, sp, #0
 2307              		.cfi_def_cfa_register 7
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2308              		.loc 1 2886 0
 2309 0004 044B     		ldr	r3, .L145
 2310 0006 044A     		ldr	r2, .L145
 2311 0008 1268     		ldr	r2, [r2]
 2312 000a 0221     		movs	r1, #2
 2313 000c 8A43     		bics	r2, r1
 2314 000e 1A60     		str	r2, [r3]
2887:Generated_Source\PSoC4/CyLib.c **** }
 2315              		.loc 1 2887 0
 2316 0010 C046     		nop
 2317 0012 BD46     		mov	sp, r7
 2318              		@ sp needed
 2319 0014 80BD     		pop	{r7, pc}
 2320              	.L146:
 2321 0016 C046     		.align	2
 2322              	.L145:
 2323 0018 10E000E0 		.word	-536813552
 2324              		.cfi_endproc
 2325              	.LFE41:
 2326              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2327              		.section	.text.CySysTickSetReload,"ax",%progbits
 2328              		.align	2
 2329              		.global	CySysTickSetReload
 2330              		.code	16
 2331              		.thumb_func
 2332              		.type	CySysTickSetReload, %function
 2333              	CySysTickSetReload:
 2334              	.LFB42:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 93


2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
 2335              		.loc 1 2902 0
 2336              		.cfi_startproc
 2337              		@ args = 0, pretend = 0, frame = 8
 2338              		@ frame_needed = 1, uses_anonymous_args = 0
 2339 0000 80B5     		push	{r7, lr}
 2340              		.cfi_def_cfa_offset 8
 2341              		.cfi_offset 7, -8
 2342              		.cfi_offset 14, -4
 2343 0002 82B0     		sub	sp, sp, #8
 2344              		.cfi_def_cfa_offset 16
 2345 0004 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
 2347 0006 7860     		str	r0, [r7, #4]
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2348              		.loc 1 2903 0
 2349 0008 044B     		ldr	r3, .L148
 2350 000a 7A68     		ldr	r2, [r7, #4]
 2351 000c 1202     		lsls	r2, r2, #8
 2352 000e 120A     		lsrs	r2, r2, #8
 2353 0010 1A60     		str	r2, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** }
 2354              		.loc 1 2904 0
 2355 0012 C046     		nop
 2356 0014 BD46     		mov	sp, r7
 2357 0016 02B0     		add	sp, sp, #8
 2358              		@ sp needed
 2359 0018 80BD     		pop	{r7, pc}
 2360              	.L149:
 2361 001a C046     		.align	2
 2362              	.L148:
 2363 001c 14E000E0 		.word	-536813548
 2364              		.cfi_endproc
 2365              	.LFE42:
 2366              		.size	CySysTickSetReload, .-CySysTickSetReload
 2367              		.section	.text.CySysTickGetReload,"ax",%progbits
 2368              		.align	2
 2369              		.global	CySysTickGetReload
 2370              		.code	16
 2371              		.thumb_func
 2372              		.type	CySysTickGetReload, %function
 2373              	CySysTickGetReload:
 2374              	.LFB43:
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 94


2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
 2375              		.loc 1 2918 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 0
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 0000 80B5     		push	{r7, lr}
 2380              		.cfi_def_cfa_offset 8
 2381              		.cfi_offset 7, -8
 2382              		.cfi_offset 14, -4
 2383 0002 00AF     		add	r7, sp, #0
 2384              		.cfi_def_cfa_register 7
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2385              		.loc 1 2919 0
 2386 0004 034B     		ldr	r3, .L152
 2387 0006 1B68     		ldr	r3, [r3]
 2388 0008 1B02     		lsls	r3, r3, #8
 2389 000a 1B0A     		lsrs	r3, r3, #8
2920:Generated_Source\PSoC4/CyLib.c **** }
 2390              		.loc 1 2920 0
 2391 000c 1800     		movs	r0, r3
 2392 000e BD46     		mov	sp, r7
 2393              		@ sp needed
 2394 0010 80BD     		pop	{r7, pc}
 2395              	.L153:
 2396 0012 C046     		.align	2
 2397              	.L152:
 2398 0014 14E000E0 		.word	-536813548
 2399              		.cfi_endproc
 2400              	.LFE43:
 2401              		.size	CySysTickGetReload, .-CySysTickGetReload
 2402              		.section	.text.CySysTickGetValue,"ax",%progbits
 2403              		.align	2
 2404              		.global	CySysTickGetValue
 2405              		.code	16
 2406              		.thumb_func
 2407              		.type	CySysTickGetValue, %function
 2408              	CySysTickGetValue:
 2409              	.LFB44:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 95


2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
 2410              		.loc 1 2934 0
 2411              		.cfi_startproc
 2412              		@ args = 0, pretend = 0, frame = 0
 2413              		@ frame_needed = 1, uses_anonymous_args = 0
 2414 0000 80B5     		push	{r7, lr}
 2415              		.cfi_def_cfa_offset 8
 2416              		.cfi_offset 7, -8
 2417              		.cfi_offset 14, -4
 2418 0002 00AF     		add	r7, sp, #0
 2419              		.cfi_def_cfa_register 7
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2420              		.loc 1 2935 0
 2421 0004 034B     		ldr	r3, .L156
 2422 0006 1B68     		ldr	r3, [r3]
 2423 0008 1B02     		lsls	r3, r3, #8
 2424 000a 1B0A     		lsrs	r3, r3, #8
2936:Generated_Source\PSoC4/CyLib.c **** }
 2425              		.loc 1 2936 0
 2426 000c 1800     		movs	r0, r3
 2427 000e BD46     		mov	sp, r7
 2428              		@ sp needed
 2429 0010 80BD     		pop	{r7, pc}
 2430              	.L157:
 2431 0012 C046     		.align	2
 2432              	.L156:
 2433 0014 18E000E0 		.word	-536813544
 2434              		.cfi_endproc
 2435              	.LFE44:
 2436              		.size	CySysTickGetValue, .-CySysTickGetValue
 2437              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2438              		.align	2
 2439              		.global	CySysTickSetClockSource
 2440              		.code	16
 2441              		.thumb_func
 2442              		.type	CySysTickSetClockSource, %function
 2443              	CySysTickSetClockSource:
 2444              	.LFB45:
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 96


2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
 2445              		.loc 1 2966 0
 2446              		.cfi_startproc
 2447              		@ args = 0, pretend = 0, frame = 8
 2448              		@ frame_needed = 1, uses_anonymous_args = 0
 2449 0000 80B5     		push	{r7, lr}
 2450              		.cfi_def_cfa_offset 8
 2451              		.cfi_offset 7, -8
 2452              		.cfi_offset 14, -4
 2453 0002 82B0     		sub	sp, sp, #8
 2454              		.cfi_def_cfa_offset 16
 2455 0004 00AF     		add	r7, sp, #0
 2456              		.cfi_def_cfa_register 7
 2457 0006 7860     		str	r0, [r7, #4]
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2458              		.loc 1 2967 0
 2459 0008 7B68     		ldr	r3, [r7, #4]
 2460 000a 012B     		cmp	r3, #1
 2461 000c 06D1     		bne	.L159
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2462              		.loc 1 2969 0
 2463 000e 084B     		ldr	r3, .L162
 2464 0010 074A     		ldr	r2, .L162
 2465 0012 1268     		ldr	r2, [r2]
 2466 0014 0421     		movs	r1, #4
 2467 0016 0A43     		orrs	r2, r1
 2468 0018 1A60     		str	r2, [r3]
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
 2469              		.loc 1 2975 0
 2470 001a 05E0     		b	.L161
 2471              	.L159:
2973:Generated_Source\PSoC4/CyLib.c ****         }
 2472              		.loc 1 2973 0
 2473 001c 044B     		ldr	r3, .L162
 2474 001e 044A     		ldr	r2, .L162
 2475 0020 1268     		ldr	r2, [r2]
 2476 0022 0421     		movs	r1, #4
 2477 0024 8A43     		bics	r2, r1
 2478 0026 1A60     		str	r2, [r3]
 2479              	.L161:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 97


 2480              		.loc 1 2975 0
 2481 0028 C046     		nop
 2482 002a BD46     		mov	sp, r7
 2483 002c 02B0     		add	sp, sp, #8
 2484              		@ sp needed
 2485 002e 80BD     		pop	{r7, pc}
 2486              	.L163:
 2487              		.align	2
 2488              	.L162:
 2489 0030 10E000E0 		.word	-536813552
 2490              		.cfi_endproc
 2491              	.LFE45:
 2492              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2493              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2494              		.align	2
 2495              		.global	CySysTickGetClockSource
 2496              		.code	16
 2497              		.thumb_func
 2498              		.type	CySysTickGetClockSource, %function
 2499              	CySysTickGetClockSource:
 2500              	.LFB46:
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
 2501              		.loc 1 2991 0
 2502              		.cfi_startproc
 2503              		@ args = 0, pretend = 0, frame = 0
 2504              		@ frame_needed = 1, uses_anonymous_args = 0
 2505 0000 80B5     		push	{r7, lr}
 2506              		.cfi_def_cfa_offset 8
 2507              		.cfi_offset 7, -8
 2508              		.cfi_offset 14, -4
 2509 0002 00AF     		add	r7, sp, #0
 2510              		.cfi_def_cfa_register 7
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2511              		.loc 1 2992 0
 2512 0004 034B     		ldr	r3, .L166
 2513 0006 1B68     		ldr	r3, [r3]
 2514 0008 9B08     		lsrs	r3, r3, #2
 2515 000a 0122     		movs	r2, #1
 2516 000c 1340     		ands	r3, r2
2993:Generated_Source\PSoC4/CyLib.c ****     }
 2517              		.loc 1 2993 0
 2518 000e 1800     		movs	r0, r3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 98


 2519 0010 BD46     		mov	sp, r7
 2520              		@ sp needed
 2521 0012 80BD     		pop	{r7, pc}
 2522              	.L167:
 2523              		.align	2
 2524              	.L166:
 2525 0014 10E000E0 		.word	-536813552
 2526              		.cfi_endproc
 2527              	.LFE46:
 2528              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2529              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2530              		.align	2
 2531              		.global	CySysTickGetCountFlag
 2532              		.code	16
 2533              		.thumb_func
 2534              		.type	CySysTickGetCountFlag, %function
 2535              	CySysTickGetCountFlag:
 2536              	.LFB47:
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
 2537              		.loc 1 3014 0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 1, uses_anonymous_args = 0
 2541 0000 80B5     		push	{r7, lr}
 2542              		.cfi_def_cfa_offset 8
 2543              		.cfi_offset 7, -8
 2544              		.cfi_offset 14, -4
 2545 0002 00AF     		add	r7, sp, #0
 2546              		.cfi_def_cfa_register 7
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2547              		.loc 1 3015 0
 2548 0004 034B     		ldr	r3, .L170
 2549 0006 1B68     		ldr	r3, [r3]
 2550 0008 1B0C     		lsrs	r3, r3, #16
 2551 000a 0122     		movs	r2, #1
 2552 000c 1340     		ands	r3, r2
3016:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 99


 2553              		.loc 1 3016 0
 2554 000e 1800     		movs	r0, r3
 2555 0010 BD46     		mov	sp, r7
 2556              		@ sp needed
 2557 0012 80BD     		pop	{r7, pc}
 2558              	.L171:
 2559              		.align	2
 2560              	.L170:
 2561 0014 10E000E0 		.word	-536813552
 2562              		.cfi_endproc
 2563              	.LFE47:
 2564              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2565              		.section	.text.CySysTickClear,"ax",%progbits
 2566              		.align	2
 2567              		.global	CySysTickClear
 2568              		.code	16
 2569              		.thumb_func
 2570              		.type	CySysTickClear, %function
 2571              	CySysTickClear:
 2572              	.LFB48:
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3027:Generated_Source\PSoC4/CyLib.c **** {
 2573              		.loc 1 3027 0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 0
 2576              		@ frame_needed = 1, uses_anonymous_args = 0
 2577 0000 80B5     		push	{r7, lr}
 2578              		.cfi_def_cfa_offset 8
 2579              		.cfi_offset 7, -8
 2580              		.cfi_offset 14, -4
 2581 0002 00AF     		add	r7, sp, #0
 2582              		.cfi_def_cfa_register 7
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2583              		.loc 1 3028 0
 2584 0004 024B     		ldr	r3, .L173
 2585 0006 0022     		movs	r2, #0
 2586 0008 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** }
 2587              		.loc 1 3029 0
 2588 000a C046     		nop
 2589 000c BD46     		mov	sp, r7
 2590              		@ sp needed
 2591 000e 80BD     		pop	{r7, pc}
 2592              	.L174:
 2593              		.align	2
 2594              	.L173:
 2595 0010 18E000E0 		.word	-536813544
 2596              		.cfi_endproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 100


 2597              	.LFE48:
 2598              		.size	CySysTickClear, .-CySysTickClear
 2599              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2600              		.align	2
 2601              		.global	CySysTickSetCallback
 2602              		.code	16
 2603              		.thumb_func
 2604              		.type	CySysTickSetCallback, %function
 2605              	CySysTickSetCallback:
 2606              	.LFB49:
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
 2607              		.loc 1 3062 0
 2608              		.cfi_startproc
 2609              		@ args = 0, pretend = 0, frame = 16
 2610              		@ frame_needed = 1, uses_anonymous_args = 0
 2611 0000 80B5     		push	{r7, lr}
 2612              		.cfi_def_cfa_offset 8
 2613              		.cfi_offset 7, -8
 2614              		.cfi_offset 14, -4
 2615 0002 84B0     		sub	sp, sp, #16
 2616              		.cfi_def_cfa_offset 24
 2617 0004 00AF     		add	r7, sp, #0
 2618              		.cfi_def_cfa_register 7
 2619 0006 7860     		str	r0, [r7, #4]
 2620 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 101


3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2621              		.loc 1 3065 0
 2622 000a 074B     		ldr	r3, .L177
 2623 000c 7A68     		ldr	r2, [r7, #4]
 2624 000e 9200     		lsls	r2, r2, #2
 2625 0010 D358     		ldr	r3, [r2, r3]
 2626 0012 FB60     		str	r3, [r7, #12]
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2627              		.loc 1 3066 0
 2628 0014 044B     		ldr	r3, .L177
 2629 0016 7A68     		ldr	r2, [r7, #4]
 2630 0018 9200     		lsls	r2, r2, #2
 2631 001a 3968     		ldr	r1, [r7]
 2632 001c D150     		str	r1, [r2, r3]
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2633              		.loc 1 3067 0
 2634 001e FB68     		ldr	r3, [r7, #12]
3068:Generated_Source\PSoC4/CyLib.c **** }
 2635              		.loc 1 3068 0
 2636 0020 1800     		movs	r0, r3
 2637 0022 BD46     		mov	sp, r7
 2638 0024 04B0     		add	sp, sp, #16
 2639              		@ sp needed
 2640 0026 80BD     		pop	{r7, pc}
 2641              	.L178:
 2642              		.align	2
 2643              	.L177:
 2644 0028 00000000 		.word	CySysTickCallbacks
 2645              		.cfi_endproc
 2646              	.LFE49:
 2647              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2648              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2649              		.align	2
 2650              		.global	CySysTickGetCallback
 2651              		.code	16
 2652              		.thumb_func
 2653              		.type	CySysTickGetCallback, %function
 2654              	CySysTickGetCallback:
 2655              	.LFB50:
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 102


3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
 2656              		.loc 1 3086 0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 8
 2659              		@ frame_needed = 1, uses_anonymous_args = 0
 2660 0000 80B5     		push	{r7, lr}
 2661              		.cfi_def_cfa_offset 8
 2662              		.cfi_offset 7, -8
 2663              		.cfi_offset 14, -4
 2664 0002 82B0     		sub	sp, sp, #8
 2665              		.cfi_def_cfa_offset 16
 2666 0004 00AF     		add	r7, sp, #0
 2667              		.cfi_def_cfa_register 7
 2668 0006 7860     		str	r0, [r7, #4]
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2669              		.loc 1 3087 0
 2670 0008 034B     		ldr	r3, .L181
 2671 000a 7A68     		ldr	r2, [r7, #4]
 2672 000c 9200     		lsls	r2, r2, #2
 2673 000e D358     		ldr	r3, [r2, r3]
3088:Generated_Source\PSoC4/CyLib.c **** }
 2674              		.loc 1 3088 0
 2675 0010 1800     		movs	r0, r3
 2676 0012 BD46     		mov	sp, r7
 2677 0014 02B0     		add	sp, sp, #8
 2678              		@ sp needed
 2679 0016 80BD     		pop	{r7, pc}
 2680              	.L182:
 2681              		.align	2
 2682              	.L181:
 2683 0018 00000000 		.word	CySysTickCallbacks
 2684              		.cfi_endproc
 2685              	.LFE50:
 2686              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2687              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2688              		.align	2
 2689              		.code	16
 2690              		.thumb_func
 2691              		.type	CySysTickServiceCallbacks, %function
 2692              	CySysTickServiceCallbacks:
 2693              	.LFB51:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 2694              		.loc 1 3099 0
 2695              		.cfi_startproc
 2696              		@ args = 0, pretend = 0, frame = 8
 2697              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 103


 2698 0000 80B5     		push	{r7, lr}
 2699              		.cfi_def_cfa_offset 8
 2700              		.cfi_offset 7, -8
 2701              		.cfi_offset 14, -4
 2702 0002 82B0     		sub	sp, sp, #8
 2703              		.cfi_def_cfa_offset 16
 2704 0004 00AF     		add	r7, sp, #0
 2705              		.cfi_def_cfa_register 7
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2706              		.loc 1 3103 0
 2707 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2708 000a 0300     		movs	r3, r0
 2709 000c 012B     		cmp	r3, #1
 2710 000e 13D1     		bne	.L188
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2711              		.loc 1 3105 0
 2712 0010 0023     		movs	r3, #0
 2713 0012 7B60     		str	r3, [r7, #4]
 2714 0014 0DE0     		b	.L185
 2715              	.L187:
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2716              		.loc 1 3107 0
 2717 0016 0A4B     		ldr	r3, .L189
 2718 0018 7A68     		ldr	r2, [r7, #4]
 2719 001a 9200     		lsls	r2, r2, #2
 2720 001c D358     		ldr	r3, [r2, r3]
 2721 001e 002B     		cmp	r3, #0
 2722 0020 04D0     		beq	.L186
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2723              		.loc 1 3109 0
 2724 0022 074B     		ldr	r3, .L189
 2725 0024 7A68     		ldr	r2, [r7, #4]
 2726 0026 9200     		lsls	r2, r2, #2
 2727 0028 D358     		ldr	r3, [r2, r3]
 2728 002a 9847     		blx	r3
 2729              	.L186:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 2730              		.loc 1 3105 0 discriminator 2
 2731 002c 7B68     		ldr	r3, [r7, #4]
 2732 002e 0133     		adds	r3, r3, #1
 2733 0030 7B60     		str	r3, [r7, #4]
 2734              	.L185:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 2735              		.loc 1 3105 0 is_stmt 0 discriminator 1
 2736 0032 7B68     		ldr	r3, [r7, #4]
 2737 0034 042B     		cmp	r3, #4
 2738 0036 EED9     		bls	.L187
 2739              	.L188:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 104


3113:Generated_Source\PSoC4/CyLib.c **** }
 2740              		.loc 1 3113 0 is_stmt 1
 2741 0038 C046     		nop
 2742 003a BD46     		mov	sp, r7
 2743 003c 02B0     		add	sp, sp, #8
 2744              		@ sp needed
 2745 003e 80BD     		pop	{r7, pc}
 2746              	.L190:
 2747              		.align	2
 2748              	.L189:
 2749 0040 00000000 		.word	CySysTickCallbacks
 2750              		.cfi_endproc
 2751              	.LFE51:
 2752              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2753              		.section	.text.CyGetUniqueId,"ax",%progbits
 2754              		.align	2
 2755              		.global	CyGetUniqueId
 2756              		.code	16
 2757              		.thumb_func
 2758              		.type	CyGetUniqueId, %function
 2759              	CyGetUniqueId:
 2760              	.LFB52:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 2761              		.loc 1 3131 0
 2762              		.cfi_startproc
 2763              		@ args = 0, pretend = 0, frame = 8
 2764              		@ frame_needed = 1, uses_anonymous_args = 0
 2765 0000 80B5     		push	{r7, lr}
 2766              		.cfi_def_cfa_offset 8
 2767              		.cfi_offset 7, -8
 2768              		.cfi_offset 14, -4
 2769 0002 82B0     		sub	sp, sp, #8
 2770              		.cfi_def_cfa_offset 16
 2771 0004 00AF     		add	r7, sp, #0
 2772              		.cfi_def_cfa_register 7
 2773 0006 7860     		str	r0, [r7, #4]
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2774              		.loc 1 3133 0
 2775 0008 254B     		ldr	r3, .L192
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 105


 2776 000a 1B78     		ldrb	r3, [r3]
 2777 000c DBB2     		uxtb	r3, r3
 2778 000e 1A00     		movs	r2, r3
 2779 0010 7B68     		ldr	r3, [r7, #4]
 2780 0012 1A60     		str	r2, [r3]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2781              		.loc 1 3134 0
 2782 0014 234B     		ldr	r3, .L192+4
 2783 0016 1B78     		ldrb	r3, [r3]
 2784 0018 DBB2     		uxtb	r3, r3
 2785 001a 1A02     		lsls	r2, r3, #8
 2786 001c 7B68     		ldr	r3, [r7, #4]
 2787 001e 1B68     		ldr	r3, [r3]
 2788 0020 1A43     		orrs	r2, r3
 2789 0022 7B68     		ldr	r3, [r7, #4]
 2790 0024 1A60     		str	r2, [r3]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2791              		.loc 1 3135 0
 2792 0026 204B     		ldr	r3, .L192+8
 2793 0028 1B78     		ldrb	r3, [r3]
 2794 002a DBB2     		uxtb	r3, r3
 2795 002c 1A04     		lsls	r2, r3, #16
 2796 002e 7B68     		ldr	r3, [r7, #4]
 2797 0030 1B68     		ldr	r3, [r3]
 2798 0032 1A43     		orrs	r2, r3
 2799 0034 7B68     		ldr	r3, [r7, #4]
 2800 0036 1A60     		str	r2, [r3]
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2801              		.loc 1 3136 0
 2802 0038 1C4B     		ldr	r3, .L192+12
 2803 003a 1B78     		ldrb	r3, [r3]
 2804 003c DBB2     		uxtb	r3, r3
 2805 003e 1A06     		lsls	r2, r3, #24
 2806 0040 7B68     		ldr	r3, [r7, #4]
 2807 0042 1B68     		ldr	r3, [r3]
 2808 0044 1A43     		orrs	r2, r3
 2809 0046 7B68     		ldr	r3, [r7, #4]
 2810 0048 1A60     		str	r2, [r3]
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2811              		.loc 1 3138 0
 2812 004a 7B68     		ldr	r3, [r7, #4]
 2813 004c 0433     		adds	r3, r3, #4
 2814 004e 184A     		ldr	r2, .L192+16
 2815 0050 1278     		ldrb	r2, [r2]
 2816 0052 D2B2     		uxtb	r2, r2
 2817 0054 1A60     		str	r2, [r3]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2818              		.loc 1 3139 0
 2819 0056 174B     		ldr	r3, .L192+20
 2820 0058 1B78     		ldrb	r3, [r3]
 2821 005a DBB2     		uxtb	r3, r3
 2822 005c 1902     		lsls	r1, r3, #8
 2823 005e 7B68     		ldr	r3, [r7, #4]
 2824 0060 0433     		adds	r3, r3, #4
 2825 0062 7A68     		ldr	r2, [r7, #4]
 2826 0064 0432     		adds	r2, r2, #4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 106


 2827 0066 1268     		ldr	r2, [r2]
 2828 0068 0A43     		orrs	r2, r1
 2829 006a 1A60     		str	r2, [r3]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2830              		.loc 1 3140 0
 2831 006c 124B     		ldr	r3, .L192+24
 2832 006e 1B78     		ldrb	r3, [r3]
 2833 0070 DBB2     		uxtb	r3, r3
 2834 0072 1904     		lsls	r1, r3, #16
 2835 0074 7B68     		ldr	r3, [r7, #4]
 2836 0076 0433     		adds	r3, r3, #4
 2837 0078 7A68     		ldr	r2, [r7, #4]
 2838 007a 0432     		adds	r2, r2, #4
 2839 007c 1268     		ldr	r2, [r2]
 2840 007e 0A43     		orrs	r2, r1
 2841 0080 1A60     		str	r2, [r3]
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2842              		.loc 1 3141 0
 2843 0082 0E4B     		ldr	r3, .L192+28
 2844 0084 1B78     		ldrb	r3, [r3]
 2845 0086 DBB2     		uxtb	r3, r3
 2846 0088 1906     		lsls	r1, r3, #24
 2847 008a 7B68     		ldr	r3, [r7, #4]
 2848 008c 0433     		adds	r3, r3, #4
 2849 008e 7A68     		ldr	r2, [r7, #4]
 2850 0090 0432     		adds	r2, r2, #4
 2851 0092 1268     		ldr	r2, [r2]
 2852 0094 0A43     		orrs	r2, r1
 2853 0096 1A60     		str	r2, [r3]
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
 2854              		.loc 1 3153 0
 2855 0098 C046     		nop
 2856 009a BD46     		mov	sp, r7
 2857 009c 02B0     		add	sp, sp, #8
 2858              		@ sp needed
 2859 009e 80BD     		pop	{r7, pc}
 2860              	.L193:
 2861              		.align	2
 2862              	.L192:
 2863 00a0 78F1FF0F 		.word	268431736
 2864 00a4 79F1FF0F 		.word	268431737
 2865 00a8 7AF1FF0F 		.word	268431738
 2866 00ac 7BF1FF0F 		.word	268431739
 2867 00b0 7CF1FF0F 		.word	268431740
 2868 00b4 7DF1FF0F 		.word	268431741
 2869 00b8 7EF1FF0F 		.word	268431742
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 107


 2870 00bc 7FF1FF0F 		.word	268431743
 2871              		.cfi_endproc
 2872              	.LFE52:
 2873              		.size	CyGetUniqueId, .-CyGetUniqueId
 2874              		.text
 2875              	.Letext0:
 2876              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2877              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2878              		.section	.debug_info,"",%progbits
 2879              	.Ldebug_info0:
 2880 0000 DA090000 		.4byte	0x9da
 2881 0004 0400     		.2byte	0x4
 2882 0006 00000000 		.4byte	.Ldebug_abbrev0
 2883 000a 04       		.byte	0x4
 2884 000b 01       		.uleb128 0x1
 2885 000c 07030000 		.4byte	.LASF109
 2886 0010 0C       		.byte	0xc
 2887 0011 81060000 		.4byte	.LASF110
 2888 0015 DD040000 		.4byte	.LASF111
 2889 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2890 001d 00000000 		.4byte	0
 2891 0021 00000000 		.4byte	.Ldebug_line0
 2892 0025 02       		.uleb128 0x2
 2893 0026 01       		.byte	0x1
 2894 0027 06       		.byte	0x6
 2895 0028 DB000000 		.4byte	.LASF0
 2896 002c 02       		.uleb128 0x2
 2897 002d 01       		.byte	0x1
 2898 002e 08       		.byte	0x8
 2899 002f CF040000 		.4byte	.LASF1
 2900 0033 02       		.uleb128 0x2
 2901 0034 02       		.byte	0x2
 2902 0035 05       		.byte	0x5
 2903 0036 0C050000 		.4byte	.LASF2
 2904 003a 02       		.uleb128 0x2
 2905 003b 02       		.byte	0x2
 2906 003c 07       		.byte	0x7
 2907 003d A8020000 		.4byte	.LASF3
 2908 0041 02       		.uleb128 0x2
 2909 0042 04       		.byte	0x4
 2910 0043 05       		.byte	0x5
 2911 0044 1A010000 		.4byte	.LASF4
 2912 0048 02       		.uleb128 0x2
 2913 0049 04       		.byte	0x4
 2914 004a 07       		.byte	0x7
 2915 004b 32020000 		.4byte	.LASF5
 2916 004f 02       		.uleb128 0x2
 2917 0050 08       		.byte	0x8
 2918 0051 05       		.byte	0x5
 2919 0052 CD000000 		.4byte	.LASF6
 2920 0056 02       		.uleb128 0x2
 2921 0057 08       		.byte	0x8
 2922 0058 07       		.byte	0x7
 2923 0059 67000000 		.4byte	.LASF7
 2924 005d 03       		.uleb128 0x3
 2925 005e 04       		.byte	0x4
 2926 005f 05       		.byte	0x5
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 108


 2927 0060 696E7400 		.ascii	"int\000"
 2928 0064 02       		.uleb128 0x2
 2929 0065 04       		.byte	0x4
 2930 0066 07       		.byte	0x7
 2931 0067 16020000 		.4byte	.LASF8
 2932 006b 04       		.uleb128 0x4
 2933 006c 3A010000 		.4byte	.LASF9
 2934 0070 02       		.byte	0x2
 2935 0071 E401     		.2byte	0x1e4
 2936 0073 2C000000 		.4byte	0x2c
 2937 0077 04       		.uleb128 0x4
 2938 0078 0F000000 		.4byte	.LASF10
 2939 007c 02       		.byte	0x2
 2940 007d E501     		.2byte	0x1e5
 2941 007f 3A000000 		.4byte	0x3a
 2942 0083 04       		.uleb128 0x4
 2943 0084 7A010000 		.4byte	.LASF11
 2944 0088 02       		.byte	0x2
 2945 0089 E601     		.2byte	0x1e6
 2946 008b 48000000 		.4byte	0x48
 2947 008f 02       		.uleb128 0x2
 2948 0090 04       		.byte	0x4
 2949 0091 04       		.byte	0x4
 2950 0092 76040000 		.4byte	.LASF12
 2951 0096 02       		.uleb128 0x2
 2952 0097 08       		.byte	0x8
 2953 0098 04       		.byte	0x4
 2954 0099 56010000 		.4byte	.LASF13
 2955 009d 02       		.uleb128 0x2
 2956 009e 01       		.byte	0x1
 2957 009f 08       		.byte	0x8
 2958 00a0 60050000 		.4byte	.LASF14
 2959 00a4 04       		.uleb128 0x4
 2960 00a5 67060000 		.4byte	.LASF15
 2961 00a9 02       		.byte	0x2
 2962 00aa 8602     		.2byte	0x286
 2963 00ac 48000000 		.4byte	0x48
 2964 00b0 04       		.uleb128 0x4
 2965 00b1 B9040000 		.4byte	.LASF16
 2966 00b5 02       		.byte	0x2
 2967 00b6 8E02     		.2byte	0x28e
 2968 00b8 BC000000 		.4byte	0xbc
 2969 00bc 05       		.uleb128 0x5
 2970 00bd 6B000000 		.4byte	0x6b
 2971 00c1 04       		.uleb128 0x4
 2972 00c2 BC030000 		.4byte	.LASF17
 2973 00c6 02       		.byte	0x2
 2974 00c7 9002     		.2byte	0x290
 2975 00c9 CD000000 		.4byte	0xcd
 2976 00cd 05       		.uleb128 0x5
 2977 00ce 83000000 		.4byte	0x83
 2978 00d2 04       		.uleb128 0x4
 2979 00d3 65050000 		.4byte	.LASF18
 2980 00d7 02       		.byte	0x2
 2981 00d8 A002     		.2byte	0x2a0
 2982 00da DE000000 		.4byte	0xde
 2983 00de 06       		.uleb128 0x6
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 109


 2984 00df 04       		.byte	0x4
 2985 00e0 E4000000 		.4byte	0xe4
 2986 00e4 07       		.uleb128 0x7
 2987 00e5 02       		.uleb128 0x2
 2988 00e6 08       		.byte	0x8
 2989 00e7 04       		.byte	0x4
 2990 00e8 0A040000 		.4byte	.LASF19
 2991 00ec 02       		.uleb128 0x2
 2992 00ed 04       		.byte	0x4
 2993 00ee 07       		.byte	0x7
 2994 00ef DE030000 		.4byte	.LASF20
 2995 00f3 08       		.uleb128 0x8
 2996 00f4 8B040000 		.4byte	.LASF21
 2997 00f8 03       		.byte	0x3
 2998 00f9 F5       		.byte	0xf5
 2999 00fa DE000000 		.4byte	0xde
 3000 00fe 09       		.uleb128 0x9
 3001 00ff 70060000 		.4byte	.LASF22
 3002 0103 01       		.byte	0x1
 3003 0104 62       		.byte	0x62
 3004 0105 00000000 		.4byte	.LFB2
 3005 0109 1C000000 		.4byte	.LFE2-.LFB2
 3006 010d 01       		.uleb128 0x1
 3007 010e 9C       		.byte	0x9c
 3008 010f 09       		.uleb128 0x9
 3009 0110 5F020000 		.4byte	.LASF23
 3010 0114 01       		.byte	0x1
 3011 0115 82       		.byte	0x82
 3012 0116 00000000 		.4byte	.LFB3
 3013 011a 1C000000 		.4byte	.LFE3-.LFB3
 3014 011e 01       		.uleb128 0x1
 3015 011f 9C       		.byte	0x9c
 3016 0120 0A       		.uleb128 0xa
 3017 0121 1F000000 		.4byte	.LASF26
 3018 0125 01       		.byte	0x1
 3019 0126 1B02     		.2byte	0x21b
 3020 0128 00000000 		.4byte	.LFB4
 3021 012c 48000000 		.4byte	.LFE4-.LFB4
 3022 0130 01       		.uleb128 0x1
 3023 0131 9C       		.byte	0x9c
 3024 0132 64010000 		.4byte	0x164
 3025 0136 0B       		.uleb128 0xb
 3026 0137 34050000 		.4byte	.LASF28
 3027 013b 01       		.byte	0x1
 3028 013c 1B02     		.2byte	0x21b
 3029 013e 83000000 		.4byte	0x83
 3030 0142 02       		.uleb128 0x2
 3031 0143 91       		.byte	0x91
 3032 0144 64       		.sleb128 -28
 3033 0145 0C       		.uleb128 0xc
 3034 0146 F8000000 		.4byte	.LASF24
 3035 014a 01       		.byte	0x1
 3036 014b 1D02     		.2byte	0x21d
 3037 014d 6B000000 		.4byte	0x6b
 3038 0151 02       		.uleb128 0x2
 3039 0152 91       		.byte	0x91
 3040 0153 6F       		.sleb128 -17
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 110


 3041 0154 0C       		.uleb128 0xc
 3042 0155 AD060000 		.4byte	.LASF25
 3043 0159 01       		.byte	0x1
 3044 015a 1E02     		.2byte	0x21e
 3045 015c 83000000 		.4byte	0x83
 3046 0160 02       		.uleb128 0x2
 3047 0161 91       		.byte	0x91
 3048 0162 68       		.sleb128 -24
 3049 0163 00       		.byte	0
 3050 0164 0D       		.uleb128 0xd
 3051 0165 A7030000 		.4byte	.LASF27
 3052 0169 01       		.byte	0x1
 3053 016a 6302     		.2byte	0x263
 3054 016c 00000000 		.4byte	.LFB5
 3055 0170 50000000 		.4byte	.LFE5-.LFB5
 3056 0174 01       		.uleb128 0x1
 3057 0175 9C       		.byte	0x9c
 3058 0176 8A010000 		.4byte	0x18a
 3059 017a 0B       		.uleb128 0xb
 3060 017b 4F010000 		.4byte	.LASF29
 3061 017f 01       		.byte	0x1
 3062 0180 6302     		.2byte	0x263
 3063 0182 83000000 		.4byte	0x83
 3064 0186 02       		.uleb128 0x2
 3065 0187 91       		.byte	0x91
 3066 0188 74       		.sleb128 -12
 3067 0189 00       		.byte	0
 3068 018a 0E       		.uleb128 0xe
 3069 018b 9C010000 		.4byte	.LASF37
 3070 018f 01       		.byte	0x1
 3071 0190 8802     		.2byte	0x288
 3072 0192 83000000 		.4byte	0x83
 3073 0196 00000000 		.4byte	.LFB6
 3074 019a 34000000 		.4byte	.LFE6-.LFB6
 3075 019e 01       		.uleb128 0x1
 3076 019f 9C       		.byte	0x9c
 3077 01a0 C3010000 		.4byte	0x1c3
 3078 01a4 0C       		.uleb128 0xc
 3079 01a5 F8000000 		.4byte	.LASF24
 3080 01a9 01       		.byte	0x1
 3081 01aa 8A02     		.2byte	0x28a
 3082 01ac 6B000000 		.4byte	0x6b
 3083 01b0 02       		.uleb128 0x2
 3084 01b1 91       		.byte	0x91
 3085 01b2 6F       		.sleb128 -17
 3086 01b3 0C       		.uleb128 0xc
 3087 01b4 1E040000 		.4byte	.LASF30
 3088 01b8 01       		.byte	0x1
 3089 01b9 8B02     		.2byte	0x28b
 3090 01bb 83000000 		.4byte	0x83
 3091 01bf 02       		.uleb128 0x2
 3092 01c0 91       		.byte	0x91
 3093 01c1 68       		.sleb128 -24
 3094 01c2 00       		.byte	0
 3095 01c3 0A       		.uleb128 0xa
 3096 01c4 82050000 		.4byte	.LASF31
 3097 01c8 01       		.byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 111


 3098 01c9 C502     		.2byte	0x2c5
 3099 01cb 00000000 		.4byte	.LFB7
 3100 01cf 48000000 		.4byte	.LFE7-.LFB7
 3101 01d3 01       		.uleb128 0x1
 3102 01d4 9C       		.byte	0x9c
 3103 01d5 F8010000 		.4byte	0x1f8
 3104 01d9 0B       		.uleb128 0xb
 3105 01da 4B060000 		.4byte	.LASF32
 3106 01de 01       		.byte	0x1
 3107 01df C502     		.2byte	0x2c5
 3108 01e1 83000000 		.4byte	0x83
 3109 01e5 02       		.uleb128 0x2
 3110 01e6 91       		.byte	0x91
 3111 01e7 64       		.sleb128 -28
 3112 01e8 0C       		.uleb128 0xc
 3113 01e9 F8000000 		.4byte	.LASF24
 3114 01ed 01       		.byte	0x1
 3115 01ee C702     		.2byte	0x2c7
 3116 01f0 6B000000 		.4byte	0x6b
 3117 01f4 02       		.uleb128 0x2
 3118 01f5 91       		.byte	0x91
 3119 01f6 6F       		.sleb128 -17
 3120 01f7 00       		.byte	0
 3121 01f8 0A       		.uleb128 0xa
 3122 01f9 F2020000 		.4byte	.LASF33
 3123 01fd 01       		.byte	0x1
 3124 01fe FF02     		.2byte	0x2ff
 3125 0200 00000000 		.4byte	.LFB8
 3126 0204 9C000000 		.4byte	.LFE8-.LFB8
 3127 0208 01       		.uleb128 0x1
 3128 0209 9C       		.byte	0x9c
 3129 020a 4B020000 		.4byte	0x24b
 3130 020e 0B       		.uleb128 0xb
 3131 020f E7000000 		.4byte	.LASF34
 3132 0213 01       		.byte	0x1
 3133 0214 FF02     		.2byte	0x2ff
 3134 0216 83000000 		.4byte	0x83
 3135 021a 02       		.uleb128 0x2
 3136 021b 91       		.byte	0x91
 3137 021c 4C       		.sleb128 -52
 3138 021d 0C       		.uleb128 0xc
 3139 021e 7E000000 		.4byte	.LASF35
 3140 0222 01       		.byte	0x1
 3141 0223 0203     		.2byte	0x302
 3142 0225 5B020000 		.4byte	0x25b
 3143 0229 02       		.uleb128 0x2
 3144 022a 91       		.byte	0x91
 3145 022b 64       		.sleb128 -28
 3146 022c 0C       		.uleb128 0xc
 3147 022d 30010000 		.4byte	.LASF36
 3148 0231 01       		.byte	0x1
 3149 0232 0303     		.2byte	0x303
 3150 0234 70020000 		.4byte	0x270
 3151 0238 02       		.uleb128 0x2
 3152 0239 91       		.byte	0x91
 3153 023a 54       		.sleb128 -44
 3154 023b 0C       		.uleb128 0xc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 112


 3155 023c F8000000 		.4byte	.LASF24
 3156 0240 01       		.byte	0x1
 3157 0241 1303     		.2byte	0x313
 3158 0243 6B000000 		.4byte	0x6b
 3159 0247 02       		.uleb128 0x2
 3160 0248 91       		.byte	0x91
 3161 0249 6F       		.sleb128 -17
 3162 024a 00       		.byte	0
 3163 024b 0F       		.uleb128 0xf
 3164 024c CD000000 		.4byte	0xcd
 3165 0250 5B020000 		.4byte	0x25b
 3166 0254 10       		.uleb128 0x10
 3167 0255 EC000000 		.4byte	0xec
 3168 0259 01       		.byte	0x1
 3169 025a 00       		.byte	0
 3170 025b 05       		.uleb128 0x5
 3171 025c 4B020000 		.4byte	0x24b
 3172 0260 0F       		.uleb128 0xf
 3173 0261 CD000000 		.4byte	0xcd
 3174 0265 70020000 		.4byte	0x270
 3175 0269 10       		.uleb128 0x10
 3176 026a EC000000 		.4byte	0xec
 3177 026e 03       		.byte	0x3
 3178 026f 00       		.byte	0
 3179 0270 05       		.uleb128 0x5
 3180 0271 60020000 		.4byte	0x260
 3181 0275 0E       		.uleb128 0xe
 3182 0276 3E050000 		.4byte	.LASF38
 3183 027a 01       		.byte	0x1
 3184 027b 7F04     		.2byte	0x47f
 3185 027d A4000000 		.4byte	0xa4
 3186 0281 00000000 		.4byte	.LFB9
 3187 0285 74000000 		.4byte	.LFE9-.LFB9
 3188 0289 01       		.uleb128 0x1
 3189 028a 9C       		.byte	0x9c
 3190 028b AE020000 		.4byte	0x2ae
 3191 028f 0B       		.uleb128 0xb
 3192 0290 41060000 		.4byte	.LASF39
 3193 0294 01       		.byte	0x1
 3194 0295 7F04     		.2byte	0x47f
 3195 0297 83000000 		.4byte	0x83
 3196 029b 02       		.uleb128 0x2
 3197 029c 91       		.byte	0x91
 3198 029d 6C       		.sleb128 -20
 3199 029e 0C       		.uleb128 0xc
 3200 029f D1030000 		.4byte	.LASF40
 3201 02a3 01       		.byte	0x1
 3202 02a4 8104     		.2byte	0x481
 3203 02a6 A4000000 		.4byte	0xa4
 3204 02aa 02       		.uleb128 0x2
 3205 02ab 91       		.byte	0x91
 3206 02ac 74       		.sleb128 -12
 3207 02ad 00       		.byte	0
 3208 02ae 11       		.uleb128 0x11
 3209 02af 23060000 		.4byte	.LASF41
 3210 02b3 01       		.byte	0x1
 3211 02b4 0D05     		.2byte	0x50d
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 113


 3212 02b6 00000000 		.4byte	.LFB10
 3213 02ba 30000000 		.4byte	.LFE10-.LFB10
 3214 02be 01       		.uleb128 0x1
 3215 02bf 9C       		.byte	0x9c
 3216 02c0 12       		.uleb128 0x12
 3217 02c1 81010000 		.4byte	.LASF42
 3218 02c5 01       		.byte	0x1
 3219 02c6 2F05     		.2byte	0x52f
 3220 02c8 83000000 		.4byte	0x83
 3221 02cc 00000000 		.4byte	.LFB11
 3222 02d0 20000000 		.4byte	.LFE11-.LFB11
 3223 02d4 01       		.uleb128 0x1
 3224 02d5 9C       		.byte	0x9c
 3225 02d6 EA020000 		.4byte	0x2ea
 3226 02da 0C       		.uleb128 0xc
 3227 02db E1060000 		.4byte	.LASF43
 3228 02df 01       		.byte	0x1
 3229 02e0 3105     		.2byte	0x531
 3230 02e2 83000000 		.4byte	0x83
 3231 02e6 02       		.uleb128 0x2
 3232 02e7 91       		.byte	0x91
 3233 02e8 74       		.sleb128 -12
 3234 02e9 00       		.byte	0
 3235 02ea 0A       		.uleb128 0xa
 3236 02eb 53060000 		.4byte	.LASF44
 3237 02ef 01       		.byte	0x1
 3238 02f0 5E05     		.2byte	0x55e
 3239 02f2 00000000 		.4byte	.LFB12
 3240 02f6 58000000 		.4byte	.LFE12-.LFB12
 3241 02fa 01       		.uleb128 0x1
 3242 02fb 9C       		.byte	0x9c
 3243 02fc 1F030000 		.4byte	0x31f
 3244 0300 0B       		.uleb128 0xb
 3245 0301 4B060000 		.4byte	.LASF32
 3246 0305 01       		.byte	0x1
 3247 0306 5E05     		.2byte	0x55e
 3248 0308 83000000 		.4byte	0x83
 3249 030c 02       		.uleb128 0x2
 3250 030d 91       		.byte	0x91
 3251 030e 64       		.sleb128 -28
 3252 030f 0C       		.uleb128 0xc
 3253 0310 F8000000 		.4byte	.LASF24
 3254 0314 01       		.byte	0x1
 3255 0315 6005     		.2byte	0x560
 3256 0317 6B000000 		.4byte	0x6b
 3257 031b 02       		.uleb128 0x2
 3258 031c 91       		.byte	0x91
 3259 031d 6F       		.sleb128 -17
 3260 031e 00       		.byte	0
 3261 031f 0A       		.uleb128 0xa
 3262 0320 7C040000 		.4byte	.LASF45
 3263 0324 01       		.byte	0x1
 3264 0325 DA08     		.2byte	0x8da
 3265 0327 00000000 		.4byte	.LFB13
 3266 032b 64000000 		.4byte	.LFE13-.LFB13
 3267 032f 01       		.uleb128 0x1
 3268 0330 9C       		.byte	0x9c
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 114


 3269 0331 45030000 		.4byte	0x345
 3270 0335 0B       		.uleb128 0xb
 3271 0336 BE040000 		.4byte	.LASF46
 3272 033a 01       		.byte	0x1
 3273 033b DA08     		.2byte	0x8da
 3274 033d 83000000 		.4byte	0x83
 3275 0341 02       		.uleb128 0x2
 3276 0342 91       		.byte	0x91
 3277 0343 74       		.sleb128 -12
 3278 0344 00       		.byte	0
 3279 0345 11       		.uleb128 0x11
 3280 0346 04060000 		.4byte	.LASF47
 3281 034a 01       		.byte	0x1
 3282 034b F808     		.2byte	0x8f8
 3283 034d 00000000 		.4byte	.LFB14
 3284 0351 2C000000 		.4byte	.LFE14-.LFB14
 3285 0355 01       		.uleb128 0x1
 3286 0356 9C       		.byte	0x9c
 3287 0357 13       		.uleb128 0x13
 3288 0358 44020000 		.4byte	.LASF87
 3289 035c 01       		.byte	0x1
 3290 035d 0A09     		.2byte	0x90a
 3291 035f 83000000 		.4byte	0x83
 3292 0363 00000000 		.4byte	.LFB15
 3293 0367 18000000 		.4byte	.LFE15-.LFB15
 3294 036b 01       		.uleb128 0x1
 3295 036c 9C       		.byte	0x9c
 3296 036d 11       		.uleb128 0x11
 3297 036e 63010000 		.4byte	.LASF48
 3298 0372 01       		.byte	0x1
 3299 0373 1A09     		.2byte	0x91a
 3300 0375 00000000 		.4byte	.LFB16
 3301 0379 14000000 		.4byte	.LFE16-.LFB16
 3302 037d 01       		.uleb128 0x1
 3303 037e 9C       		.byte	0x9c
 3304 037f 12       		.uleb128 0x12
 3305 0380 94020000 		.4byte	.LASF49
 3306 0384 01       		.byte	0x1
 3307 0385 3409     		.2byte	0x934
 3308 0387 83000000 		.4byte	0x83
 3309 038b 00000000 		.4byte	.LFB17
 3310 038f 30000000 		.4byte	.LFE17-.LFB17
 3311 0393 01       		.uleb128 0x1
 3312 0394 9C       		.byte	0x9c
 3313 0395 B8030000 		.4byte	0x3b8
 3314 0399 0B       		.uleb128 0xb
 3315 039a 59050000 		.4byte	.LASF50
 3316 039e 01       		.byte	0x1
 3317 039f 3409     		.2byte	0x934
 3318 03a1 83000000 		.4byte	0x83
 3319 03a5 02       		.uleb128 0x2
 3320 03a6 91       		.byte	0x91
 3321 03a7 6C       		.sleb128 -20
 3322 03a8 0C       		.uleb128 0xc
 3323 03a9 D1030000 		.4byte	.LASF40
 3324 03ad 01       		.byte	0x1
 3325 03ae 3609     		.2byte	0x936
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 115


 3326 03b0 83000000 		.4byte	0x83
 3327 03b4 02       		.uleb128 0x2
 3328 03b5 91       		.byte	0x91
 3329 03b6 74       		.sleb128 -12
 3330 03b7 00       		.byte	0
 3331 03b8 12       		.uleb128 0x12
 3332 03b9 59000000 		.4byte	.LASF51
 3333 03bd 01       		.byte	0x1
 3334 03be 4B09     		.2byte	0x94b
 3335 03c0 83000000 		.4byte	0x83
 3336 03c4 00000000 		.4byte	.LFB18
 3337 03c8 24000000 		.4byte	.LFE18-.LFB18
 3338 03cc 01       		.uleb128 0x1
 3339 03cd 9C       		.byte	0x9c
 3340 03ce E2030000 		.4byte	0x3e2
 3341 03d2 0C       		.uleb128 0xc
 3342 03d3 16000000 		.4byte	.LASF52
 3343 03d7 01       		.byte	0x1
 3344 03d8 4D09     		.2byte	0x94d
 3345 03da 83000000 		.4byte	0x83
 3346 03de 02       		.uleb128 0x2
 3347 03df 91       		.byte	0x91
 3348 03e0 74       		.sleb128 -12
 3349 03e1 00       		.byte	0
 3350 03e2 0D       		.uleb128 0xd
 3351 03e3 89000000 		.4byte	.LASF53
 3352 03e7 01       		.byte	0x1
 3353 03e8 6209     		.2byte	0x962
 3354 03ea 00000000 		.4byte	.LFB19
 3355 03ee 1C000000 		.4byte	.LFE19-.LFB19
 3356 03f2 01       		.uleb128 0x1
 3357 03f3 9C       		.byte	0x9c
 3358 03f4 08040000 		.4byte	0x408
 3359 03f8 0B       		.uleb128 0xb
 3360 03f9 97010000 		.4byte	.LASF54
 3361 03fd 01       		.byte	0x1
 3362 03fe 6209     		.2byte	0x962
 3363 0400 83000000 		.4byte	0x83
 3364 0404 02       		.uleb128 0x2
 3365 0405 91       		.byte	0x91
 3366 0406 74       		.sleb128 -12
 3367 0407 00       		.byte	0
 3368 0408 0E       		.uleb128 0xe
 3369 0409 95030000 		.4byte	.LASF55
 3370 040d 01       		.byte	0x1
 3371 040e 7B09     		.2byte	0x97b
 3372 0410 D2000000 		.4byte	0xd2
 3373 0414 00000000 		.4byte	.LFB20
 3374 0418 48000000 		.4byte	.LFE20-.LFB20
 3375 041c 01       		.uleb128 0x1
 3376 041d 9C       		.byte	0x9c
 3377 041e 5F040000 		.4byte	0x45f
 3378 0422 0B       		.uleb128 0xb
 3379 0423 E2020000 		.4byte	.LASF56
 3380 0427 01       		.byte	0x1
 3381 0428 7B09     		.2byte	0x97b
 3382 042a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 116


 3383 042e 02       		.uleb128 0x2
 3384 042f 91       		.byte	0x91
 3385 0430 6F       		.sleb128 -17
 3386 0431 0B       		.uleb128 0xb
 3387 0432 16040000 		.4byte	.LASF57
 3388 0436 01       		.byte	0x1
 3389 0437 7B09     		.2byte	0x97b
 3390 0439 D2000000 		.4byte	0xd2
 3391 043d 02       		.uleb128 0x2
 3392 043e 91       		.byte	0x91
 3393 043f 68       		.sleb128 -24
 3394 0440 0C       		.uleb128 0xc
 3395 0441 4B000000 		.4byte	.LASF58
 3396 0445 01       		.byte	0x1
 3397 0446 7D09     		.2byte	0x97d
 3398 0448 D2000000 		.4byte	0xd2
 3399 044c 02       		.uleb128 0x2
 3400 044d 91       		.byte	0x91
 3401 044e 70       		.sleb128 -16
 3402 044f 0C       		.uleb128 0xc
 3403 0450 00000000 		.4byte	.LASF59
 3404 0454 01       		.byte	0x1
 3405 0455 7E09     		.2byte	0x97e
 3406 0457 5F040000 		.4byte	0x45f
 3407 045b 02       		.uleb128 0x2
 3408 045c 91       		.byte	0x91
 3409 045d 74       		.sleb128 -12
 3410 045e 00       		.byte	0
 3411 045f 06       		.uleb128 0x6
 3412 0460 04       		.byte	0x4
 3413 0461 D2000000 		.4byte	0xd2
 3414 0465 0E       		.uleb128 0xe
 3415 0466 22050000 		.4byte	.LASF60
 3416 046a 01       		.byte	0x1
 3417 046b 9D09     		.2byte	0x99d
 3418 046d D2000000 		.4byte	0xd2
 3419 0471 00000000 		.4byte	.LFB21
 3420 0475 34000000 		.4byte	.LFE21-.LFB21
 3421 0479 01       		.uleb128 0x1
 3422 047a 9C       		.byte	0x9c
 3423 047b 9E040000 		.4byte	0x49e
 3424 047f 0B       		.uleb128 0xb
 3425 0480 E2020000 		.4byte	.LASF56
 3426 0484 01       		.byte	0x1
 3427 0485 9D09     		.2byte	0x99d
 3428 0487 6B000000 		.4byte	0x6b
 3429 048b 02       		.uleb128 0x2
 3430 048c 91       		.byte	0x91
 3431 048d 6F       		.sleb128 -17
 3432 048e 0C       		.uleb128 0xc
 3433 048f 00000000 		.4byte	.LASF59
 3434 0493 01       		.byte	0x1
 3435 0494 9F09     		.2byte	0x99f
 3436 0496 5F040000 		.4byte	0x45f
 3437 049a 02       		.uleb128 0x2
 3438 049b 91       		.byte	0x91
 3439 049c 74       		.sleb128 -12
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 117


 3440 049d 00       		.byte	0
 3441 049e 0E       		.uleb128 0xe
 3442 049f D3020000 		.4byte	.LASF61
 3443 04a3 01       		.byte	0x1
 3444 04a4 B309     		.2byte	0x9b3
 3445 04a6 D2000000 		.4byte	0xd2
 3446 04aa 00000000 		.4byte	.LFB22
 3447 04ae 4C000000 		.4byte	.LFE22-.LFB22
 3448 04b2 01       		.uleb128 0x1
 3449 04b3 9C       		.byte	0x9c
 3450 04b4 F5040000 		.4byte	0x4f5
 3451 04b8 0B       		.uleb128 0xb
 3452 04b9 E2020000 		.4byte	.LASF56
 3453 04bd 01       		.byte	0x1
 3454 04be B309     		.2byte	0x9b3
 3455 04c0 6B000000 		.4byte	0x6b
 3456 04c4 02       		.uleb128 0x2
 3457 04c5 91       		.byte	0x91
 3458 04c6 6F       		.sleb128 -17
 3459 04c7 0B       		.uleb128 0xb
 3460 04c8 16040000 		.4byte	.LASF57
 3461 04cc 01       		.byte	0x1
 3462 04cd B309     		.2byte	0x9b3
 3463 04cf D2000000 		.4byte	0xd2
 3464 04d3 02       		.uleb128 0x2
 3465 04d4 91       		.byte	0x91
 3466 04d5 68       		.sleb128 -24
 3467 04d6 0C       		.uleb128 0xc
 3468 04d7 4B000000 		.4byte	.LASF58
 3469 04db 01       		.byte	0x1
 3470 04dc B509     		.2byte	0x9b5
 3471 04de D2000000 		.4byte	0xd2
 3472 04e2 02       		.uleb128 0x2
 3473 04e3 91       		.byte	0x91
 3474 04e4 70       		.sleb128 -16
 3475 04e5 0C       		.uleb128 0xc
 3476 04e6 00000000 		.4byte	.LASF59
 3477 04ea 01       		.byte	0x1
 3478 04eb B609     		.2byte	0x9b6
 3479 04ed 5F040000 		.4byte	0x45f
 3480 04f1 02       		.uleb128 0x2
 3481 04f2 91       		.byte	0x91
 3482 04f3 74       		.sleb128 -12
 3483 04f4 00       		.byte	0
 3484 04f5 0E       		.uleb128 0xe
 3485 04f6 9D040000 		.4byte	.LASF62
 3486 04fa 01       		.byte	0x1
 3487 04fb CF09     		.2byte	0x9cf
 3488 04fd D2000000 		.4byte	0xd2
 3489 0501 00000000 		.4byte	.LFB23
 3490 0505 36000000 		.4byte	.LFE23-.LFB23
 3491 0509 01       		.uleb128 0x1
 3492 050a 9C       		.byte	0x9c
 3493 050b 2E050000 		.4byte	0x52e
 3494 050f 0B       		.uleb128 0xb
 3495 0510 E2020000 		.4byte	.LASF56
 3496 0514 01       		.byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 118


 3497 0515 CF09     		.2byte	0x9cf
 3498 0517 6B000000 		.4byte	0x6b
 3499 051b 02       		.uleb128 0x2
 3500 051c 91       		.byte	0x91
 3501 051d 6F       		.sleb128 -17
 3502 051e 0C       		.uleb128 0xc
 3503 051f 00000000 		.4byte	.LASF59
 3504 0523 01       		.byte	0x1
 3505 0524 D109     		.2byte	0x9d1
 3506 0526 5F040000 		.4byte	0x45f
 3507 052a 02       		.uleb128 0x2
 3508 052b 91       		.byte	0x91
 3509 052c 74       		.sleb128 -12
 3510 052d 00       		.byte	0
 3511 052e 0A       		.uleb128 0xa
 3512 052f 65040000 		.4byte	.LASF63
 3513 0533 01       		.byte	0x1
 3514 0534 E209     		.2byte	0x9e2
 3515 0536 00000000 		.4byte	.LFB24
 3516 053a A8000000 		.4byte	.LFE24-.LFB24
 3517 053e 01       		.uleb128 0x1
 3518 053f 9C       		.byte	0x9c
 3519 0540 90050000 		.4byte	0x590
 3520 0544 0B       		.uleb128 0xb
 3521 0545 E2020000 		.4byte	.LASF56
 3522 0549 01       		.byte	0x1
 3523 054a E209     		.2byte	0x9e2
 3524 054c 6B000000 		.4byte	0x6b
 3525 0550 02       		.uleb128 0x2
 3526 0551 91       		.byte	0x91
 3527 0552 5F       		.sleb128 -33
 3528 0553 0B       		.uleb128 0xb
 3529 0554 E9020000 		.4byte	.LASF64
 3530 0558 01       		.byte	0x1
 3531 0559 E209     		.2byte	0x9e2
 3532 055b 6B000000 		.4byte	0x6b
 3533 055f 02       		.uleb128 0x2
 3534 0560 91       		.byte	0x91
 3535 0561 5E       		.sleb128 -34
 3536 0562 0C       		.uleb128 0xc
 3537 0563 F8000000 		.4byte	.LASF24
 3538 0567 01       		.byte	0x1
 3539 0568 E409     		.2byte	0x9e4
 3540 056a 6B000000 		.4byte	0x6b
 3541 056e 02       		.uleb128 0x2
 3542 056f 91       		.byte	0x91
 3543 0570 6B       		.sleb128 -21
 3544 0571 0C       		.uleb128 0xc
 3545 0572 5D010000 		.4byte	.LASF65
 3546 0576 01       		.byte	0x1
 3547 0577 E509     		.2byte	0x9e5
 3548 0579 83000000 		.4byte	0x83
 3549 057d 02       		.uleb128 0x2
 3550 057e 91       		.byte	0x91
 3551 057f 6C       		.sleb128 -20
 3552 0580 0C       		.uleb128 0xc
 3553 0581 E0010000 		.4byte	.LASF66
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 119


 3554 0585 01       		.byte	0x1
 3555 0586 E609     		.2byte	0x9e6
 3556 0588 83000000 		.4byte	0x83
 3557 058c 02       		.uleb128 0x2
 3558 058d 91       		.byte	0x91
 3559 058e 64       		.sleb128 -28
 3560 058f 00       		.byte	0
 3561 0590 0E       		.uleb128 0xe
 3562 0591 B4010000 		.4byte	.LASF67
 3563 0595 01       		.byte	0x1
 3564 0596 040A     		.2byte	0xa04
 3565 0598 6B000000 		.4byte	0x6b
 3566 059c 00000000 		.4byte	.LFB25
 3567 05a0 58000000 		.4byte	.LFE25-.LFB25
 3568 05a4 01       		.uleb128 0x1
 3569 05a5 9C       		.byte	0x9c
 3570 05a6 C9050000 		.4byte	0x5c9
 3571 05aa 0B       		.uleb128 0xb
 3572 05ab E2020000 		.4byte	.LASF56
 3573 05af 01       		.byte	0x1
 3574 05b0 040A     		.2byte	0xa04
 3575 05b2 6B000000 		.4byte	0x6b
 3576 05b6 02       		.uleb128 0x2
 3577 05b7 91       		.byte	0x91
 3578 05b8 6F       		.sleb128 -17
 3579 05b9 0C       		.uleb128 0xc
 3580 05ba E9020000 		.4byte	.LASF64
 3581 05be 01       		.byte	0x1
 3582 05bf 060A     		.2byte	0xa06
 3583 05c1 6B000000 		.4byte	0x6b
 3584 05c5 02       		.uleb128 0x2
 3585 05c6 91       		.byte	0x91
 3586 05c7 77       		.sleb128 -9
 3587 05c8 00       		.byte	0
 3588 05c9 0D       		.uleb128 0xd
 3589 05ca 16050000 		.4byte	.LASF68
 3590 05ce 01       		.byte	0x1
 3591 05cf 190A     		.2byte	0xa19
 3592 05d1 00000000 		.4byte	.LFB26
 3593 05d5 2C000000 		.4byte	.LFE26-.LFB26
 3594 05d9 01       		.uleb128 0x1
 3595 05da 9C       		.byte	0x9c
 3596 05db EF050000 		.4byte	0x5ef
 3597 05df 0B       		.uleb128 0xb
 3598 05e0 E2020000 		.4byte	.LASF56
 3599 05e4 01       		.byte	0x1
 3600 05e5 190A     		.2byte	0xa19
 3601 05e7 6B000000 		.4byte	0x6b
 3602 05eb 02       		.uleb128 0x2
 3603 05ec 91       		.byte	0x91
 3604 05ed 77       		.sleb128 -9
 3605 05ee 00       		.byte	0
 3606 05ef 12       		.uleb128 0x12
 3607 05f0 BF000000 		.4byte	.LASF69
 3608 05f4 01       		.byte	0x1
 3609 05f5 2B0A     		.2byte	0xa2b
 3610 05f7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 120


 3611 05fb 00000000 		.4byte	.LFB27
 3612 05ff 30000000 		.4byte	.LFE27-.LFB27
 3613 0603 01       		.uleb128 0x1
 3614 0604 9C       		.byte	0x9c
 3615 0605 19060000 		.4byte	0x619
 3616 0609 0B       		.uleb128 0xb
 3617 060a E2020000 		.4byte	.LASF56
 3618 060e 01       		.byte	0x1
 3619 060f 2B0A     		.2byte	0xa2b
 3620 0611 6B000000 		.4byte	0x6b
 3621 0615 02       		.uleb128 0x2
 3622 0616 91       		.byte	0x91
 3623 0617 77       		.sleb128 -9
 3624 0618 00       		.byte	0
 3625 0619 0D       		.uleb128 0xd
 3626 061a 23010000 		.4byte	.LASF70
 3627 061e 01       		.byte	0x1
 3628 061f 3B0A     		.2byte	0xa3b
 3629 0621 00000000 		.4byte	.LFB28
 3630 0625 2C000000 		.4byte	.LFE28-.LFB28
 3631 0629 01       		.uleb128 0x1
 3632 062a 9C       		.byte	0x9c
 3633 062b 3F060000 		.4byte	0x63f
 3634 062f 0B       		.uleb128 0xb
 3635 0630 E2020000 		.4byte	.LASF56
 3636 0634 01       		.byte	0x1
 3637 0635 3B0A     		.2byte	0xa3b
 3638 0637 6B000000 		.4byte	0x6b
 3639 063b 02       		.uleb128 0x2
 3640 063c 91       		.byte	0x91
 3641 063d 77       		.sleb128 -9
 3642 063e 00       		.byte	0
 3643 063f 0D       		.uleb128 0xd
 3644 0640 6F020000 		.4byte	.LASF71
 3645 0644 01       		.byte	0x1
 3646 0645 490A     		.2byte	0xa49
 3647 0647 00000000 		.4byte	.LFB29
 3648 064b 2C000000 		.4byte	.LFE29-.LFB29
 3649 064f 01       		.uleb128 0x1
 3650 0650 9C       		.byte	0x9c
 3651 0651 65060000 		.4byte	0x665
 3652 0655 0B       		.uleb128 0xb
 3653 0656 E2020000 		.4byte	.LASF56
 3654 065a 01       		.byte	0x1
 3655 065b 490A     		.2byte	0xa49
 3656 065d 6B000000 		.4byte	0x6b
 3657 0661 02       		.uleb128 0x2
 3658 0662 91       		.byte	0x91
 3659 0663 77       		.sleb128 -9
 3660 0664 00       		.byte	0
 3661 0665 0D       		.uleb128 0xd
 3662 0666 F8030000 		.4byte	.LASF72
 3663 066a 01       		.byte	0x1
 3664 066b 580A     		.2byte	0xa58
 3665 066d 00000000 		.4byte	.LFB30
 3666 0671 2C000000 		.4byte	.LFE30-.LFB30
 3667 0675 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 121


 3668 0676 9C       		.byte	0x9c
 3669 0677 8B060000 		.4byte	0x68b
 3670 067b 0B       		.uleb128 0xb
 3671 067c E2020000 		.4byte	.LASF56
 3672 0680 01       		.byte	0x1
 3673 0681 580A     		.2byte	0xa58
 3674 0683 6B000000 		.4byte	0x6b
 3675 0687 02       		.uleb128 0x2
 3676 0688 91       		.byte	0x91
 3677 0689 77       		.sleb128 -9
 3678 068a 00       		.byte	0
 3679 068b 0D       		.uleb128 0xd
 3680 068c C8040000 		.4byte	.LASF73
 3681 0690 01       		.byte	0x1
 3682 0691 670A     		.2byte	0xa67
 3683 0693 00000000 		.4byte	.LFB31
 3684 0697 16000000 		.4byte	.LFE31-.LFB31
 3685 069b 01       		.uleb128 0x1
 3686 069c 9C       		.byte	0x9c
 3687 069d B1060000 		.4byte	0x6b1
 3688 06a1 0B       		.uleb128 0xb
 3689 06a2 59050000 		.4byte	.LASF50
 3690 06a6 01       		.byte	0x1
 3691 06a7 670A     		.2byte	0xa67
 3692 06a9 6B000000 		.4byte	0x6b
 3693 06ad 02       		.uleb128 0x2
 3694 06ae 91       		.byte	0x91
 3695 06af 77       		.sleb128 -9
 3696 06b0 00       		.byte	0
 3697 06b1 11       		.uleb128 0x11
 3698 06b2 96000000 		.4byte	.LASF74
 3699 06b6 01       		.byte	0x1
 3700 06b7 7F0A     		.2byte	0xa7f
 3701 06b9 00000000 		.4byte	.LFB32
 3702 06bd 24000000 		.4byte	.LFE32-.LFB32
 3703 06c1 01       		.uleb128 0x1
 3704 06c2 9C       		.byte	0x9c
 3705 06c3 0A       		.uleb128 0xa
 3706 06c4 CA050000 		.4byte	.LASF75
 3707 06c8 01       		.byte	0x1
 3708 06c9 930A     		.2byte	0xa93
 3709 06cb 00000000 		.4byte	.LFB33
 3710 06cf 4C000000 		.4byte	.LFE33-.LFB33
 3711 06d3 01       		.uleb128 0x1
 3712 06d4 9C       		.byte	0x9c
 3713 06d5 E9060000 		.4byte	0x6e9
 3714 06d9 0B       		.uleb128 0xb
 3715 06da AC040000 		.4byte	.LASF76
 3716 06de 01       		.byte	0x1
 3717 06df 930A     		.2byte	0xa93
 3718 06e1 83000000 		.4byte	0x83
 3719 06e5 02       		.uleb128 0x2
 3720 06e6 91       		.byte	0x91
 3721 06e7 74       		.sleb128 -12
 3722 06e8 00       		.byte	0
 3723 06e9 0A       		.uleb128 0xa
 3724 06ea 4F050000 		.4byte	.LASF77
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 122


 3725 06ee 01       		.byte	0x1
 3726 06ef AA0A     		.2byte	0xaaa
 3727 06f1 00000000 		.4byte	.LFB34
 3728 06f5 28000000 		.4byte	.LFE34-.LFB34
 3729 06f9 01       		.uleb128 0x1
 3730 06fa 9C       		.byte	0x9c
 3731 06fb 0F070000 		.4byte	0x70f
 3732 06ff 0B       		.uleb128 0xb
 3733 0700 A0060000 		.4byte	.LASF78
 3734 0704 01       		.byte	0x1
 3735 0705 AA0A     		.2byte	0xaaa
 3736 0707 77000000 		.4byte	0x77
 3737 070b 02       		.uleb128 0x2
 3738 070c 91       		.byte	0x91
 3739 070d 76       		.sleb128 -10
 3740 070e 00       		.byte	0
 3741 070f 0A       		.uleb128 0xa
 3742 0710 EC000000 		.4byte	.LASF79
 3743 0714 01       		.byte	0x1
 3744 0715 B80A     		.2byte	0xab8
 3745 0717 00000000 		.4byte	.LFB35
 3746 071b 84000000 		.4byte	.LFE35-.LFB35
 3747 071f 01       		.uleb128 0x1
 3748 0720 9C       		.byte	0x9c
 3749 0721 35070000 		.4byte	0x735
 3750 0725 0B       		.uleb128 0xb
 3751 0726 E7000000 		.4byte	.LASF34
 3752 072a 01       		.byte	0x1
 3753 072b B80A     		.2byte	0xab8
 3754 072d 83000000 		.4byte	0x83
 3755 0731 02       		.uleb128 0x2
 3756 0732 91       		.byte	0x91
 3757 0733 74       		.sleb128 -12
 3758 0734 00       		.byte	0
 3759 0735 14       		.uleb128 0x14
 3760 0736 C2030000 		.4byte	.LASF80
 3761 073a 01       		.byte	0x1
 3762 073b D80A     		.2byte	0xad8
 3763 073d 00000000 		.4byte	.LFB36
 3764 0741 24000000 		.4byte	.LFE36-.LFB36
 3765 0745 01       		.uleb128 0x1
 3766 0746 9C       		.byte	0x9c
 3767 0747 0A       		.uleb128 0xa
 3768 0748 D2010000 		.4byte	.LASF81
 3769 074c 01       		.byte	0x1
 3770 074d F50A     		.2byte	0xaf5
 3771 074f 00000000 		.4byte	.LFB37
 3772 0753 60000000 		.4byte	.LFE37-.LFB37
 3773 0757 01       		.uleb128 0x1
 3774 0758 9C       		.byte	0x9c
 3775 0759 6B070000 		.4byte	0x76b
 3776 075d 15       		.uleb128 0x15
 3777 075e 6900     		.ascii	"i\000"
 3778 0760 01       		.byte	0x1
 3779 0761 F70A     		.2byte	0xaf7
 3780 0763 83000000 		.4byte	0x83
 3781 0767 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 123


 3782 0768 91       		.byte	0x91
 3783 0769 74       		.sleb128 -12
 3784 076a 00       		.byte	0
 3785 076b 14       		.uleb128 0x14
 3786 076c 72050000 		.4byte	.LASF82
 3787 0770 01       		.byte	0x1
 3788 0771 130B     		.2byte	0xb13
 3789 0773 00000000 		.4byte	.LFB38
 3790 0777 20000000 		.4byte	.LFE38-.LFB38
 3791 077b 01       		.uleb128 0x1
 3792 077c 9C       		.byte	0x9c
 3793 077d 11       		.uleb128 0x11
 3794 077e 33060000 		.4byte	.LASF83
 3795 0782 01       		.byte	0x1
 3796 0783 240B     		.2byte	0xb24
 3797 0785 00000000 		.4byte	.LFB39
 3798 0789 1C000000 		.4byte	.LFE39-.LFB39
 3799 078d 01       		.uleb128 0x1
 3800 078e 9C       		.byte	0x9c
 3801 078f 11       		.uleb128 0x11
 3802 0790 A6000000 		.4byte	.LASF84
 3803 0794 01       		.byte	0x1
 3804 0795 340B     		.2byte	0xb34
 3805 0797 00000000 		.4byte	.LFB40
 3806 079b 1C000000 		.4byte	.LFE40-.LFB40
 3807 079f 01       		.uleb128 0x1
 3808 07a0 9C       		.byte	0x9c
 3809 07a1 11       		.uleb128 0x11
 3810 07a2 EA050000 		.4byte	.LASF85
 3811 07a6 01       		.byte	0x1
 3812 07a7 440B     		.2byte	0xb44
 3813 07a9 00000000 		.4byte	.LFB41
 3814 07ad 1C000000 		.4byte	.LFE41-.LFB41
 3815 07b1 01       		.uleb128 0x1
 3816 07b2 9C       		.byte	0x9c
 3817 07b3 0D       		.uleb128 0xd
 3818 07b4 B4060000 		.4byte	.LASF86
 3819 07b8 01       		.byte	0x1
 3820 07b9 550B     		.2byte	0xb55
 3821 07bb 00000000 		.4byte	.LFB42
 3822 07bf 20000000 		.4byte	.LFE42-.LFB42
 3823 07c3 01       		.uleb128 0x1
 3824 07c4 9C       		.byte	0x9c
 3825 07c5 D9070000 		.4byte	0x7d9
 3826 07c9 0B       		.uleb128 0xb
 3827 07ca E0010000 		.4byte	.LASF66
 3828 07ce 01       		.byte	0x1
 3829 07cf 550B     		.2byte	0xb55
 3830 07d1 83000000 		.4byte	0x83
 3831 07d5 02       		.uleb128 0x2
 3832 07d6 91       		.byte	0x91
 3833 07d7 74       		.sleb128 -12
 3834 07d8 00       		.byte	0
 3835 07d9 13       		.uleb128 0x13
 3836 07da 07010000 		.4byte	.LASF88
 3837 07de 01       		.byte	0x1
 3838 07df 650B     		.2byte	0xb65
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 124


 3839 07e1 83000000 		.4byte	0x83
 3840 07e5 00000000 		.4byte	.LFB43
 3841 07e9 18000000 		.4byte	.LFE43-.LFB43
 3842 07ed 01       		.uleb128 0x1
 3843 07ee 9C       		.byte	0x9c
 3844 07ef 13       		.uleb128 0x13
 3845 07f0 45040000 		.4byte	.LASF89
 3846 07f4 01       		.byte	0x1
 3847 07f5 750B     		.2byte	0xb75
 3848 07f7 83000000 		.4byte	0x83
 3849 07fb 00000000 		.4byte	.LFB44
 3850 07ff 18000000 		.4byte	.LFE44-.LFB44
 3851 0803 01       		.uleb128 0x1
 3852 0804 9C       		.byte	0x9c
 3853 0805 0D       		.uleb128 0xd
 3854 0806 BB020000 		.4byte	.LASF90
 3855 080a 01       		.byte	0x1
 3856 080b 950B     		.2byte	0xb95
 3857 080d 00000000 		.4byte	.LFB45
 3858 0811 34000000 		.4byte	.LFE45-.LFB45
 3859 0815 01       		.uleb128 0x1
 3860 0816 9C       		.byte	0x9c
 3861 0817 2B080000 		.4byte	0x82b
 3862 081b 0B       		.uleb128 0xb
 3863 081c E6010000 		.4byte	.LASF91
 3864 0820 01       		.byte	0x1
 3865 0821 950B     		.2byte	0xb95
 3866 0823 83000000 		.4byte	0x83
 3867 0827 02       		.uleb128 0x2
 3868 0828 91       		.byte	0x91
 3869 0829 74       		.sleb128 -12
 3870 082a 00       		.byte	0
 3871 082b 13       		.uleb128 0x13
 3872 082c D2050000 		.4byte	.LASF92
 3873 0830 01       		.byte	0x1
 3874 0831 AE0B     		.2byte	0xbae
 3875 0833 83000000 		.4byte	0x83
 3876 0837 00000000 		.4byte	.LFB46
 3877 083b 18000000 		.4byte	.LFE46-.LFB46
 3878 083f 01       		.uleb128 0x1
 3879 0840 9C       		.byte	0x9c
 3880 0841 13       		.uleb128 0x13
 3881 0842 00020000 		.4byte	.LASF93
 3882 0846 01       		.byte	0x1
 3883 0847 C50B     		.2byte	0xbc5
 3884 0849 83000000 		.4byte	0x83
 3885 084d 00000000 		.4byte	.LFB47
 3886 0851 18000000 		.4byte	.LFE47-.LFB47
 3887 0855 01       		.uleb128 0x1
 3888 0856 9C       		.byte	0x9c
 3889 0857 11       		.uleb128 0x11
 3890 0858 23020000 		.4byte	.LASF94
 3891 085c 01       		.byte	0x1
 3892 085d D20B     		.2byte	0xbd2
 3893 085f 00000000 		.4byte	.LFB48
 3894 0863 14000000 		.4byte	.LFE48-.LFB48
 3895 0867 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 125


 3896 0868 9C       		.byte	0x9c
 3897 0869 12       		.uleb128 0x12
 3898 086a 99050000 		.4byte	.LASF95
 3899 086e 01       		.byte	0x1
 3900 086f F50B     		.2byte	0xbf5
 3901 0871 F3000000 		.4byte	0xf3
 3902 0875 00000000 		.4byte	.LFB49
 3903 0879 2C000000 		.4byte	.LFE49-.LFB49
 3904 087d 01       		.uleb128 0x1
 3905 087e 9C       		.byte	0x9c
 3906 087f B1080000 		.4byte	0x8b1
 3907 0883 0B       		.uleb128 0xb
 3908 0884 E2020000 		.4byte	.LASF56
 3909 0888 01       		.byte	0x1
 3910 0889 F50B     		.2byte	0xbf5
 3911 088b 83000000 		.4byte	0x83
 3912 088f 02       		.uleb128 0x2
 3913 0890 91       		.byte	0x91
 3914 0891 6C       		.sleb128 -20
 3915 0892 0B       		.uleb128 0xb
 3916 0893 2B040000 		.4byte	.LASF96
 3917 0897 01       		.byte	0x1
 3918 0898 F50B     		.2byte	0xbf5
 3919 089a F3000000 		.4byte	0xf3
 3920 089e 02       		.uleb128 0x2
 3921 089f 91       		.byte	0x91
 3922 08a0 68       		.sleb128 -24
 3923 08a1 0C       		.uleb128 0xc
 3924 08a2 52000000 		.4byte	.LASF97
 3925 08a6 01       		.byte	0x1
 3926 08a7 F70B     		.2byte	0xbf7
 3927 08a9 F3000000 		.4byte	0xf3
 3928 08ad 02       		.uleb128 0x2
 3929 08ae 91       		.byte	0x91
 3930 08af 74       		.sleb128 -12
 3931 08b0 00       		.byte	0
 3932 08b1 12       		.uleb128 0x12
 3933 08b2 7F020000 		.4byte	.LASF98
 3934 08b6 01       		.byte	0x1
 3935 08b7 0D0C     		.2byte	0xc0d
 3936 08b9 F3000000 		.4byte	0xf3
 3937 08bd 00000000 		.4byte	.LFB50
 3938 08c1 1C000000 		.4byte	.LFE50-.LFB50
 3939 08c5 01       		.uleb128 0x1
 3940 08c6 9C       		.byte	0x9c
 3941 08c7 DB080000 		.4byte	0x8db
 3942 08cb 0B       		.uleb128 0xb
 3943 08cc E2020000 		.4byte	.LASF56
 3944 08d0 01       		.byte	0x1
 3945 08d1 0D0C     		.2byte	0xc0d
 3946 08d3 83000000 		.4byte	0x83
 3947 08d7 02       		.uleb128 0x2
 3948 08d8 91       		.byte	0x91
 3949 08d9 74       		.sleb128 -12
 3950 08da 00       		.byte	0
 3951 08db 16       		.uleb128 0x16
 3952 08dc C7060000 		.4byte	.LASF112
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 126


 3953 08e0 01       		.byte	0x1
 3954 08e1 1A0C     		.2byte	0xc1a
 3955 08e3 00000000 		.4byte	.LFB51
 3956 08e7 44000000 		.4byte	.LFE51-.LFB51
 3957 08eb 01       		.uleb128 0x1
 3958 08ec 9C       		.byte	0x9c
 3959 08ed FF080000 		.4byte	0x8ff
 3960 08f1 15       		.uleb128 0x15
 3961 08f2 6900     		.ascii	"i\000"
 3962 08f4 01       		.byte	0x1
 3963 08f5 1C0C     		.2byte	0xc1c
 3964 08f7 83000000 		.4byte	0x83
 3965 08fb 02       		.uleb128 0x2
 3966 08fc 91       		.byte	0x91
 3967 08fd 74       		.sleb128 -12
 3968 08fe 00       		.byte	0
 3969 08ff 0D       		.uleb128 0xd
 3970 0900 F2010000 		.4byte	.LASF99
 3971 0904 01       		.byte	0x1
 3972 0905 3A0C     		.2byte	0xc3a
 3973 0907 00000000 		.4byte	.LFB52
 3974 090b C0000000 		.4byte	.LFE52-.LFB52
 3975 090f 01       		.uleb128 0x1
 3976 0910 9C       		.byte	0x9c
 3977 0911 25090000 		.4byte	0x925
 3978 0915 0B       		.uleb128 0xb
 3979 0916 C1050000 		.4byte	.LASF100
 3980 091a 01       		.byte	0x1
 3981 091b 3A0C     		.2byte	0xc3a
 3982 091d 25090000 		.4byte	0x925
 3983 0921 02       		.uleb128 0x2
 3984 0922 91       		.byte	0x91
 3985 0923 74       		.sleb128 -12
 3986 0924 00       		.byte	0
 3987 0925 06       		.uleb128 0x6
 3988 0926 04       		.byte	0x4
 3989 0927 83000000 		.4byte	0x83
 3990 092b 0F       		.uleb128 0xf
 3991 092c F3000000 		.4byte	0xf3
 3992 0930 3B090000 		.4byte	0x93b
 3993 0934 10       		.uleb128 0x10
 3994 0935 EC000000 		.4byte	0xec
 3995 0939 04       		.byte	0x4
 3996 093a 00       		.byte	0
 3997 093b 17       		.uleb128 0x17
 3998 093c AE050000 		.4byte	.LASF101
 3999 0940 01       		.byte	0x1
 4000 0941 22       		.byte	0x22
 4001 0942 2B090000 		.4byte	0x92b
 4002 0946 05       		.uleb128 0x5
 4003 0947 03       		.byte	0x3
 4004 0948 00000000 		.4byte	CySysTickCallbacks
 4005 094c 18       		.uleb128 0x18
 4006 094d 57040000 		.4byte	.LASF102
 4007 0951 01       		.byte	0x1
 4008 0952 1B       		.byte	0x1b
 4009 0953 83000000 		.4byte	0x83
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 127


 4010 0957 05       		.uleb128 0x5
 4011 0958 03       		.byte	0x3
 4012 0959 00000000 		.4byte	cydelayFreqHz
 4013 095d 18       		.uleb128 0x18
 4014 095e 40010000 		.4byte	.LASF103
 4015 0962 01       		.byte	0x1
 4016 0963 1C       		.byte	0x1c
 4017 0964 83000000 		.4byte	0x83
 4018 0968 05       		.uleb128 0x5
 4019 0969 03       		.byte	0x3
 4020 096a 00000000 		.4byte	cydelayFreqKhz
 4021 096e 18       		.uleb128 0x18
 4022 096f 14060000 		.4byte	.LASF104
 4023 0973 01       		.byte	0x1
 4024 0974 1D       		.byte	0x1d
 4025 0975 6B000000 		.4byte	0x6b
 4026 0979 05       		.uleb128 0x5
 4027 097a 03       		.byte	0x3
 4028 097b 00000000 		.4byte	cydelayFreqMhz
 4029 097f 18       		.uleb128 0x18
 4030 0980 C5010000 		.4byte	.LASF105
 4031 0984 01       		.byte	0x1
 4032 0985 1E       		.byte	0x1e
 4033 0986 83000000 		.4byte	0x83
 4034 098a 05       		.uleb128 0x5
 4035 098b 03       		.byte	0x3
 4036 098c 00000000 		.4byte	cydelay32kMs
 4037 0990 18       		.uleb128 0x18
 4038 0991 E7030000 		.4byte	.LASF106
 4039 0995 01       		.byte	0x1
 4040 0996 36       		.byte	0x36
 4041 0997 83000000 		.4byte	0x83
 4042 099b 05       		.uleb128 0x5
 4043 099c 03       		.byte	0x3
 4044 099d 00000000 		.4byte	CySysTickInitVar
 4045 09a1 0F       		.uleb128 0xf
 4046 09a2 B1090000 		.4byte	0x9b1
 4047 09a6 B1090000 		.4byte	0x9b1
 4048 09aa 10       		.uleb128 0x10
 4049 09ab EC000000 		.4byte	0xec
 4050 09af 2D       		.byte	0x2d
 4051 09b0 00       		.byte	0
 4052 09b1 19       		.uleb128 0x19
 4053 09b2 6B000000 		.4byte	0x6b
 4054 09b6 18       		.uleb128 0x18
 4055 09b7 34040000 		.4byte	.LASF107
 4056 09bb 01       		.byte	0x1
 4057 09bc 3B       		.byte	0x3b
 4058 09bd C7090000 		.4byte	0x9c7
 4059 09c1 05       		.uleb128 0x5
 4060 09c2 03       		.byte	0x3
 4061 09c3 00000000 		.4byte	cyImoFreqMhz2Reg
 4062 09c7 19       		.uleb128 0x19
 4063 09c8 A1090000 		.4byte	0x9a1
 4064 09cc 18       		.uleb128 0x18
 4065 09cd 38000000 		.4byte	.LASF108
 4066 09d1 01       		.byte	0x1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 128


 4067 09d2 51       		.byte	0x51
 4068 09d3 83000000 		.4byte	0x83
 4069 09d7 05       		.uleb128 0x5
 4070 09d8 03       		.byte	0x3
 4071 09d9 00000000 		.4byte	CySysClkPumpConfig
 4072 09dd 00       		.byte	0
 4073              		.section	.debug_abbrev,"",%progbits
 4074              	.Ldebug_abbrev0:
 4075 0000 01       		.uleb128 0x1
 4076 0001 11       		.uleb128 0x11
 4077 0002 01       		.byte	0x1
 4078 0003 25       		.uleb128 0x25
 4079 0004 0E       		.uleb128 0xe
 4080 0005 13       		.uleb128 0x13
 4081 0006 0B       		.uleb128 0xb
 4082 0007 03       		.uleb128 0x3
 4083 0008 0E       		.uleb128 0xe
 4084 0009 1B       		.uleb128 0x1b
 4085 000a 0E       		.uleb128 0xe
 4086 000b 55       		.uleb128 0x55
 4087 000c 17       		.uleb128 0x17
 4088 000d 11       		.uleb128 0x11
 4089 000e 01       		.uleb128 0x1
 4090 000f 10       		.uleb128 0x10
 4091 0010 17       		.uleb128 0x17
 4092 0011 00       		.byte	0
 4093 0012 00       		.byte	0
 4094 0013 02       		.uleb128 0x2
 4095 0014 24       		.uleb128 0x24
 4096 0015 00       		.byte	0
 4097 0016 0B       		.uleb128 0xb
 4098 0017 0B       		.uleb128 0xb
 4099 0018 3E       		.uleb128 0x3e
 4100 0019 0B       		.uleb128 0xb
 4101 001a 03       		.uleb128 0x3
 4102 001b 0E       		.uleb128 0xe
 4103 001c 00       		.byte	0
 4104 001d 00       		.byte	0
 4105 001e 03       		.uleb128 0x3
 4106 001f 24       		.uleb128 0x24
 4107 0020 00       		.byte	0
 4108 0021 0B       		.uleb128 0xb
 4109 0022 0B       		.uleb128 0xb
 4110 0023 3E       		.uleb128 0x3e
 4111 0024 0B       		.uleb128 0xb
 4112 0025 03       		.uleb128 0x3
 4113 0026 08       		.uleb128 0x8
 4114 0027 00       		.byte	0
 4115 0028 00       		.byte	0
 4116 0029 04       		.uleb128 0x4
 4117 002a 16       		.uleb128 0x16
 4118 002b 00       		.byte	0
 4119 002c 03       		.uleb128 0x3
 4120 002d 0E       		.uleb128 0xe
 4121 002e 3A       		.uleb128 0x3a
 4122 002f 0B       		.uleb128 0xb
 4123 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 129


 4124 0031 05       		.uleb128 0x5
 4125 0032 49       		.uleb128 0x49
 4126 0033 13       		.uleb128 0x13
 4127 0034 00       		.byte	0
 4128 0035 00       		.byte	0
 4129 0036 05       		.uleb128 0x5
 4130 0037 35       		.uleb128 0x35
 4131 0038 00       		.byte	0
 4132 0039 49       		.uleb128 0x49
 4133 003a 13       		.uleb128 0x13
 4134 003b 00       		.byte	0
 4135 003c 00       		.byte	0
 4136 003d 06       		.uleb128 0x6
 4137 003e 0F       		.uleb128 0xf
 4138 003f 00       		.byte	0
 4139 0040 0B       		.uleb128 0xb
 4140 0041 0B       		.uleb128 0xb
 4141 0042 49       		.uleb128 0x49
 4142 0043 13       		.uleb128 0x13
 4143 0044 00       		.byte	0
 4144 0045 00       		.byte	0
 4145 0046 07       		.uleb128 0x7
 4146 0047 15       		.uleb128 0x15
 4147 0048 00       		.byte	0
 4148 0049 27       		.uleb128 0x27
 4149 004a 19       		.uleb128 0x19
 4150 004b 00       		.byte	0
 4151 004c 00       		.byte	0
 4152 004d 08       		.uleb128 0x8
 4153 004e 16       		.uleb128 0x16
 4154 004f 00       		.byte	0
 4155 0050 03       		.uleb128 0x3
 4156 0051 0E       		.uleb128 0xe
 4157 0052 3A       		.uleb128 0x3a
 4158 0053 0B       		.uleb128 0xb
 4159 0054 3B       		.uleb128 0x3b
 4160 0055 0B       		.uleb128 0xb
 4161 0056 49       		.uleb128 0x49
 4162 0057 13       		.uleb128 0x13
 4163 0058 00       		.byte	0
 4164 0059 00       		.byte	0
 4165 005a 09       		.uleb128 0x9
 4166 005b 2E       		.uleb128 0x2e
 4167 005c 00       		.byte	0
 4168 005d 3F       		.uleb128 0x3f
 4169 005e 19       		.uleb128 0x19
 4170 005f 03       		.uleb128 0x3
 4171 0060 0E       		.uleb128 0xe
 4172 0061 3A       		.uleb128 0x3a
 4173 0062 0B       		.uleb128 0xb
 4174 0063 3B       		.uleb128 0x3b
 4175 0064 0B       		.uleb128 0xb
 4176 0065 27       		.uleb128 0x27
 4177 0066 19       		.uleb128 0x19
 4178 0067 11       		.uleb128 0x11
 4179 0068 01       		.uleb128 0x1
 4180 0069 12       		.uleb128 0x12
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 130


 4181 006a 06       		.uleb128 0x6
 4182 006b 40       		.uleb128 0x40
 4183 006c 18       		.uleb128 0x18
 4184 006d 9742     		.uleb128 0x2117
 4185 006f 19       		.uleb128 0x19
 4186 0070 00       		.byte	0
 4187 0071 00       		.byte	0
 4188 0072 0A       		.uleb128 0xa
 4189 0073 2E       		.uleb128 0x2e
 4190 0074 01       		.byte	0x1
 4191 0075 3F       		.uleb128 0x3f
 4192 0076 19       		.uleb128 0x19
 4193 0077 03       		.uleb128 0x3
 4194 0078 0E       		.uleb128 0xe
 4195 0079 3A       		.uleb128 0x3a
 4196 007a 0B       		.uleb128 0xb
 4197 007b 3B       		.uleb128 0x3b
 4198 007c 05       		.uleb128 0x5
 4199 007d 27       		.uleb128 0x27
 4200 007e 19       		.uleb128 0x19
 4201 007f 11       		.uleb128 0x11
 4202 0080 01       		.uleb128 0x1
 4203 0081 12       		.uleb128 0x12
 4204 0082 06       		.uleb128 0x6
 4205 0083 40       		.uleb128 0x40
 4206 0084 18       		.uleb128 0x18
 4207 0085 9642     		.uleb128 0x2116
 4208 0087 19       		.uleb128 0x19
 4209 0088 01       		.uleb128 0x1
 4210 0089 13       		.uleb128 0x13
 4211 008a 00       		.byte	0
 4212 008b 00       		.byte	0
 4213 008c 0B       		.uleb128 0xb
 4214 008d 05       		.uleb128 0x5
 4215 008e 00       		.byte	0
 4216 008f 03       		.uleb128 0x3
 4217 0090 0E       		.uleb128 0xe
 4218 0091 3A       		.uleb128 0x3a
 4219 0092 0B       		.uleb128 0xb
 4220 0093 3B       		.uleb128 0x3b
 4221 0094 05       		.uleb128 0x5
 4222 0095 49       		.uleb128 0x49
 4223 0096 13       		.uleb128 0x13
 4224 0097 02       		.uleb128 0x2
 4225 0098 18       		.uleb128 0x18
 4226 0099 00       		.byte	0
 4227 009a 00       		.byte	0
 4228 009b 0C       		.uleb128 0xc
 4229 009c 34       		.uleb128 0x34
 4230 009d 00       		.byte	0
 4231 009e 03       		.uleb128 0x3
 4232 009f 0E       		.uleb128 0xe
 4233 00a0 3A       		.uleb128 0x3a
 4234 00a1 0B       		.uleb128 0xb
 4235 00a2 3B       		.uleb128 0x3b
 4236 00a3 05       		.uleb128 0x5
 4237 00a4 49       		.uleb128 0x49
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 131


 4238 00a5 13       		.uleb128 0x13
 4239 00a6 02       		.uleb128 0x2
 4240 00a7 18       		.uleb128 0x18
 4241 00a8 00       		.byte	0
 4242 00a9 00       		.byte	0
 4243 00aa 0D       		.uleb128 0xd
 4244 00ab 2E       		.uleb128 0x2e
 4245 00ac 01       		.byte	0x1
 4246 00ad 3F       		.uleb128 0x3f
 4247 00ae 19       		.uleb128 0x19
 4248 00af 03       		.uleb128 0x3
 4249 00b0 0E       		.uleb128 0xe
 4250 00b1 3A       		.uleb128 0x3a
 4251 00b2 0B       		.uleb128 0xb
 4252 00b3 3B       		.uleb128 0x3b
 4253 00b4 05       		.uleb128 0x5
 4254 00b5 27       		.uleb128 0x27
 4255 00b6 19       		.uleb128 0x19
 4256 00b7 11       		.uleb128 0x11
 4257 00b8 01       		.uleb128 0x1
 4258 00b9 12       		.uleb128 0x12
 4259 00ba 06       		.uleb128 0x6
 4260 00bb 40       		.uleb128 0x40
 4261 00bc 18       		.uleb128 0x18
 4262 00bd 9742     		.uleb128 0x2117
 4263 00bf 19       		.uleb128 0x19
 4264 00c0 01       		.uleb128 0x1
 4265 00c1 13       		.uleb128 0x13
 4266 00c2 00       		.byte	0
 4267 00c3 00       		.byte	0
 4268 00c4 0E       		.uleb128 0xe
 4269 00c5 2E       		.uleb128 0x2e
 4270 00c6 01       		.byte	0x1
 4271 00c7 3F       		.uleb128 0x3f
 4272 00c8 19       		.uleb128 0x19
 4273 00c9 03       		.uleb128 0x3
 4274 00ca 0E       		.uleb128 0xe
 4275 00cb 3A       		.uleb128 0x3a
 4276 00cc 0B       		.uleb128 0xb
 4277 00cd 3B       		.uleb128 0x3b
 4278 00ce 05       		.uleb128 0x5
 4279 00cf 27       		.uleb128 0x27
 4280 00d0 19       		.uleb128 0x19
 4281 00d1 49       		.uleb128 0x49
 4282 00d2 13       		.uleb128 0x13
 4283 00d3 11       		.uleb128 0x11
 4284 00d4 01       		.uleb128 0x1
 4285 00d5 12       		.uleb128 0x12
 4286 00d6 06       		.uleb128 0x6
 4287 00d7 40       		.uleb128 0x40
 4288 00d8 18       		.uleb128 0x18
 4289 00d9 9642     		.uleb128 0x2116
 4290 00db 19       		.uleb128 0x19
 4291 00dc 01       		.uleb128 0x1
 4292 00dd 13       		.uleb128 0x13
 4293 00de 00       		.byte	0
 4294 00df 00       		.byte	0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 132


 4295 00e0 0F       		.uleb128 0xf
 4296 00e1 01       		.uleb128 0x1
 4297 00e2 01       		.byte	0x1
 4298 00e3 49       		.uleb128 0x49
 4299 00e4 13       		.uleb128 0x13
 4300 00e5 01       		.uleb128 0x1
 4301 00e6 13       		.uleb128 0x13
 4302 00e7 00       		.byte	0
 4303 00e8 00       		.byte	0
 4304 00e9 10       		.uleb128 0x10
 4305 00ea 21       		.uleb128 0x21
 4306 00eb 00       		.byte	0
 4307 00ec 49       		.uleb128 0x49
 4308 00ed 13       		.uleb128 0x13
 4309 00ee 2F       		.uleb128 0x2f
 4310 00ef 0B       		.uleb128 0xb
 4311 00f0 00       		.byte	0
 4312 00f1 00       		.byte	0
 4313 00f2 11       		.uleb128 0x11
 4314 00f3 2E       		.uleb128 0x2e
 4315 00f4 00       		.byte	0
 4316 00f5 3F       		.uleb128 0x3f
 4317 00f6 19       		.uleb128 0x19
 4318 00f7 03       		.uleb128 0x3
 4319 00f8 0E       		.uleb128 0xe
 4320 00f9 3A       		.uleb128 0x3a
 4321 00fa 0B       		.uleb128 0xb
 4322 00fb 3B       		.uleb128 0x3b
 4323 00fc 05       		.uleb128 0x5
 4324 00fd 27       		.uleb128 0x27
 4325 00fe 19       		.uleb128 0x19
 4326 00ff 11       		.uleb128 0x11
 4327 0100 01       		.uleb128 0x1
 4328 0101 12       		.uleb128 0x12
 4329 0102 06       		.uleb128 0x6
 4330 0103 40       		.uleb128 0x40
 4331 0104 18       		.uleb128 0x18
 4332 0105 9742     		.uleb128 0x2117
 4333 0107 19       		.uleb128 0x19
 4334 0108 00       		.byte	0
 4335 0109 00       		.byte	0
 4336 010a 12       		.uleb128 0x12
 4337 010b 2E       		.uleb128 0x2e
 4338 010c 01       		.byte	0x1
 4339 010d 3F       		.uleb128 0x3f
 4340 010e 19       		.uleb128 0x19
 4341 010f 03       		.uleb128 0x3
 4342 0110 0E       		.uleb128 0xe
 4343 0111 3A       		.uleb128 0x3a
 4344 0112 0B       		.uleb128 0xb
 4345 0113 3B       		.uleb128 0x3b
 4346 0114 05       		.uleb128 0x5
 4347 0115 27       		.uleb128 0x27
 4348 0116 19       		.uleb128 0x19
 4349 0117 49       		.uleb128 0x49
 4350 0118 13       		.uleb128 0x13
 4351 0119 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 133


 4352 011a 01       		.uleb128 0x1
 4353 011b 12       		.uleb128 0x12
 4354 011c 06       		.uleb128 0x6
 4355 011d 40       		.uleb128 0x40
 4356 011e 18       		.uleb128 0x18
 4357 011f 9742     		.uleb128 0x2117
 4358 0121 19       		.uleb128 0x19
 4359 0122 01       		.uleb128 0x1
 4360 0123 13       		.uleb128 0x13
 4361 0124 00       		.byte	0
 4362 0125 00       		.byte	0
 4363 0126 13       		.uleb128 0x13
 4364 0127 2E       		.uleb128 0x2e
 4365 0128 00       		.byte	0
 4366 0129 3F       		.uleb128 0x3f
 4367 012a 19       		.uleb128 0x19
 4368 012b 03       		.uleb128 0x3
 4369 012c 0E       		.uleb128 0xe
 4370 012d 3A       		.uleb128 0x3a
 4371 012e 0B       		.uleb128 0xb
 4372 012f 3B       		.uleb128 0x3b
 4373 0130 05       		.uleb128 0x5
 4374 0131 27       		.uleb128 0x27
 4375 0132 19       		.uleb128 0x19
 4376 0133 49       		.uleb128 0x49
 4377 0134 13       		.uleb128 0x13
 4378 0135 11       		.uleb128 0x11
 4379 0136 01       		.uleb128 0x1
 4380 0137 12       		.uleb128 0x12
 4381 0138 06       		.uleb128 0x6
 4382 0139 40       		.uleb128 0x40
 4383 013a 18       		.uleb128 0x18
 4384 013b 9742     		.uleb128 0x2117
 4385 013d 19       		.uleb128 0x19
 4386 013e 00       		.byte	0
 4387 013f 00       		.byte	0
 4388 0140 14       		.uleb128 0x14
 4389 0141 2E       		.uleb128 0x2e
 4390 0142 00       		.byte	0
 4391 0143 3F       		.uleb128 0x3f
 4392 0144 19       		.uleb128 0x19
 4393 0145 03       		.uleb128 0x3
 4394 0146 0E       		.uleb128 0xe
 4395 0147 3A       		.uleb128 0x3a
 4396 0148 0B       		.uleb128 0xb
 4397 0149 3B       		.uleb128 0x3b
 4398 014a 05       		.uleb128 0x5
 4399 014b 27       		.uleb128 0x27
 4400 014c 19       		.uleb128 0x19
 4401 014d 11       		.uleb128 0x11
 4402 014e 01       		.uleb128 0x1
 4403 014f 12       		.uleb128 0x12
 4404 0150 06       		.uleb128 0x6
 4405 0151 40       		.uleb128 0x40
 4406 0152 18       		.uleb128 0x18
 4407 0153 9642     		.uleb128 0x2116
 4408 0155 19       		.uleb128 0x19
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 134


 4409 0156 00       		.byte	0
 4410 0157 00       		.byte	0
 4411 0158 15       		.uleb128 0x15
 4412 0159 34       		.uleb128 0x34
 4413 015a 00       		.byte	0
 4414 015b 03       		.uleb128 0x3
 4415 015c 08       		.uleb128 0x8
 4416 015d 3A       		.uleb128 0x3a
 4417 015e 0B       		.uleb128 0xb
 4418 015f 3B       		.uleb128 0x3b
 4419 0160 05       		.uleb128 0x5
 4420 0161 49       		.uleb128 0x49
 4421 0162 13       		.uleb128 0x13
 4422 0163 02       		.uleb128 0x2
 4423 0164 18       		.uleb128 0x18
 4424 0165 00       		.byte	0
 4425 0166 00       		.byte	0
 4426 0167 16       		.uleb128 0x16
 4427 0168 2E       		.uleb128 0x2e
 4428 0169 01       		.byte	0x1
 4429 016a 03       		.uleb128 0x3
 4430 016b 0E       		.uleb128 0xe
 4431 016c 3A       		.uleb128 0x3a
 4432 016d 0B       		.uleb128 0xb
 4433 016e 3B       		.uleb128 0x3b
 4434 016f 05       		.uleb128 0x5
 4435 0170 27       		.uleb128 0x27
 4436 0171 19       		.uleb128 0x19
 4437 0172 11       		.uleb128 0x11
 4438 0173 01       		.uleb128 0x1
 4439 0174 12       		.uleb128 0x12
 4440 0175 06       		.uleb128 0x6
 4441 0176 40       		.uleb128 0x40
 4442 0177 18       		.uleb128 0x18
 4443 0178 9642     		.uleb128 0x2116
 4444 017a 19       		.uleb128 0x19
 4445 017b 01       		.uleb128 0x1
 4446 017c 13       		.uleb128 0x13
 4447 017d 00       		.byte	0
 4448 017e 00       		.byte	0
 4449 017f 17       		.uleb128 0x17
 4450 0180 34       		.uleb128 0x34
 4451 0181 00       		.byte	0
 4452 0182 03       		.uleb128 0x3
 4453 0183 0E       		.uleb128 0xe
 4454 0184 3A       		.uleb128 0x3a
 4455 0185 0B       		.uleb128 0xb
 4456 0186 3B       		.uleb128 0x3b
 4457 0187 0B       		.uleb128 0xb
 4458 0188 49       		.uleb128 0x49
 4459 0189 13       		.uleb128 0x13
 4460 018a 02       		.uleb128 0x2
 4461 018b 18       		.uleb128 0x18
 4462 018c 00       		.byte	0
 4463 018d 00       		.byte	0
 4464 018e 18       		.uleb128 0x18
 4465 018f 34       		.uleb128 0x34
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 135


 4466 0190 00       		.byte	0
 4467 0191 03       		.uleb128 0x3
 4468 0192 0E       		.uleb128 0xe
 4469 0193 3A       		.uleb128 0x3a
 4470 0194 0B       		.uleb128 0xb
 4471 0195 3B       		.uleb128 0x3b
 4472 0196 0B       		.uleb128 0xb
 4473 0197 49       		.uleb128 0x49
 4474 0198 13       		.uleb128 0x13
 4475 0199 3F       		.uleb128 0x3f
 4476 019a 19       		.uleb128 0x19
 4477 019b 02       		.uleb128 0x2
 4478 019c 18       		.uleb128 0x18
 4479 019d 00       		.byte	0
 4480 019e 00       		.byte	0
 4481 019f 19       		.uleb128 0x19
 4482 01a0 26       		.uleb128 0x26
 4483 01a1 00       		.byte	0
 4484 01a2 49       		.uleb128 0x49
 4485 01a3 13       		.uleb128 0x13
 4486 01a4 00       		.byte	0
 4487 01a5 00       		.byte	0
 4488 01a6 00       		.byte	0
 4489              		.section	.debug_aranges,"",%progbits
 4490 0000 AC010000 		.4byte	0x1ac
 4491 0004 0200     		.2byte	0x2
 4492 0006 00000000 		.4byte	.Ldebug_info0
 4493 000a 04       		.byte	0x4
 4494 000b 00       		.byte	0
 4495 000c 0000     		.2byte	0
 4496 000e 0000     		.2byte	0
 4497 0010 00000000 		.4byte	.LFB2
 4498 0014 1C000000 		.4byte	.LFE2-.LFB2
 4499 0018 00000000 		.4byte	.LFB3
 4500 001c 1C000000 		.4byte	.LFE3-.LFB3
 4501 0020 00000000 		.4byte	.LFB4
 4502 0024 48000000 		.4byte	.LFE4-.LFB4
 4503 0028 00000000 		.4byte	.LFB5
 4504 002c 50000000 		.4byte	.LFE5-.LFB5
 4505 0030 00000000 		.4byte	.LFB6
 4506 0034 34000000 		.4byte	.LFE6-.LFB6
 4507 0038 00000000 		.4byte	.LFB7
 4508 003c 48000000 		.4byte	.LFE7-.LFB7
 4509 0040 00000000 		.4byte	.LFB8
 4510 0044 9C000000 		.4byte	.LFE8-.LFB8
 4511 0048 00000000 		.4byte	.LFB9
 4512 004c 74000000 		.4byte	.LFE9-.LFB9
 4513 0050 00000000 		.4byte	.LFB10
 4514 0054 30000000 		.4byte	.LFE10-.LFB10
 4515 0058 00000000 		.4byte	.LFB11
 4516 005c 20000000 		.4byte	.LFE11-.LFB11
 4517 0060 00000000 		.4byte	.LFB12
 4518 0064 58000000 		.4byte	.LFE12-.LFB12
 4519 0068 00000000 		.4byte	.LFB13
 4520 006c 64000000 		.4byte	.LFE13-.LFB13
 4521 0070 00000000 		.4byte	.LFB14
 4522 0074 2C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 136


 4523 0078 00000000 		.4byte	.LFB15
 4524 007c 18000000 		.4byte	.LFE15-.LFB15
 4525 0080 00000000 		.4byte	.LFB16
 4526 0084 14000000 		.4byte	.LFE16-.LFB16
 4527 0088 00000000 		.4byte	.LFB17
 4528 008c 30000000 		.4byte	.LFE17-.LFB17
 4529 0090 00000000 		.4byte	.LFB18
 4530 0094 24000000 		.4byte	.LFE18-.LFB18
 4531 0098 00000000 		.4byte	.LFB19
 4532 009c 1C000000 		.4byte	.LFE19-.LFB19
 4533 00a0 00000000 		.4byte	.LFB20
 4534 00a4 48000000 		.4byte	.LFE20-.LFB20
 4535 00a8 00000000 		.4byte	.LFB21
 4536 00ac 34000000 		.4byte	.LFE21-.LFB21
 4537 00b0 00000000 		.4byte	.LFB22
 4538 00b4 4C000000 		.4byte	.LFE22-.LFB22
 4539 00b8 00000000 		.4byte	.LFB23
 4540 00bc 36000000 		.4byte	.LFE23-.LFB23
 4541 00c0 00000000 		.4byte	.LFB24
 4542 00c4 A8000000 		.4byte	.LFE24-.LFB24
 4543 00c8 00000000 		.4byte	.LFB25
 4544 00cc 58000000 		.4byte	.LFE25-.LFB25
 4545 00d0 00000000 		.4byte	.LFB26
 4546 00d4 2C000000 		.4byte	.LFE26-.LFB26
 4547 00d8 00000000 		.4byte	.LFB27
 4548 00dc 30000000 		.4byte	.LFE27-.LFB27
 4549 00e0 00000000 		.4byte	.LFB28
 4550 00e4 2C000000 		.4byte	.LFE28-.LFB28
 4551 00e8 00000000 		.4byte	.LFB29
 4552 00ec 2C000000 		.4byte	.LFE29-.LFB29
 4553 00f0 00000000 		.4byte	.LFB30
 4554 00f4 2C000000 		.4byte	.LFE30-.LFB30
 4555 00f8 00000000 		.4byte	.LFB31
 4556 00fc 16000000 		.4byte	.LFE31-.LFB31
 4557 0100 00000000 		.4byte	.LFB32
 4558 0104 24000000 		.4byte	.LFE32-.LFB32
 4559 0108 00000000 		.4byte	.LFB33
 4560 010c 4C000000 		.4byte	.LFE33-.LFB33
 4561 0110 00000000 		.4byte	.LFB34
 4562 0114 28000000 		.4byte	.LFE34-.LFB34
 4563 0118 00000000 		.4byte	.LFB35
 4564 011c 84000000 		.4byte	.LFE35-.LFB35
 4565 0120 00000000 		.4byte	.LFB36
 4566 0124 24000000 		.4byte	.LFE36-.LFB36
 4567 0128 00000000 		.4byte	.LFB37
 4568 012c 60000000 		.4byte	.LFE37-.LFB37
 4569 0130 00000000 		.4byte	.LFB38
 4570 0134 20000000 		.4byte	.LFE38-.LFB38
 4571 0138 00000000 		.4byte	.LFB39
 4572 013c 1C000000 		.4byte	.LFE39-.LFB39
 4573 0140 00000000 		.4byte	.LFB40
 4574 0144 1C000000 		.4byte	.LFE40-.LFB40
 4575 0148 00000000 		.4byte	.LFB41
 4576 014c 1C000000 		.4byte	.LFE41-.LFB41
 4577 0150 00000000 		.4byte	.LFB42
 4578 0154 20000000 		.4byte	.LFE42-.LFB42
 4579 0158 00000000 		.4byte	.LFB43
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 137


 4580 015c 18000000 		.4byte	.LFE43-.LFB43
 4581 0160 00000000 		.4byte	.LFB44
 4582 0164 18000000 		.4byte	.LFE44-.LFB44
 4583 0168 00000000 		.4byte	.LFB45
 4584 016c 34000000 		.4byte	.LFE45-.LFB45
 4585 0170 00000000 		.4byte	.LFB46
 4586 0174 18000000 		.4byte	.LFE46-.LFB46
 4587 0178 00000000 		.4byte	.LFB47
 4588 017c 18000000 		.4byte	.LFE47-.LFB47
 4589 0180 00000000 		.4byte	.LFB48
 4590 0184 14000000 		.4byte	.LFE48-.LFB48
 4591 0188 00000000 		.4byte	.LFB49
 4592 018c 2C000000 		.4byte	.LFE49-.LFB49
 4593 0190 00000000 		.4byte	.LFB50
 4594 0194 1C000000 		.4byte	.LFE50-.LFB50
 4595 0198 00000000 		.4byte	.LFB51
 4596 019c 44000000 		.4byte	.LFE51-.LFB51
 4597 01a0 00000000 		.4byte	.LFB52
 4598 01a4 C0000000 		.4byte	.LFE52-.LFB52
 4599 01a8 00000000 		.4byte	0
 4600 01ac 00000000 		.4byte	0
 4601              		.section	.debug_ranges,"",%progbits
 4602              	.Ldebug_ranges0:
 4603 0000 00000000 		.4byte	.LFB2
 4604 0004 1C000000 		.4byte	.LFE2
 4605 0008 00000000 		.4byte	.LFB3
 4606 000c 1C000000 		.4byte	.LFE3
 4607 0010 00000000 		.4byte	.LFB4
 4608 0014 48000000 		.4byte	.LFE4
 4609 0018 00000000 		.4byte	.LFB5
 4610 001c 50000000 		.4byte	.LFE5
 4611 0020 00000000 		.4byte	.LFB6
 4612 0024 34000000 		.4byte	.LFE6
 4613 0028 00000000 		.4byte	.LFB7
 4614 002c 48000000 		.4byte	.LFE7
 4615 0030 00000000 		.4byte	.LFB8
 4616 0034 9C000000 		.4byte	.LFE8
 4617 0038 00000000 		.4byte	.LFB9
 4618 003c 74000000 		.4byte	.LFE9
 4619 0040 00000000 		.4byte	.LFB10
 4620 0044 30000000 		.4byte	.LFE10
 4621 0048 00000000 		.4byte	.LFB11
 4622 004c 20000000 		.4byte	.LFE11
 4623 0050 00000000 		.4byte	.LFB12
 4624 0054 58000000 		.4byte	.LFE12
 4625 0058 00000000 		.4byte	.LFB13
 4626 005c 64000000 		.4byte	.LFE13
 4627 0060 00000000 		.4byte	.LFB14
 4628 0064 2C000000 		.4byte	.LFE14
 4629 0068 00000000 		.4byte	.LFB15
 4630 006c 18000000 		.4byte	.LFE15
 4631 0070 00000000 		.4byte	.LFB16
 4632 0074 14000000 		.4byte	.LFE16
 4633 0078 00000000 		.4byte	.LFB17
 4634 007c 30000000 		.4byte	.LFE17
 4635 0080 00000000 		.4byte	.LFB18
 4636 0084 24000000 		.4byte	.LFE18
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 138


 4637 0088 00000000 		.4byte	.LFB19
 4638 008c 1C000000 		.4byte	.LFE19
 4639 0090 00000000 		.4byte	.LFB20
 4640 0094 48000000 		.4byte	.LFE20
 4641 0098 00000000 		.4byte	.LFB21
 4642 009c 34000000 		.4byte	.LFE21
 4643 00a0 00000000 		.4byte	.LFB22
 4644 00a4 4C000000 		.4byte	.LFE22
 4645 00a8 00000000 		.4byte	.LFB23
 4646 00ac 36000000 		.4byte	.LFE23
 4647 00b0 00000000 		.4byte	.LFB24
 4648 00b4 A8000000 		.4byte	.LFE24
 4649 00b8 00000000 		.4byte	.LFB25
 4650 00bc 58000000 		.4byte	.LFE25
 4651 00c0 00000000 		.4byte	.LFB26
 4652 00c4 2C000000 		.4byte	.LFE26
 4653 00c8 00000000 		.4byte	.LFB27
 4654 00cc 30000000 		.4byte	.LFE27
 4655 00d0 00000000 		.4byte	.LFB28
 4656 00d4 2C000000 		.4byte	.LFE28
 4657 00d8 00000000 		.4byte	.LFB29
 4658 00dc 2C000000 		.4byte	.LFE29
 4659 00e0 00000000 		.4byte	.LFB30
 4660 00e4 2C000000 		.4byte	.LFE30
 4661 00e8 00000000 		.4byte	.LFB31
 4662 00ec 16000000 		.4byte	.LFE31
 4663 00f0 00000000 		.4byte	.LFB32
 4664 00f4 24000000 		.4byte	.LFE32
 4665 00f8 00000000 		.4byte	.LFB33
 4666 00fc 4C000000 		.4byte	.LFE33
 4667 0100 00000000 		.4byte	.LFB34
 4668 0104 28000000 		.4byte	.LFE34
 4669 0108 00000000 		.4byte	.LFB35
 4670 010c 84000000 		.4byte	.LFE35
 4671 0110 00000000 		.4byte	.LFB36
 4672 0114 24000000 		.4byte	.LFE36
 4673 0118 00000000 		.4byte	.LFB37
 4674 011c 60000000 		.4byte	.LFE37
 4675 0120 00000000 		.4byte	.LFB38
 4676 0124 20000000 		.4byte	.LFE38
 4677 0128 00000000 		.4byte	.LFB39
 4678 012c 1C000000 		.4byte	.LFE39
 4679 0130 00000000 		.4byte	.LFB40
 4680 0134 1C000000 		.4byte	.LFE40
 4681 0138 00000000 		.4byte	.LFB41
 4682 013c 1C000000 		.4byte	.LFE41
 4683 0140 00000000 		.4byte	.LFB42
 4684 0144 20000000 		.4byte	.LFE42
 4685 0148 00000000 		.4byte	.LFB43
 4686 014c 18000000 		.4byte	.LFE43
 4687 0150 00000000 		.4byte	.LFB44
 4688 0154 18000000 		.4byte	.LFE44
 4689 0158 00000000 		.4byte	.LFB45
 4690 015c 34000000 		.4byte	.LFE45
 4691 0160 00000000 		.4byte	.LFB46
 4692 0164 18000000 		.4byte	.LFE46
 4693 0168 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 139


 4694 016c 18000000 		.4byte	.LFE47
 4695 0170 00000000 		.4byte	.LFB48
 4696 0174 14000000 		.4byte	.LFE48
 4697 0178 00000000 		.4byte	.LFB49
 4698 017c 2C000000 		.4byte	.LFE49
 4699 0180 00000000 		.4byte	.LFB50
 4700 0184 1C000000 		.4byte	.LFE50
 4701 0188 00000000 		.4byte	.LFB51
 4702 018c 44000000 		.4byte	.LFE51
 4703 0190 00000000 		.4byte	.LFB52
 4704 0194 C0000000 		.4byte	.LFE52
 4705 0198 00000000 		.4byte	0
 4706 019c 00000000 		.4byte	0
 4707              		.section	.debug_line,"",%progbits
 4708              	.Ldebug_line0:
 4709 0000 E1040000 		.section	.debug_str,"MS",%progbits,1
 4709      02004D00 
 4709      00000201 
 4709      FB0E0D00 
 4709      01010101 
 4710              	.LASF59:
 4711 0000 72616D56 		.ascii	"ramVectorTable\000"
 4711      6563746F 
 4711      72546162 
 4711      6C6500
 4712              	.LASF10:
 4713 000f 75696E74 		.ascii	"uint16\000"
 4713      313600
 4714              	.LASF52:
 4715 0016 696E7453 		.ascii	"intState\000"
 4715      74617465 
 4715      00
 4716              	.LASF26:
 4717 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4717      73436C6B 
 4717      57726974 
 4717      65486663 
 4717      6C6B4469 
 4718              	.LASF108:
 4719 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4719      73436C6B 
 4719      50756D70 
 4719      436F6E66 
 4719      696700
 4720              	.LASF58:
 4721 004b 6F6C6449 		.ascii	"oldIsr\000"
 4721      737200
 4722              	.LASF97:
 4723 0052 72657456 		.ascii	"retVal\000"
 4723      616C00
 4724              	.LASF51:
 4725 0059 43794469 		.ascii	"CyDisableInts\000"
 4725      7361626C 
 4725      65496E74 
 4725      7300
 4726              	.LASF7:
 4727 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 140


 4727      206C6F6E 
 4727      6720756E 
 4727      7369676E 
 4727      65642069 
 4728              	.LASF35:
 4729 007e 70617261 		.ascii	"parameters\000"
 4729      6D657465 
 4729      727300
 4730              	.LASF53:
 4731 0089 4379456E 		.ascii	"CyEnableInts\000"
 4731      61626C65 
 4731      496E7473 
 4731      00
 4732              	.LASF74:
 4733 0096 4379536F 		.ascii	"CySoftwareReset\000"
 4733      66747761 
 4733      72655265 
 4733      73657400 
 4734              	.LASF84:
 4735 00a6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4735      73546963 
 4735      6B456E61 
 4735      626C6549 
 4735      6E746572 
 4736              	.LASF69:
 4737 00bf 4379496E 		.ascii	"CyIntGetState\000"
 4737      74476574 
 4737      53746174 
 4737      6500
 4738              	.LASF6:
 4739 00cd 6C6F6E67 		.ascii	"long long int\000"
 4739      206C6F6E 
 4739      6720696E 
 4739      7400
 4740              	.LASF0:
 4741 00db 7369676E 		.ascii	"signed char\000"
 4741      65642063 
 4741      68617200 
 4742              	.LASF34:
 4743 00e7 66726571 		.ascii	"freq\000"
 4743      00
 4744              	.LASF79:
 4745 00ec 43794465 		.ascii	"CyDelayFreq\000"
 4745      6C617946 
 4745      72657100 
 4746              	.LASF24:
 4747 00f8 696E7465 		.ascii	"interruptState\000"
 4747      72727570 
 4747      74537461 
 4747      746500
 4748              	.LASF88:
 4749 0107 43795379 		.ascii	"CySysTickGetReload\000"
 4749      73546963 
 4749      6B476574 
 4749      52656C6F 
 4749      616400
 4750              	.LASF4:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 141


 4751 011a 6C6F6E67 		.ascii	"long int\000"
 4751      20696E74 
 4751      00
 4752              	.LASF70:
 4753 0123 4379496E 		.ascii	"CyIntDisable\000"
 4753      74446973 
 4753      61626C65 
 4753      00
 4754              	.LASF36:
 4755 0130 72656756 		.ascii	"regValues\000"
 4755      616C7565 
 4755      7300
 4756              	.LASF9:
 4757 013a 75696E74 		.ascii	"uint8\000"
 4757      3800
 4758              	.LASF103:
 4759 0140 63796465 		.ascii	"cydelayFreqKhz\000"
 4759      6C617946 
 4759      7265714B 
 4759      687A00
 4760              	.LASF29:
 4761 014f 656E6162 		.ascii	"enable\000"
 4761      6C6500
 4762              	.LASF13:
 4763 0156 646F7562 		.ascii	"double\000"
 4763      6C6500
 4764              	.LASF65:
 4765 015d 73686966 		.ascii	"shift\000"
 4765      7400
 4766              	.LASF48:
 4767 0163 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4767      734C7664 
 4767      436C6561 
 4767      72496E74 
 4767      65727275 
 4768              	.LASF11:
 4769 017a 75696E74 		.ascii	"uint32\000"
 4769      333200
 4770              	.LASF42:
 4771 0181 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4771      73436C6B 
 4771      45636F52 
 4771      65616453 
 4771      74617475 
 4772              	.LASF54:
 4773 0197 6D61736B 		.ascii	"mask\000"
 4773      00
 4774              	.LASF37:
 4775 019c 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4775      73436C6B 
 4775      47657453 
 4775      7973636C 
 4775      6B536F75 
 4776              	.LASF67:
 4777 01b4 4379496E 		.ascii	"CyIntGetPriority\000"
 4777      74476574 
 4777      5072696F 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 142


 4777      72697479 
 4777      00
 4778              	.LASF105:
 4779 01c5 63796465 		.ascii	"cydelay32kMs\000"
 4779      6C617933 
 4779      326B4D73 
 4779      00
 4780              	.LASF81:
 4781 01d2 43795379 		.ascii	"CySysTickInit\000"
 4781      73546963 
 4781      6B496E69 
 4781      7400
 4782              	.LASF66:
 4783 01e0 76616C75 		.ascii	"value\000"
 4783      6500
 4784              	.LASF91:
 4785 01e6 636C6F63 		.ascii	"clockSource\000"
 4785      6B536F75 
 4785      72636500 
 4786              	.LASF99:
 4787 01f2 43794765 		.ascii	"CyGetUniqueId\000"
 4787      74556E69 
 4787      71756549 
 4787      6400
 4788              	.LASF93:
 4789 0200 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4789      73546963 
 4789      6B476574 
 4789      436F756E 
 4789      74466C61 
 4790              	.LASF8:
 4791 0216 756E7369 		.ascii	"unsigned int\000"
 4791      676E6564 
 4791      20696E74 
 4791      00
 4792              	.LASF94:
 4793 0223 43795379 		.ascii	"CySysTickClear\000"
 4793      73546963 
 4793      6B436C65 
 4793      617200
 4794              	.LASF5:
 4795 0232 6C6F6E67 		.ascii	"long unsigned int\000"
 4795      20756E73 
 4795      69676E65 
 4795      6420696E 
 4795      7400
 4796              	.LASF87:
 4797 0244 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4797      734C7664 
 4797      47657449 
 4797      6E746572 
 4797      72757074 
 4798              	.LASF23:
 4799 025f 43795379 		.ascii	"CySysClkImoStop\000"
 4799      73436C6B 
 4799      496D6F53 
 4799      746F7000 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 143


 4800              	.LASF71:
 4801 026f 4379496E 		.ascii	"CyIntSetPending\000"
 4801      74536574 
 4801      50656E64 
 4801      696E6700 
 4802              	.LASF98:
 4803 027f 43795379 		.ascii	"CySysTickGetCallback\000"
 4803      73546963 
 4803      6B476574 
 4803      43616C6C 
 4803      6261636B 
 4804              	.LASF49:
 4805 0294 43795379 		.ascii	"CySysGetResetReason\000"
 4805      73476574 
 4805      52657365 
 4805      74526561 
 4805      736F6E00 
 4806              	.LASF3:
 4807 02a8 73686F72 		.ascii	"short unsigned int\000"
 4807      7420756E 
 4807      7369676E 
 4807      65642069 
 4807      6E7400
 4808              	.LASF90:
 4809 02bb 43795379 		.ascii	"CySysTickSetClockSource\000"
 4809      73546963 
 4809      6B536574 
 4809      436C6F63 
 4809      6B536F75 
 4810              	.LASF61:
 4811 02d3 4379496E 		.ascii	"CyIntSetVector\000"
 4811      74536574 
 4811      56656374 
 4811      6F7200
 4812              	.LASF56:
 4813 02e2 6E756D62 		.ascii	"number\000"
 4813      657200
 4814              	.LASF64:
 4815 02e9 7072696F 		.ascii	"priority\000"
 4815      72697479 
 4815      00
 4816              	.LASF33:
 4817 02f2 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4817      73436C6B 
 4817      57726974 
 4817      65496D6F 
 4817      46726571 
 4818              	.LASF109:
 4819 0307 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4819      43313120 
 4819      352E342E 
 4819      31203230 
 4819      31363036 
 4820 033a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4820      20726576 
 4820      6973696F 
 4820      6E203233 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 144


 4820      37373135 
 4821 036d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4821      66756E63 
 4821      74696F6E 
 4821      2D736563 
 4821      74696F6E 
 4822              	.LASF55:
 4823 0395 4379496E 		.ascii	"CyIntSetSysVector\000"
 4823      74536574 
 4823      53797356 
 4823      6563746F 
 4823      7200
 4824              	.LASF27:
 4825 03a7 43795379 		.ascii	"CySysEnablePumpClock\000"
 4825      73456E61 
 4825      626C6550 
 4825      756D7043 
 4825      6C6F636B 
 4826              	.LASF17:
 4827 03bc 72656733 		.ascii	"reg32\000"
 4827      3200
 4828              	.LASF80:
 4829 03c2 43795379 		.ascii	"CySysTickStart\000"
 4829      73546963 
 4829      6B537461 
 4829      727400
 4830              	.LASF40:
 4831 03d1 72657475 		.ascii	"returnStatus\000"
 4831      726E5374 
 4831      61747573 
 4831      00
 4832              	.LASF20:
 4833 03de 73697A65 		.ascii	"sizetype\000"
 4833      74797065 
 4833      00
 4834              	.LASF106:
 4835 03e7 43795379 		.ascii	"CySysTickInitVar\000"
 4835      73546963 
 4835      6B496E69 
 4835      74566172 
 4835      00
 4836              	.LASF72:
 4837 03f8 4379496E 		.ascii	"CyIntClearPending\000"
 4837      74436C65 
 4837      61725065 
 4837      6E64696E 
 4837      6700
 4838              	.LASF19:
 4839 040a 6C6F6E67 		.ascii	"long double\000"
 4839      20646F75 
 4839      626C6500 
 4840              	.LASF57:
 4841 0416 61646472 		.ascii	"address\000"
 4841      65737300 
 4842              	.LASF30:
 4843 041e 73797363 		.ascii	"sysclkSource\000"
 4843      6C6B536F 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 145


 4843      75726365 
 4843      00
 4844              	.LASF96:
 4845 042b 66756E63 		.ascii	"function\000"
 4845      74696F6E 
 4845      00
 4846              	.LASF107:
 4847 0434 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4847      6F467265 
 4847      714D687A 
 4847      32526567 
 4847      00
 4848              	.LASF89:
 4849 0445 43795379 		.ascii	"CySysTickGetValue\000"
 4849      73546963 
 4849      6B476574 
 4849      56616C75 
 4849      6500
 4850              	.LASF102:
 4851 0457 63796465 		.ascii	"cydelayFreqHz\000"
 4851      6C617946 
 4851      72657148 
 4851      7A00
 4852              	.LASF63:
 4853 0465 4379496E 		.ascii	"CyIntSetPriority\000"
 4853      74536574 
 4853      5072696F 
 4853      72697479 
 4853      00
 4854              	.LASF12:
 4855 0476 666C6F61 		.ascii	"float\000"
 4855      7400
 4856              	.LASF45:
 4857 047c 43795379 		.ascii	"CySysLvdEnable\000"
 4857      734C7664 
 4857      456E6162 
 4857      6C6500
 4858              	.LASF21:
 4859 048b 63795379 		.ascii	"cySysTickCallback\000"
 4859      73546963 
 4859      6B43616C 
 4859      6C626163 
 4859      6B00
 4860              	.LASF62:
 4861 049d 4379496E 		.ascii	"CyIntGetVector\000"
 4861      74476574 
 4861      56656374 
 4861      6F7200
 4862              	.LASF76:
 4863 04ac 6D696C6C 		.ascii	"milliseconds\000"
 4863      69736563 
 4863      6F6E6473 
 4863      00
 4864              	.LASF16:
 4865 04b9 72656738 		.ascii	"reg8\000"
 4865      00
 4866              	.LASF46:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 146


 4867 04be 74687265 		.ascii	"threshold\000"
 4867      73686F6C 
 4867      6400
 4868              	.LASF73:
 4869 04c8 43794861 		.ascii	"CyHalt\000"
 4869      6C7400
 4870              	.LASF1:
 4871 04cf 756E7369 		.ascii	"unsigned char\000"
 4871      676E6564 
 4871      20636861 
 4871      7200
 4872              	.LASF111:
 4873 04dd 443A5C50 		.ascii	"D:\\Programming\\PSoC\\Projects\\GOAL-EZ-BLE.cydsn\000"
 4873      726F6772 
 4873      616D6D69 
 4873      6E675C50 
 4873      536F435C 
 4874              	.LASF2:
 4875 050c 73686F72 		.ascii	"short int\000"
 4875      7420696E 
 4875      7400
 4876              	.LASF68:
 4877 0516 4379496E 		.ascii	"CyIntEnable\000"
 4877      74456E61 
 4877      626C6500 
 4878              	.LASF60:
 4879 0522 4379496E 		.ascii	"CyIntGetSysVector\000"
 4879      74476574 
 4879      53797356 
 4879      6563746F 
 4879      7200
 4880              	.LASF28:
 4881 0534 636C6B53 		.ascii	"clkSelect\000"
 4881      656C6563 
 4881      7400
 4882              	.LASF38:
 4883 053e 43795379 		.ascii	"CySysClkEcoStart\000"
 4883      73436C6B 
 4883      45636F53 
 4883      74617274 
 4883      00
 4884              	.LASF77:
 4885 054f 43794465 		.ascii	"CyDelayUs\000"
 4885      6C617955 
 4885      7300
 4886              	.LASF50:
 4887 0559 72656173 		.ascii	"reason\000"
 4887      6F6E00
 4888              	.LASF14:
 4889 0560 63686172 		.ascii	"char\000"
 4889      00
 4890              	.LASF18:
 4891 0565 63796973 		.ascii	"cyisraddress\000"
 4891      72616464 
 4891      72657373 
 4891      00
 4892              	.LASF82:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 147


 4893 0572 43795379 		.ascii	"CySysTickEnable\000"
 4893      73546963 
 4893      6B456E61 
 4893      626C6500 
 4894              	.LASF31:
 4895 0582 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4895      73436C6B 
 4895      57726974 
 4895      65537973 
 4895      636C6B44 
 4896              	.LASF95:
 4897 0599 43795379 		.ascii	"CySysTickSetCallback\000"
 4897      73546963 
 4897      6B536574 
 4897      43616C6C 
 4897      6261636B 
 4898              	.LASF101:
 4899 05ae 43795379 		.ascii	"CySysTickCallbacks\000"
 4899      73546963 
 4899      6B43616C 
 4899      6C626163 
 4899      6B7300
 4900              	.LASF100:
 4901 05c1 756E6971 		.ascii	"uniqueId\000"
 4901      75654964 
 4901      00
 4902              	.LASF75:
 4903 05ca 43794465 		.ascii	"CyDelay\000"
 4903      6C617900 
 4904              	.LASF92:
 4905 05d2 43795379 		.ascii	"CySysTickGetClockSource\000"
 4905      73546963 
 4905      6B476574 
 4905      436C6F63 
 4905      6B536F75 
 4906              	.LASF85:
 4907 05ea 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4907      73546963 
 4907      6B446973 
 4907      61626C65 
 4907      496E7465 
 4908              	.LASF47:
 4909 0604 43795379 		.ascii	"CySysLvdDisable\000"
 4909      734C7664 
 4909      44697361 
 4909      626C6500 
 4910              	.LASF104:
 4911 0614 63796465 		.ascii	"cydelayFreqMhz\000"
 4911      6C617946 
 4911      7265714D 
 4911      687A00
 4912              	.LASF41:
 4913 0623 43795379 		.ascii	"CySysClkEcoStop\000"
 4913      73436C6B 
 4913      45636F53 
 4913      746F7000 
 4914              	.LASF83:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 148


 4915 0633 43795379 		.ascii	"CySysTickStop\000"
 4915      73546963 
 4915      6B53746F 
 4915      7000
 4916              	.LASF39:
 4917 0641 74696D65 		.ascii	"timeoutUs\000"
 4917      6F757455 
 4917      7300
 4918              	.LASF32:
 4919 064b 64697669 		.ascii	"divider\000"
 4919      64657200 
 4920              	.LASF44:
 4921 0653 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 4921      73436C6B 
 4921      57726974 
 4921      6545636F 
 4921      44697600 
 4922              	.LASF15:
 4923 0667 63797374 		.ascii	"cystatus\000"
 4923      61747573 
 4923      00
 4924              	.LASF22:
 4925 0670 43795379 		.ascii	"CySysClkImoStart\000"
 4925      73436C6B 
 4925      496D6F53 
 4925      74617274 
 4925      00
 4926              	.LASF110:
 4927 0681 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4927      72617465 
 4927      645F536F 
 4927      75726365 
 4927      5C50536F 
 4928              	.LASF78:
 4929 06a0 6D696372 		.ascii	"microseconds\000"
 4929      6F736563 
 4929      6F6E6473 
 4929      00
 4930              	.LASF25:
 4931 06ad 746D7052 		.ascii	"tmpReg\000"
 4931      656700
 4932              	.LASF86:
 4933 06b4 43795379 		.ascii	"CySysTickSetReload\000"
 4933      73546963 
 4933      6B536574 
 4933      52656C6F 
 4933      616400
 4934              	.LASF112:
 4935 06c7 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4935      73546963 
 4935      6B536572 
 4935      76696365 
 4935      43616C6C 
 4936              	.LASF43:
 4937 06e1 72657475 		.ascii	"returnValue\000"
 4937      726E5661 
 4937      6C756500 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccQrIc22.s 			page 149


 4938              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
